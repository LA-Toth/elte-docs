%!PS-Adobe-2.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: HIPB-FV.dvi
%%CreationDate: Thu Sep 30 19:16:38 2004
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMBX12 CMR12 CMMI12 CMMI8 CMSY10 CMSY8 MSBM10 CMR10
%%+ CMMI10 CMR8 Times-Italic Helvetica Courier CMTI12 MSAM10 CMR9 MSBM7
%%+ CMR6 CMBX10 CMEX10 Times-Italic-Italic Mathematica1
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe HIPB-FV
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.09.30:1916
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: Mathematica1.pfa
%!PS-AdobeFont-1.0: Mathematica1 001.000
%%CreationDate: 9/29/01 at 12:14 PM
%%VMusage: 1024 31528  
% Mathematica typeface design by Andre Kuzniarek, with Gregg Snyder and Stephen Wolfram. Copyright \(c\) 1996-2001 Wolfram Research, Inc. [http://www.wolfram.com]. All rights reserved. [Font version 2.00]
% ADL: 800 200 0
%%EndComments
FontDirectory/Mathematica1 known{/Mathematica1 findfont dup/UniqueID known{dup
/UniqueID get 5095641 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
20 dict begin
/FontInfo 16 dict dup begin
  /version (001.000) readonly def
  /FullName (Mathematica1) readonly def
  /FamilyName (Mathematica1) readonly def
  /Weight (Medium) readonly def
  /ItalicAngle 0 def
  /isFixedPitch false def
  /UnderlinePosition -133 def
  /UnderlineThickness 20 def
  /Notice (Mathematica typeface design by Andre Kuzniarek, with Gregg Snyder and Stephen Wolfram. Copyright \(c\) 1996-2001 Wolfram Research, Inc. [http://www.wolfram.com]. All rights reserved. [Font version 2.00]) readonly def
  /em 1000 def
  /ascent 800 def
  /descent 200 def
end readonly def
/FontName /Mathematica1 def
/Encoding 256 array
dup 0/NUL put
dup 1/Eth put
dup 2/eth put
dup 3/Lslash put
dup 4/lslash put
dup 5/Scaron put
dup 6/scaron put
dup 7/Yacute put
dup 8/yacute put
dup 9/HT put
dup 10/LF put
dup 11/Thorn put
dup 12/thorn put
dup 13/CR put
dup 14/Zcaron put
dup 15/zcaron put
dup 16/DLE put
dup 17/DC1 put
dup 18/DC2 put
dup 19/DC3 put
dup 20/DC4 put
dup 21/onehalf put
dup 22/onequarter put
dup 23/onesuperior put
dup 24/threequarters put
dup 25/threesuperior put
dup 26/twosuperior put
dup 27/brokenbar put
dup 28/minus put
dup 29/multiply put
dup 30/RS put
dup 31/US put
dup 32/Space put
dup 33/Exclamation put
dup 34/ForAll put
dup 35/NumberSign put
dup 36/Exists put
dup 37/Percent put
dup 38/Ampersand put
dup 39/SmallMember put
dup 40/LParen put
dup 41/RParen put
dup 42/Star put
dup 43/Plus put
dup 44/Comma put
dup 45/Minus put
dup 46/Period put
dup 47/Slash put
dup 48/Zero put
dup 49/One put
dup 50/Two put
dup 51/Three put
dup 52/Four put
dup 53/Five put
dup 54/Six put
dup 55/Seven put
dup 56/Eight put
dup 57/Nine put
dup 58/Colon put
dup 59/SemiColon put
dup 60/Less put
dup 61/Equal put
dup 62/Greater put
dup 63/Question put
dup 64/TildeFullEqual put
dup 65/CapAlpha put
dup 66/CapBeta put
dup 67/CapChi put
dup 68/CapDelta put
dup 69/CapEpsilon put
dup 70/CapPhi put
dup 71/CapGamma put
dup 72/CapEta put
dup 73/CapIota put
dup 74/CurlyTheta put
dup 75/CapKappa put
dup 76/CapLambda put
dup 77/CapMu put
dup 78/CapNu put
dup 79/CapOmicron put
dup 80/CapPi put
dup 81/CapTheta put
dup 82/CapRho put
dup 83/CapSigma put
dup 84/CapTau put
dup 85/CapUpsilon put
dup 86/FinalSigma put
dup 87/CapOmega put
dup 88/CapXi put
dup 89/CapPsi put
dup 90/CapZeta put
dup 91/LBracket put
dup 92/Therefore put
dup 93/RBracket put
dup 94/Perpendicular put
dup 95/Underbar put
dup 96/Hat put
dup 97/Alpha put
dup 98/Beta put
dup 99/Chi put
dup 100/Delta put
dup 101/Epsilon put
dup 102/Phi put
dup 103/Gamma put
dup 104/Eta put
dup 105/Iota put
dup 106/CurlyPhi put
dup 107/Kappa put
dup 108/Lambda put
dup 109/Mu put
dup 110/Nu put
dup 111/Omicron put
dup 112/Pi put
dup 113/Theta put
dup 114/Rho put
dup 115/Sigma put
dup 116/Tau put
dup 117/Upsilon put
dup 118/CurlyPi put
dup 119/Omega put
dup 120/Xi put
dup 121/Psi put
dup 122/Zeta put
dup 123/LBrace put
dup 124/VertBar put
dup 125/RBrace put
dup 126/Tilde put
dup 127/DEL put
dup 128/FractionBarExt put
dup 129/EscapeChar put
dup 130/SelectPlaceholder put
dup 131/Placeholder put
dup 132/Continuation put
dup 133/Skeleton put
dup 134/LSkeleton put
dup 135/RSkeleton put
dup 136/Spacer put
dup 137/Cross put
dup 138/DblEqual put
dup 139/Grave put
dup 140/Acute put
dup 141/DoubleAcute put
dup 142/OverTilde put
dup 143/OverBar put
dup 144/DblUpDownArrow put
dup 145/DblUpExtens1 put
dup 146/DblLongLArrow put
dup 147/DblExtens put
dup 148/DblLongRArrow put
dup 149/DblLRArrow2 put
dup 150/DblLongLRArrow put
dup 151/UpDownArrow put
dup 152/LongLArrow put
dup 153/LongRArrow put
dup 154/LongLRArrow put
dup 155/ColonEqual put
dup 156/Diamond2 put
dup 157/NotSquareSprsetEqual put
dup 158/AtSign put
dup 159/Solidmedsqr put
dup 160/OverDot put
dup 161/CurlyCapUpsilon put
dup 162/Prime put
dup 163/LessEqual put
dup 164/Fraction put
dup 165/Infinity put
dup 166/RuleDelayed put
dup 167/ClubSuit put
dup 168/DiamondSuit put
dup 169/HeartSuit put
dup 170/SpadeSuit put
dup 171/LRArrow put
dup 172/LArrow put
dup 173/UpArrow put
dup 174/RArrow put
dup 175/DownArrow put
dup 176/Degree put
dup 177/PlusMinus put
dup 178/DoublePrime put
dup 179/GreaterEqual put
dup 180/Multiply put
dup 181/Proportional put
dup 182/PartialDiff put
dup 183/Bullet put
dup 184/Divide put
dup 185/NotEqual put
dup 186/Equivalence put
dup 187/Approxequal put
dup 188/Ellipsis put
dup 189/ArrowVertEx put
dup 190/ArrowHorizEx put
dup 191/CarriageReturn put
dup 192/Aleph put
dup 193/IFraktur put
dup 194/RFraktur put
dup 195/Weierstrass put
dup 196/CircleMultiply put
dup 197/CirclePlus put
dup 198/EmptySet put
dup 199/Union put
dup 200/Intersection put
dup 201/ProperSuperset put
dup 202/NbSpace put
dup 203/NotSubset put
dup 204/ProperSubset put
dup 205/ReflexSubset put
dup 206/Element put
dup 207/NotElement put
dup 208/Angle put
dup 209/Gradient put
dup 210/RegTM put
dup 211/Copyright put
dup 212/TM put
dup 213/Product put
dup 214/Radical put
dup 215/DotMath put
dup 216/LogicalNot put
dup 217/Wedge put
dup 218/Vee put
dup 219/DblLRArrow put
dup 220/DblLArrow put
dup 221/DblUpArrow put
dup 222/DblRArrow put
dup 223/DblDownArrow put
dup 224/Lozenge put
dup 225/LAngle put
dup 226/Diffd put
dup 227/Expe put
dup 228/Imagi put
dup 229/Sum put
dup 230/LParenTop put
dup 231/LParenEx put
dup 232/LParenBot put
dup 233/LBracketTop put
dup 234/LBracketEx put
dup 235/LBracketBot put
dup 236/LBraceTop put
dup 237/LBraceMid put
dup 238/LBraceBot put
dup 239/BraceEx put
dup 240/Slot put
dup 241/RAngle put
dup 242/Intergral put
dup 243/IntegralTop put
dup 244/IntegralEx put
dup 245/IntegralBot put
dup 246/RParenTop put
dup 247/RParenEx put
dup 248/RParenBot put
dup 249/RBracketTop put
dup 250/RBracketEx put
dup 251/RBracketBot put
dup 252/RBraceTop put
dup 253/RBraceMid put
dup 254/RBraceBot put
dup 255/Wolf put
 readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/UniqueID 5095641 def
/FontBBox{-120 -220 1544 923}readonly def
currentdict end
currentfile eexec
D8061D93A8246509E76A3EC656E953B7C22E43117F5A3BC2421790057C314DAE3EFBFF49F45DA34B
424A961BE670A194E7E4BF0FF295DEE23134A14A7C08B6602621D885EE631B1D8D3003CF2093E039
4D77FCEFCA8BA8965D1783DCAD9EFE6C7E420CF7B898933309A89F84721ADE7F3AE4443C5EAE8155
759A9EB6F738F7BA81C192EE45DAD00F398FFD6904111BBD91BFEE328004F2A18BCCD98DCDB2CE23
961B00F204E50EA022D00CE2B68E653626D4BB5AFA334A0D657307416FAF7AA8C43ED4DC541F1B7B
B7500B3F423D9D369F8192FD00A59FD5E6ABC70F788FB70976CC1907DDC309F4B690AA2D2BF12CAE
C493958CC0E76CE9EB5FF8BD1F1650F659E5C123EE455B7D77C39952C212AF319BF19A91E36DE52F
0EF84B602704BD6C7C94E1B0E067210DB919F6231755A2CC5D5FE129279B43A2E2CCD27F56F00B05
C8AC10AB07FABBEFB3509088301FE78CAF8B440C5BA2FFE06BBFCD066046618F3B6AA2E4B17B296E
1F3F1560E19CBAD54E16E4B7A65622E468F6BDF97C50277E355D1DD8843D0A449A147FFBA071BA99
CF70D7576DC18B96FEAF8070BF25F3A3141F873241EF4A07F332306B56F1D5909A4F233A9DB3A08E
E43DF38DD6DB2D6DAB908967A907303EE1FA04F048FA6EBC531738C170B8B0F095FF3B05D14C2BDC
272F7EDA8926A77D9CDA49A90AE1387A51A24ECDB2E4E287B0F95A83AD2EC0310F9B6F396AC10479
835035FD5D4C84D91917FE8A8755C976504AB1A830ED516B5F325EA4ADFD115900D23039A2BC84EE
D21CC21E2BBE29A5E0CF28BE047CBD515DF7785F37DDD4474042B102A1F28193BB8567FF6FDEF811
25CE9A504BE5011C0010DCEBCF321824C9DA249D8DB11F79298F7B674CEDB6F33C111F8B0115E407
99E0FE1B6CE9F6B2A3EED1827A9CEB453D643FE5CE2540DCBCAF7B2EA2C8F0AE9434D4BAAEAB3488
FEC7541D57179BDEAA0BB6145EA783E73E70E0AA71A4FA58E81EB510E9FD2CF4ACFBF28E48CA313C
CF5ED2BE032B7C9A07ABBEC9CCD8D5AC9F775D36BECC252B9FE01B6AA79A70E22478904DADDA08BB
7CA3B66F3A83AEEBA37406127353790348AE5FBD144ABD8E1B32D1BCC70E2BC22A63E854D38317E6
BB97C52A6C9B0C6AB5C336CE2D417A714825DCD237F7486C33925A995CD8AD3B359176C4CA775FE2
2C6F8A7C7343F31F39D1B9A5A744973BF65D655DDB59E3495B28DBE2A877EBB32A22A4AB8EB13C67
02B239F6932E2DC8B4B88915923B1C2AFF2F876A31F765B91747D5A858BD632B0BE4F135AC484016
AE1BC01E44B6653A58EE1380B6DF24AEB73220A36FA8FDE9A152C16E049D2F247A9AA71CD2DF3D9E
653054FAF518BBC1EEB43200DB0BACA93FEA9445FA5F32A99926C4F1F2370B2E3E03CEFBEECE5D5C
DE299FE1641A9CE0C90E42E7C465DF8C19C153EA76C11791F8E112853E708CD0F6EFC22E44808A44
3686442645D643E7118D128BF34188FD313E53B8E951E605E96825738C4DC893D942C145C3E1153F
CDED16D1EE10374626F45781461FFC94C77D431BCF167FD29136A0B369631E139A59B06AC5281B3D
52470B38237B469C0E49CBE74C82A940F8AAD10E05C5DD2A8F3218C4BE40DCED0982770869190845
D2E8BA2A1A2F9CF16DDDE418B6E2013C3258FBE9AFCDACCD57B01C4FEF3526C06FD5BAB6F195C557
23A96FA3E5CDB2ADC9AA8989DF78F163F19E26F3B9EAF60D44B745FCA49B09D9CE5CC16D1E2C78C5
A28F14D3374956E9721C0542A01A731A3D5A771C7B51FB72960BB22C99BC8F216530AA86C1A0346B
3D986EF1DF68BCC46EC4C809C6D54FB9C50F225ABA2C96965F4DE77E2C5D131318231C6773F0976C
DBD016B803C38B8923822BDF160FB87BBE744D0953EDEBDE87394282B9950C89F58824D731355E8F
A3CE364F742E3337A983BD1219CE8787CFA6925B560001F6F78343647821D408B60965966C16C454
394D33268483F51984614FD9964CCE5F1AA4AB12144874A72D3FE97F4416ABE4213B4EDCA9ECF73A
937B562F978E059705E561A6D0C8B89B59B4CAB2248BFC4A6D3D98F89FF38A4D1C3E5A4570E2E2E8
D328772E11DEA2116C260B13328045139A819F5489A2C302F311898230CD26DD03E6CE3BE75EDB86
0D982FBC8E1E24D1F83E8CA64174495B2F32BDF0505FC96E9C65FDB0EB0C4ADA410F0A1C4BB4D551
93B1AA5EA1F988882A56413F77CF24FF6516CD5095077BA566116797895FD7EA616D10510957025A
1DA05064FD9176303A248C94CE2A9875C03C7D8755A1A8010B712B64BAD73BEA4195D51A328F076D
12C0E52E87D98A5269D157D544CD7B4E1CAAEA6BDD59F08D0C5FBB84A6B099BECF8BEB721A874BAA
1BD1F8CDB5ED5CD3B49A763EAA36D33837667A6643B83537EF5515DBF7659E28692E0ACEB48FD051
45534A443092E0A510B05B5B51B402CB3372A4E8BAF98A7FEB6D8BEF6B364A5EA0F3FDF301A44EE2
3485D4493E7B4C33E0E352202931188D156983C40F7A4B615B6F5281B33FB32A2E6A0F7AE84BEA2C
5C3635D7DA17371D608847EB402270B83293EC09E4B1D85996C1CC81196BE590EC9EF0F258364746
BC4763976FDDB3707D37AFCBDC0F4EB2B1502F137EBBB1541B992EAD43B5D64CCDF505FF2F127115
4857C69B689A11760979F6D2BB032CF0DCCBB33D2B6F6D6BB29A1D0E371AA5869A408225C0AFF523
CEFB08A7D3D17DF9064010363196CC569C436E720B1B4573CDAE1CD93A10FD2D4ACB14E47046B5B7
66B75B40BA97027FEC4218980B002FAB60A9F1F5A37861B9A63F696732F8127B2C6F036BF32311B8
FF08A489E88218092D57A99C8981EF8CBBD09DF49CC836B9C1968692D1FB551F47619F020289F1A3
D3898A96DC1C7D39A21B49C2D0DD9508CB8A8BD6A5EB40FF86F555FA32017B67AEC07BECD659E8C4
8DD1D43E8D1EE08A117479015F78BF20D3318224572D9C90884856E4307A8AFFC83EDD317B008484
3BBE8EB2A4E2D70077A639FE3637C3DCF87C67F1BE62E63CC67BCEF8EBD07E030524A53DD440F2A1
3A019B7AA89E155AAD1497974258A01DA45DE1D94BB9F925290FE9BDDA29EA3F2BF1E64DF7EBCFC4
23AB2C7310D9D87A5CA673EE95189135E1B134B431B231428FF2BF64C8F155CBDDAD17BCB524CF7E
ABD66B75705BFFB1DDB27B72D681D7AA19FAD0FF23EEF028B606DD20D58588AACB299A3CF38372A8
E7494A65227C1E4A231AC7843962B8A4A7BDD90F3F8B83277E696F3514139BB8DD207641B62286F0
0E32C7FAD7029DC0E092564C7CE1BC5240FCBFB00A06F075D9536F0326CFFBA958BA7A1A11AA047B
B14E7DE16761BB0FEF19ABE85154359807C339961B9695CDED59E489CA4D9BB75D86D9EDDF0502BC
0B4EC36B1D71FCD4E03881ECEC703E5DA23B3F5DB98CB8DAED81D5BA20B844A92A4B92FE5B082952
6837237C7F994786878404BE744D0953C676E52CB05FCE193E8827F977B31929E36E320E770A6F1E
972B84AFA21E01719759DF0132C5CF9692BAA487E86E8453C09FF97642600D1024ED5D6C7D5B387D
CB5E6147D20B4A14D7D485B5747D765C5A1CA40B9416DC4EF5DC08F43F0706B27B1C90E901556E1C
EFF304EA8DF8D727E4B7E7CEAD14E4FC7E76002DBC37B92BD0E58AF29DA7DA91E6F99DADF1A9CBDD
04648E2F5B811F2AF0729646B17D32D7EF25AD47E267EE53A61A7CD744C9ABFDB1EDB71C0705412B
15769188CA1601AF0395796FAC0E2139EF90FAA65D27AAEEEE319D2831A56CE82203523097D0574D
22742D17E519D95560B8445B5B29033BF3454B94F20C23EBE8B90DDF26D903F1D66CB39D3A64579D
39D136C537CCD9FF2D6ACE5F79DE696C7330C0C4EA179D7911B7B67858D86CEE0833AB1E105B1993
2A9BD572C41E78FB4A2A2421514DC2066E2F56101A9027F4BBA5D48E5DA9218E81CE46B95B50380F
560C67A5D547A8D32610AECECBB6F5A09DF44994F6DAC64F7399C07E182033BC1B9A32B69C41FDFC
7E1DCDDF273F045F154D727AFEE3CDB816CF2ECDB6733C579276353DD59C9D2AFA455935C1FCD0AB
7D57F9DD79FBCC7A45E5E5A501FF17EE1C5FF0823C6FDE29C60F85F6786940D8E3540E891B5BF7F5
D36C57AC3AD359BFAB12B215E7FC94B933386C250E6B236506FA3D151ABAD893A817772071C09144
6E5FB23A17591A4CECAA46DD46E3C41B4578F21D8894A59B72FAF6F88EE6E514FBD2FE69447D2B59
9A6AA8BC5C1FD5C25E50BFB5CE5DBF5AD5771BC42FCC3706B6E9F7E4FAAFF2E63ED1684C5A4C136D
609D03E31EBCF31E864AAA74D8DDBCA52F85CCF14AB739CC55617EFC964D6CC6988AA45245B19CE2
B63CB865DF1F1DA4A200A4A043C5CB706CD303EB31C32866ED92077AB11BF136D158840EAC67E7A1
1BC2BFDCD5894AF735D677E1AC98BF3F19F69AF75355F168632037F6EDEBF61BE5854057AD05972C
7DA8D37AE65D35738547A9D835C6351D8D732F8C0DC49D7605F00A6A6045559D3A0B0CC21DFDD75E
2FCF25522001741EBBEB5CC97DDBD9DDCE490FE3CB186C101940DD02CACB685ECCB8C1DEDCDD4156
F5F9F6B3CA53EC6E7E8A2F8159451CD5479D91BFBF91C6B32A1E0053017369330EAD2DDE323BCAC5
EEC91A595473F447355B1BDFB873D0B538BF54AFB8EAADE5309E1B74283218F59272E59619D66405
E74B5A9D6323CB76AF00FB27FD984F740601248C7206F59EF7FF4E95AF95327D12C47D2D34CBFF33
29F28236831D7F0FD9D633B940D8282E1F1D5D95616CD839C6B41A7195A22B7A320864E48943CE99
C68E3591A97689986A6536C3A1C37DA9838FF71A8C1A03094537C95D3585DF5AD9292874D8D05720
030133B02E2754DA24712B52D6D8871422C709532B09D147EC8ACD861FA5392A82A6C2981347E327
1986017B8315822B5FCB19A1B31BF6909E0D6490EC823434BFCE031045D20FFC675A73EBD7A39A50
44C3B40906186CCF6E8502CD7915F053BC8CF6BE9FDD9A0330AE943D5C9A11D60D43F5BBE8A045EF
CDB7D19C0053F4F082303442C35C432E0DA4408C5917D24A6658DB807BD754AF140CE84A34F79851
9323060D60F4EAC0E82D3E17042BB6729C69A8B8774904C6214C2EB016C528DC1428DB41075AA6C5
4E4D849901838C6B6DADF7B67CD0CBC6EE1B415B44654D89397274D4A6AD2BA69DD81567F5B802F2
684DD3516ECA0F6D66046EDA0B2B38F420A238D67D98676925ECBE6711D64DAE5DBE8AC5473A2EE9
97AE65F0715A2E5DB2C75F20D9939EF58692EDA3AEA81F25AEC888327CFA6CC13D496714E63A1A87
11FC50250D6D23FC7A8017038281F659A685ED7F1BB1ADBF8833ABC6DBEC0D96D08334E58C67E0F9
0046132F0D4FBCB9CDF52EE74561498B42701AB826A6DD77F46C14753748E1EC66F4BD3583FCB4F1
DC91050CF18B0D51BC366549261282779FC9694A7B987973C0D59F65CFF3CDB88D23952E46F5EEC1
BDA0DC354188C11B0FA191F5C11A45BB9093701B33B8E7AC1A8621793D5326E92CDD3A76FB9B67D6
860567B9CEE7B9F9056C6E9971F642DC0BCC1D2882B5BDF1B1CDCAA3FC61775A74E70CDFC128DE0F
9606091BB8E53905108EE77A1D3C506550FCFCAE454B020379BE3A7D6C62D162697AF1383F7BC8F2
34FD616324C1E56E3E440277862CAB2C02395D9937816117F71A6828344182E6B5AF2799E29A6611
9C0543E135300E44746EF2EBA57C4EABB1A15D8AC6D037F4BA2BE1EB4D1A7496F9711FC67E56D4D0
FDA4D810B5383A72ACA15872DE9F3A9890E33759CE4DA493691BCA47A92E42D950DF588C3574D6FC
72B5AF7DDE915E3F5925B3E97DEBE6A4208CE7337754045607679296C4EEEA3A3EF1915E85EB1A32
F1BBADB2904B09806631E20BBF5E57AF11BC784C75BF049B4BC7E479F1D4AE7754CBED7B11ED80A5
2DD0006FAE5CC23A7C234CF628B42F4104A490E7D59E8B1F2A1395D37641C478FF8CB9FB602B29FD
3E48D6087CAEE48B523887F27F69DB32BF80B760B030A6766F8F9B19DE70704DAF81D3DED2BF663D
89B5BD8AF253BB8FA59DF84A52FDED83D2737532B6D66AFB9EF0446ACD44BFAB797AB9FDB47F2E18
8F0A55887853772EBFD029B5FA0AFBAF10A88D464BD6F634C5839B230D583E36671A51DDB1EBF471
8ABB84D057729D514751B0EEF4F756B91DEDAD7D9AD529B3886008F1F32645F3A205F304B2A8D808
D37A38E389B8587E8D3654DC374568FCEBBA160395BE1D132B1ACB434164525FBF250A5AA30F3520
F0F2A75F9D1B7C6EAB0223C209A120D894D6ECA336B57B7F2AB0E2A94E6616D7539010C700311966
7B4A9EB3A812FEF4D100AB4C036401D21DDF8AEB393074638D154418D3A7AE51CD1F0C2D5CF4B475
3B582D5071F91E6D3AFBFB09EAABBEAB2A60A5D388D16232939B5483CF7D5C1C9D05DDC85B266F39
6F61E179AB9FAB644040014293EB53F2B50E8751F9D92D1DAE8DC89594905A39357C0098265FBD24
E407F9A22027E36D5608FAF15BD9E354228E3BA943EC30301ABB2CB105F3B6D57C001EBF8328A8CA
318A7B1B999AE8BF9E2FD530B669640116149B622EB3C0A8CCDE62449DE9D39E0F5E5E01CBBF4F5E
52B33A2BD60B52FA4A5CE98B7313FE4C3FA30FA07DE4516109C3EAEE97ABE430C505647DD8B3DBF2
BB4B3A806B14A9E0F629863F15D12A1CA62E8E055FA6ACABDE1926D3231CAC271C30A3F7AAC6084D
D88628B943052B618E4E39148600AC1EDB57B0835C291F73D29C51FCA3C5EFB1DB18A5CA47433B45
C57EB3CB28AEBC68E4171E6DE357793B0FD2A1F4E76180248017112674DAD7ACA6ECAAF209CA174A
5603CEA5CE528F20919443900636E2FC79C303EA7B467A3F001EA8CB849BCF28BF40A3364C08ABC9
B5D935CFEDA827A8C3FE2F6ABA54017D2AD0393A05AE21F7AE1F58AE1E992B5C889219DA157FA7EE
92E291DE2F9DFC244F2CF0FDCEFCACC487F0EA830985B687556D5AF53B81814DE9CE0C6C430DCBCE
51EBC6091B4E0227732E07DF20D59E9EED4D8A83761CED84CCE244BFD6A39103A2B48A684AEC9210
5C94495D54FD6690AF857E5A3915E6A15689F1816F75F1FC8D5769B240639B339EBE54BC6D84794D
50F4EBE892530351984C6F8BEBE097CD46F4FED7D46E32830A16F77C13F13D17003737482F02D1B6
F04C57B4C2B1929AA315B4BE1C7C9CB55F8981508546B67E4EBF84B6026C355C5E4E07CD98C95F07
56F6643FB1DD7D8C77C4AF4C4F23602DD3F61D1C46583071AC460E74084F7F7CF812BC53975CAAF8
B3C1160B5D6864AF08A1733FA893CE4248C8F8B46AEFCCF317DC726BC1E5F2445E462E0591BEAAEA
49AD8E4E2D3CF07F900EC46D596E9CDB3A8710A0B93CE5DA9D35E612596A6374F35AED0EF55DC46A
8E14A91163B87417259DE926BBC3FC5423FF0AE2AA6D740BFFD26981A57C8C1D97FB04A90A567296
B07437F94C8FFF4709213DD5D8862A777CF3F97723F43A4F913F4A30F7554ACDAE34713654E21731
C594C3718C0547FCDAF7BB1620B2D6BB19E65596A585290CC43F50B34A2FE6EB1E495ACFFB16DFEE
8784B66FCB9359600412969E2BDA330C421C68345A797C49728450A6CF41C926AE8EBBE80BD97863
593C3E8AB5415A8BA625957F242378948F5C7EA9C2641312E8E46955FE5C1A1824C71D3B0C9FD211
7CC965DA7C21D257587F291AB7C594459A11B977A278C74CF5E6598B0C75ABBB2FC1B3D167D7E31D
B519F4A0BDA650A3FE7F1A281DB9B69B57A23656BD820B22D0E30B07361FE7C90933E24A32B6DE2D
F240635D543315226E32487F264AFE83EFEAC74117321A82A92F4FC7B259F26DBE74C966B4CB3F4E
3499E30B9B326F72D73919D9FA9024AAC0B95B6751AD4CE569CC3DDFC399428DF1298FB1733FFCE6
240FB3BE3A2837E1A66E08B784CDD131B5A61423508000785CDC5610CE4DA1DD314131767C8857E3
3D9741EF3FD7B8D0AF0371CFFA3DCF74FF2D3B421AC0339EBC05FB4B61A2F46D6BD1144747AD148B
7968D7DF4D0F742AB39B0A04A88D66F5CF9876970879879872BFDA0C56C253DE5C72016B4990CEBB
2455DCDEC7465EE7C7E1C557B570E9F3EF3E31A22DC8AB9B17F34F48E135BE7820ACE383DB7C5B05
8A9DC855C6850E49AB7D7D00ED2D23C50AEE671B11752F0A682EFE179CECBFAB47B76676AC0E8FD1
0A47353D3AC3477A59B0F3CAF22849DE97AAC8B79935F7C57F3052DE7E13BA0FE7CEC4685C86E841
EA8C7D6734D0FEEFF538CC2AA1414EC9126637E169FBE4ECAFDFA29A08451B25954F0094710195E1
69E0A6004419E432E9319BE2AEC8D93407B25B758336946C6E30032657DD857BE9C0A05F487423D2
0C2772D4416D27FEB5CCC971DDEDFE9B8C2D7DF9DEC90D0868D5DD18850BE567A04D08310883D9B2
D50B817D0690F8550E238C1139C0A117B48199B1B4D489C9E52C58E0CA75E6C386ADD447D8AE52D1
D979FD52A50D82BBCB8867B5D49C19BDEC414929DB67A00AF7C6482A87E46BD11D8E4E52783E5845
FB2CC7439F99FF6552C7288354B436B1C361AB8C2932F77B14A50A7407FC0BCC29662D710248CA46
AC42A03FBBEF9C972783942F3721BD32BDA3273D1E353D9E013D4CFF630BFE4E7C2963FECFE350A2
860421D17D6ACA888FA26403726A0E16BD10638D8511A2C8A36C99E9B72A422038E1149BF88A7CA1
B2DB196333F3AD32D6FE28F18FE1ADA06FD25E4597936A924E71C188B9E8779BDBA928A182042C96
F6A14A6FAB5C1A819DB8E9374E32F77393734A65606809E90D188F749180A3E6CA7AD8044E168677
15FDFF350D70B14454B692715DC3AE2CAA561FB953B478E873EB19C41A8D83288451E4E910D5988F
33D83C5974DD0EE4DF2E6C849C500D0714038ECB1E9336D71D852889F2FBCA6769949699BE6BBF19
A9318CCD7C845D0EC7FF3CFD871328CF7B45E6BBBBD16094E8ABE4D3789DEAD2C930AC8D810C911C
03AF2BDA4EBA62810F19B4506592005ACFF16EB58E33D6A71EA4DAD28A2D7B10FF89ACAB4BCC0F96
E622EBA20347AE04C62A298257D1623977D185BB46B42CCDD733F72B37072B8DFAA5D7FF77E35618
3F6D25EE1D951F7EBFBEA8FA17A859B8545BDB212A6BFE9C3078C32124C4E5D4DA09404E40498F76
7B7164C13E12BF006EE8DE408070296EF0A08AF759206DB3C445BF49EAB18ECDE1FEDEFFAB653FDC
B13FA4649B35D12266FD42D0498331560E96F54D4238678F70233F56097E1944FC671D6BB1AB66CD
E0E9DC24349E44D67C36B3E3A00B07755749A597DF31C25F28D55779841BD3F6221BCDE389852DD4
590E075C1298B36181D9F64BDCB54A556C05A9EF661EA1CC7C7549A3E1CCF79B87A6E71C3ACDECC9
C4EFB05B643744407029258B8225DBF960DE529EEC262D1D3113F6CDDBCF4BDAB706BF085C0FF2EE
E8420CF755E46B053B774DF37C5683F8432EEC183C96176BFB24B3F478FACACBF1FCB73D83D4D857
2D0F15783C8AE95D7CE959D794FDE1D973867D8F30A301598BDB7F2824B2629D64B88F0FF4498B6F
3728CF8916EA884C5930677E7481F90C85ED41DD28AA00E714D3A4F2CC136E417A4C591C7944C409
70D2BCBE410A940937C3CAA118FA32317444B401968B8ECB2F0B3C8DAF6D4886C2015000A71FDAD4
066B82312A4CD1E49A9ACFA05C3E7CA5A5CB3FA713CA0AD9E66A34730A36612C72D1F803D4CB1501
9184FA2FDB3E5D067BC64B29299D5531565264B70FFFF86F5A5B03848E55D73337650208D21F35BB
D5C14748CBE17EB3A7E02BE53136DC69E8740C597CE28472CAEEB96EF2A5752CF17CFBB82F6C104F
2BBB50C216C49E8AB7E661207E1742B35392752051A1E409BEDCDA2654CB5155B770C8C5E4A2968A
A35CF1924D0C74A8D23AB811B7DCE60F1EBC1494A295C8D670E84B7B886A6064151065BD96F2D364
7BA049A444CF16EB6432CAFCC70FF2E8B354F55A192C94BF08D156856A6512403F5140DF4C8D254E
DA59B2B3ADEE19A35E9A61202B711193A7E7BA8EF427152157DA5A51084EA46510864E1CD7B4FD11
16E74D7BA769ABCFAC556BBA7CC528C18003A2AE059CC97C18263500667F6A9A8C421F2ABDD73EAD
82D9D08940DEE1688D4AA200ED80C3AFEF6A4979154D99478D4F4EB3738333E8581A755190D87BE3
09A319ED170A107512F056E4C619D4BB1615BA6C0680117610A26462F267B76F9DBC9A7A3AC08C9A
512A44697082A2718B62FD1D565010AC96E1006F958070AB7567A33E1FF7BD450681DF6BD4EBD265
CF12726A7EFDEFBB9BA1E596BC5C2940A4FC9DE60116C9082138F1C672977F4AA6B7986ADABBB2B0
651A7B0C06C4BD405C58B8C81BE075997E118E10FC008AD1F9ACF9F6AAC6C9E3F6DC7FCB838720E8
D0D9BB99F203EEA2566F18232711E832810F10DD4E2DE44A0A81603EB1162E1BDB60AA1E2D771EC2
E6E2C3B39508E5CA03A1E2A7F2860BC6F0B57240880DF54C325F4729EEFA1D2753D57F055CDFCA5C
E9C6630980C7121FC21E2F7223E6111C18FFDA0A0A7643A213DE9525AE138814C4183BF03A26A36F
EE9199821464C845A746945413629DC53F5A2B0D8CE9282B580ED662F2F07398D6A8B7093CFCC6F5
E0F5A7926D2862AD1CCACB84D85902038551EE3EAED02AC7754E3B65818C530A0252C049A68862DC
A459DDD937F7BA64DB16AC86885B68AF46422D7C4923070E20CBAAC9F14E43979C5D5AC4C9321016
7CCC52E7DA272146D68D8F61DB4D60063E74F6673B41ACB601DEEB1DF73517A8C5388F00E8A9D236
9C85DBFE4C1E9864AB52E09F465EE98C194151E66CB98E6981EFFCADBC48532E9795290CF745FDA9
CB7FD40BB77C148A8B90C0CA50176103E2ECCAA57030F7C0882F1E891F9EEBA077AA4992FAE38C75
5470A4C35454EBAB45271DD76E4DBB2D9147817F7D3FB800EA136D3F27C84B4D45ACEAD13D3C91EE
BD6836AC04F95E578D1B7B8CE5B718E42FD1BBE91EF9A7873F0C6DC59AD231D08CEB4AE312F83F1A
9310155D2C4F216A6FC72385C899B5390EBADE7CF7BEB028F73DD76EDEEF639E9EDE034ACB25BA57
8C7BEC3581FEE0B221F7340570489596FC60EC805405E0D2ACF0687A62A75358B3878972D4C039D9
07D868DD00C5F7F3342384C09B01F1926F7D37C2B862FC516361253CBBDAB354898B31B1FE58F773
61517F2C2E106708AB659D95CE3E9E7777B7327DE01AE2D1E0C84B9EE3887C094C149700CB095D5D
A5FEAF1AA9027AF257576A7370D79FF4DB98511AA27C5C083FA0CA60A3A5E66B8DA9A22FE5DD3DDF
C529BEA71E83881D8B010D140AD686DBEC9AF4B331086F6556B695CAB14BF24B5FE64382E6F9BC21
5E9EC40C0914B1E27BC25F43E6F555B551726A8D9CD590D5AD3732777EF3B00CBAA89F8E8E0E0347
7D45B00181A7B196FD4919F110C0F2C0F1B41231051AB5BC8F8025ED00C10F2C2F51E97B622A4E84
E6AADA59F896F83EFADE779B37FACC56BDCA1892A3BD965B65D51B55AC1D73ABCD16D0EADE55C0BD
3C1BE9FDB323E9FBC9835C63F757051E29E773D3491706DEEBAA0F1182F0E02D0CB701661B30770D
94E240E1358195781006E18CBFC2D83F229A89C3066E35CAE1384A0266D5A37824A089E855F11209
9F723AF03BC1C8B1C0BCFFDEBE3EF73A40BF83F5E038B63267DE5413B88D30155E62EDCFA35C0047
0178E5558CDA2B30C4EE2A9854C93E0E484D4363E3614E5BE829FAEAE51935386D20DBFC00B42952
7F56FB045EC4D97B3D649415045337AF44BCF4AD9B9F9BF3EA72151DB616FF8F6B13EF66516D9640
67460FF123C7EA525A97F1D04BDE9D3D495602620659F6E5DCF1AFC5360D1C371BDF9984C4A7B462
180A3CAA7098E0FB0BDCE694806BA466883BD28D77DB4CFB6635BB7DB45B4D83AAD4260A4CA0D411
0E251AE7476A95327BD6AC1AC88F85CCB705FBD09993B9E2990D51C37F1110F78B887C54E4EFDA80
4ADAE5D81477913B6938FE1B39913C6582021A1ACA834500D9D75C9942CE2375D0A2A73805751EC0
970D6FA62D4354337A43D85DEA6C6F3334F40221FC473DD79344D028FAC689645963B371A55CDA92
F6BC989F4F1880AC11D8A056DF7A0EE60471800126526488B95B785698D2AC488CC027D31190ECE2
54F80757DC9B4FF18171409C457F5FC58DD1D43E8D1EE08A6AA2F374B7C245B7A21287DC333BCB1E
EB498A2BD723EE6BB30B76E574773F70A61F1E163A25941531C049ADEDDB59AE75B7A6725D997752
10ED356DD93D0F0AD7EE6495F07869C570125125BC84946F6AA1152CA18FCAD3B68004A7F7AFC6E0
9EE6E1B365A4DA15DA95AB980A566DEC7394F385FE041B3B7F46D62424F4726B55DCB4BD3625CA68
1221CE01DAE78E24F8045EF21F85C13D27D1F0F1B589F936F62F699B93EF05930C6F5730B0AFDB7A
7A829F2ECBF0DD196ED66C7E4E4E7E05B565BB98385F017D01B1305856DB747C3634BF05DAB08836
029674ED3A4053CC3DC696F758F86970F94034B4F0DFEAA4DBDE449800DB040B55E7FC83E6B5584F
A00F7C70ED18524037CCB48A22A5A69506A825DED81D98FE93177DEEFD42B485013D4C4184CD690D
714530B56E355FB01BC92DD90A7AE8095748A872F79121A28E965E6149F37C9D5F4DF64574F605E1
B929174AE0CF533F77EBA0E10862BBAC46BEBF583B951BD0BFC5128B08CD998DE897033E7CA8B198
625D865701394543845CDB7A45BF82DD8B6319658E28B34FD319E38E650869742BD2672623ED9810
8DF14CE5C911AE0AF2035B4F9CC0D1D84176CF3AEBC4834E8BBF07B7720521C4E6C081A962FE29E0
700C4F4ECFE92C39BEDD64C3DDF52959A4102CC242C35F56139643F22613D675F970CFDF8C6A57BE
9D168C9CDF93915F66A5CB37DDB9B8B729F8131391F9D6EADC8BDD5C13D22A0EF967622F3F7C08DC
C422E3D41B3BDA6B4520C98FD08262303E042DF37B9911C1447F3DC8A854973323E1C380A02DACDF
8A53A0D1EDE9BF34A50E8B76C5AD5B15F8E25B2783BCF4B1247309E9B70CC951CF3D98C1A25E9CB7
11235352F3BA91FABA828F2D7D91F0FFC50852860C531C20A5FAAFBCE1197CA367F0F84DEB86A8FF
A9FF4C252EB2633AA2BDAB30F2094721F482CF926DA3299452177B79251B311AA60D4CC82F5A9F50
E942703877AF1C10CD92DCFD16CF19BC7314FDA5A85284BDE964DE2BEE782F4D52D17FD2084E0A95
59EBD5AADCC74A6DE64C1F799385F5EC2E2F5F869F78F7289A26B03A9FD906934C3A6BA4A7B36E7C
3B77A7581BE9CD62B49C34572A870053CBA85DCDB9FDDE407B29CB3D02AD1C752B54DBB995DF0F8F
CB117CF8500B97849275A4625EF9937AFD7C8751B9B021E778F7DE9A9B191BFC470823FB8EA919BA
DB8B68755DD83C6905B118FA18FAAE216E2494FDEE9C1125C3941092C592DEC7A5B0C763E7E0D3CF
DA02AF9FFCD234A01D75C661603820C37E9A681356A6DB424F5F991FACCFF78EAE3518C0747C35E0
8EDEA2E108CBBFFA0B2D3BFD612B5743AC95CC4A0580A6739BE4EDE6CB1E8B2F4CB5C6FA4572329A
06080E0085748067462F3EAEBCAD734DDA18BF206EAEFE9F882807694B80A63AF2F40625E98DF55F
BE08AEEEC2C1BFBC16F1BB4D391B17122EFB5FB539005A613EF5C9F154BD50F05862F813F2083CEA
149FEDC651191259BA4FAA658A42AF151B03A7B553AA79726A44AF9175A724E0D65CE84F41F3B7B0
E0B684656EA56B4E7E654946AEFABDABCC4F3876B3C3A67373F4133FA8498DCFEBDC27476FBB28C4
003FBFB063267FEAB2B2BB8DC647345803B2723DBA8905AB0741137C43768B434CE118954AE55DD6
61AAA1BB60B87ADE97D4197211A0C70CDD7855783B7C570FD742AE5A5940A3D90F9EFF687C4F1E4A
D3C4F5C3B9FF20B61C0076B9FF060EB99860F31C41B5AEC0D2C4DE626C6059678DFA35BAC5F2F171
A3BD00065AB2007EABA499E4E7F30EB994F8BA757FF9BB0C9A2E3E384BC1DD4B62036E2D70819AD0
A535816761800CFEA50681AFBF0057E69A0CDBB4BAAFB8B15F7727BE1169BDD4FAF692F9CEC12893
E4E4425DE4CB20F330951EB5A7FBB0FC10DE78A7F9B0EF6FA629CA13E8C2F616A1BD42B1E26E2A0B
533DEA701AB7BA93526E2439755FB9BD5CB076C3309E73807A5935AF6CDBBDABD5DD7B036324130B
8BC40163FA0999364553CFBE351509F8A5167F205E228ECD66EC9375D0E0713563AE75B6C23423AE
63EB67167F2F4512BEFFE96B90913E6920F1F8B7139F1CAC9E38482B6CD26576776A01103FDEB164
A176023370D08906E2EF27E1E8B6F6C27EC67A86EA36A6C82B681385F3A60AD53A8512E0880D7ACB
5567F2654731CCC1796C47E18DD6CCE30F65E27DDC5A3E56BFA0460DFC3F9FF1E98B7BDA9DDCC615
718D7C6CD8DC1270E70FDD4973B287396E2B85ADFCC83C71DBEBB97346E858CFDA78713C0EDEFEF6
B84984D719C4729C0A3F2A7422DFFBB2AA5FE61891D3D16CDC1BA4A84E7A74B0076FEBE0C2C74F4B
B9314E5246D7E67DE23466D47C8AA93AC4859B347D8CE31FCFB4D41137B51C41BF19D626A59D0999
FF2A4FA5FE6FA60E029494EF99C8B00700E6E752F4F9ED52F2AF5845563ED8AA5D4E19F82DC0F87E
255ADA53AC62E3D7BC788EAA135431DFF49F2D3ACB61798353B27409D149FD635690F8AD324804DE
A99D12B02F15D9C6DAA01BE2C1512BB8DBE86EB31D7034866C10558C008D69DAD8830745F2BEFC2F
FCD957D0FEC30BFEC54F3C440F3A99BFDD7C6D0D657402A064F2656694E5F5A5524CF4A7A2AD4625
5DE9D2E9916DB9DC2C39986A221C31F89A1884ADBF7DD62D4EBD47957E7A359F2ACFD38E073E8502
5F907941ED233EE3582AA955CEF67A8ECE6D8B301EF37B7D40ED84FA9DD604C74C8E870F9C26A2D4
DEC8F03563D29E1DFB974CA191D4696D877A468082951B02A88884B9B760961D9C37154F32D54512
4F0E4357B68547CAE9CDB571089752D7881613E7FD8DAA8CFB98CA9E930B48B78AE13523E43A3568
7B42DD2F0A99034ECA1DD782DA692EFF6AC99D6734DF1AED3616B198E6C242EA7A9954B7337ABA3D
13EBF06B95E16F19047AB0EDBAB6A8928D81003E593C1F134B0E2B8C250EA251B59CD04905F57016
1662514225C393C42BCC172DD23D8871908522CFA5CE113EC05F39E4583EBDEB5DA425E4627A4A2B
D5C511F9C9C155BC81D0EFAFB0D0F2E96BD49A5C942933336EDF9AE0CDCBB159761DFC50F6180FB5
024D2E5C2A20233AFF282FD3B1AAE9B65D2989BB8176AA8C7A1F58E43A9AF3A6D0168CADB6930706
C4F974282D4A23F71B0A41C75086DC1C45CB98ED68ED0E4FC62807EDEF13C6C85741B11FA957D791
D92B750F3B7BDFCA7E148149E55EDED66700483C4D5BFC3973580F7199FD99CE6B358B508FFF5DF1
78A5E495977D851B0B06DC7F6B38388D5C94BC8934584D8EE2F4E0CCD3332A737BC066F042B14931
57BE93622E346FC6B293B8DA0D3EED02508AD2183454FD4D5D21235268834B257EA8B06117F67589
3E0505E64709FDE03F2D5C82B163C29629EEBF5D408547AC363758D8D134AD7B9A55AD9C7D90B67E
6DF3AAE6867759D2A75993265118BF6C5A261C6D80EF039A0163BCF8E6B40E643D1BF87BD2592BFD
6A41EFDF9CFC2E6DDCA83FEC28B5EEEA2E363C20AFB4A13B5EEB2CA3BAEB2CA6F4824AF1A59E4CBD
884CA4C62852A095E4B13CD018669AF3898DFC4840C874B97408C811E431163887E5BB8CEAC12FA4
A1EC50E8305137437441AE0FDF8FA4DFFFC77C05FCCC41696E40889A02DC4B1267D5B892647D6AFB
BA549F737543652D3C3A051E36BDB692DD7EA0D8964EEC27BCAE8EF5FA853C54D67A8ABEF7B01FB5
AA473DF48CFBD3D697C9B55C852773A35B9A7C97908DB701AB66DCFB274A824B60E275E1CB341147
36B26E50EFB1DF01F01688E09E096533E95B3AF5D09D7823DED38487C58B4F10D6AC76EB48731CED
78AB098C452AC83CCEDFE4E8E4AEB4A93A715306A096F262BFDE5036F38A3B733B1A0134904A3EE0
8A9F7C2723FB5D0535C5B57CB80C29E292A49AF936DAC66CDE5C01640490109E679FBDC13F892438
D70CAFB12909FD2ABFEAB23ABF6D129F5628B36FA00548ACCC39C8312030DBB87364DA44FACF3818
D4C8ACFE3302B1487D5CFED16E17B05CE9889219C13C9DEA28C9BAE5D788578C309CB7781244E30B
7DFFFAF5A9F594B8781F849EB20B1F3A346C2D697CFFEA6AB4134DD46C86BD0F89AB3EE9DBB2F87E
988D906C21A43E5ADE58BFE82D4D4009A39EA3D1E779FC374FF21B86BE48AA4A33186DFA0F97BBB3
218CE963643EF2A35788D613DFF934139B3EEA36377E67A713D20BD3DF04720AB49834E3FCD78908
1FB726CF642A5B87D5D23609661F7D694EA0256F3EA0DBAB7C2CF79CF89CA0FC9D25281EE0FC16B0
D089DC5B156462343A375F1EA2682A53F70A1F239D58080F4F884DBFFA68CC6D63365A8CC308DC5C
BC2387BF3D3107C95FF4DDC3A902B31C3F414355748B10518EBE00C92682CFA413FD071A16B8D129
4021B0ECC5025E33F6116C89C7B983C6BFC31C5C8D7FB5E5E81D3AC500123CC05B3C8DE01357E192
0DCFD172EB4B488CEB9E1ED5FA1D235C96FAD22B319239FDBA08ECA2C5C1192B4D7A797ECE135228
6BBF1E59AB3B54B8886E67A82AD971DFD1EB21CC5E3512CA922F9B870A48E6DC94F94181E422D274
2D3A14FCB3939FC8C1D62CAF79033D6EF4DCC93751BDABE588BF5D97B52AFC5084C5BC17246FF977
7AA4D738BB9B15E534ABFD68848B879A9840EEF4774734F0BACED5E7B6177DFD430E0497E36D1077
7654F351348BCEAAA18C3B362B2791A006782C25C9D544CF1594EA623BB4C782C6AABCA95F9CBB1A
8C86318834E1430376406D2B6CD5AB09644361B83AFF66C96CF549C2D309F7439254C6C3A5B210E8
23F83647FF420BE66901C317349C1B305014EE7E9F90DDA917E3F853F1A8AF3DF1528A81C50B76A0
F02E933229C2743BFA639003025697612BFD8575DCEA0BA5FFF805EEB4D9FBFA8D2014BC239E9D5C
4C87E36D1C83E010B92F43C06733976BC84AAF1C05C0A0CF45CA7746ED7E1DF5A12F2401C0FFBEAB
EFA199A7299E4BE5089C2CD83E7838F163F6284FC299B213513F803E93ABD8D759595DBF513D68BF
96031B9FB95A945B7C9153B0B315436C850FA5F1415AA2C9565F6FA39E9F5C5FB265CEEEA8C98E4D
00A72CE7F9F6677DCA7E58C1A8C111A9C6C44781867AA5FC71F36486AEE73FB81C03BF4EC728E43D
75564244AACA3D66B6D36DFD38332AD05F150D4972FD475FD087E13C9312D5A17A83411B45740153
81CB568CF85BD66428FF9EA2C07E7BF8D0AF4469AA367DAC0230650036240634AB81766E832EBA8A
2D8BFA402DA804D264757E74B3465EE21A1EA1C92929444DAB2EC83050AD169F257B77D3F4B9BA61
B11361F5DA6DD2DD933E101B64F9DC82945A2D421807F09F3E587D4B13BE0FDD6D7133CE890C3AC7
1D0880418880362E27635986795E2E8426A0A7D7E8E5C41317209D957B53B6CB9E4EE7C3EEAF3315
E006B7FD90E7A58FAE5289AE513D7751201459BE029563B58D967AD24E90DE5E96357D37E86CAEB1
6059CD8593F92617AF636C7D32E2B074A40B6A1C40828313C8DF1BCBB002DF276D424519EEE2F234
FF9B9B27126996834BEFB6E05A7BFE958B4AFC810E8B77F0EDDCD43E81549154F81E282276A7133C
23650ACB159EFEA53ABABAE1C1CCEF5642898A5605A285205DB40DF6C768029D8CAF85C520AA66CE
5BF1E0A0520CC94917FCC3118953403A1B16312096DBD56883F03E78A14315A5F97345E13C363C06
3A01D49492349D60A9114A77BB9FD48FC0C3AC76D190204DC69C3ED4A265B8148F2C5F2E147A504E
4F373637C065FB894446031F78C4BDEA68088681E0C5099CAB1D13833FA87AB96E511013A9B3D806
E71EF6E0A1442C91FC2A1795A13145ACBBF5D18880695EF11832ACD328BDE6E0A7308B12759D12C8
6B558CDA038590787704BC1BF49EE8C788C41594332624D56082ED8627EC110233CA328D2A0BEDAE
3511719EDAA726F338D324D1577593948A8B9F0300F27FD4420638C6972EEE2D6248B87643275DB7
69F72E8F86803184035F6A539A7CDF43A79886ECF110ECD7053FC04EB5E51B3C7625B3BF95C0F5EC
044FB7226281BC723988AC2498ACC0489DF0BFD1DA82D04FE3ACF6B63EB269BA9489F8D5D07DA9A3
AD04BA924B99B9C1EA64AFE7BB2886513EA6730462D4FB5DD82659C7DB7687F4CD8E006581A15EA7
715E274C9B89F66F1ACE9C2AE7698FCF7479A04F2208DEBA6DE801A6D184A8A9AF6BC1B0E37CEE3B
323DC4EF93EAA8219F946DB9F4D9C133C6CE0FCC6884F9C2F3A816C4ABEF44DD6256E7BC4574600E
1D825080660BF6858B415648258399839118F3C11410C1C29B3C208A3B54AD5D7484708DCFBCA04C
849F2AAB79E4D96328D990C63DE05DC8E804DDAE255F94FC3D56270BAFF6F86190796F91BFA018C4
FE4FAEC3F1ABE8ADE43D0DA18E710BC1F419F77DEBAACD3BE011BB93E111B18CCEDA8EB0352934F9
690F3E73D71655191F150BC3788677D1FE46070FDB354BCCAC8C179009553A7D67C87518131A4D8B
4FFF85FB9485C9F30F4CD31EECBC4A44CC267F6C57AA05A11C6FCC09B5CCC83F189F6A32F8EA56F2
2D20DA4D4008F08EFB1487675CCAE22BC9494441682F4E46839F0F4D2D16AD58AD0886C60C925DB9
C7D9AA1A7FF41C94B6289E1B72382789006F40B99B78B05ED1FB1F715CE4C0A1078AAC02EFBE6306
F53F5F7E73DAD249995DAEBF17E5F55082CC6885A54F93F1A935E0389FE54E8B1B6C5ED19D483620
A697873D5F18CE9A48E3C2C1C871FD4739A78782D8112602DDF8D4FC497C459067A6B118AA998740
6C8DE97C2F09CB9D388D341EAEC0A5BB4BBBED92BE59B273C77F3D6965418669BFCE0C43D5C86275
D8E658BE1893DA8E698DC858CA459711969B2CBF4CE294071EA572496575CC35CAF57ED49C2FF1AC
CC21E19D189B7C2A1ABB1AEAD7185675413C224CC4C0E1AF4EB76BA9F44148A95D8609838B967784
2391DECB30BB0FEB92CC890F224FD2E9E9D34466D6091443CB69E845D4419F9A04664706FC8D2D15
9002422367F39CA1B1CB1A6C32A65F46230CA2376C3E5125CDFD367514E087E59873EEE569B7F376
227DB126060F063662F118C7BD01946BD04172147B601BABA952A01E0AD31AB1147D48FC2C3F52BB
75D9618E6F03F1F1EA393AF0E8474025F451616C4ED236ED831E14F40BEF5B86806B73ED64AFE7B1
2A3C1F5036BB9AE79862EDAF13BDFFF06C94939AFDA1A749364BEE73449520111CF56181527F9568
F3189652FA7FFDF4BA1086DC5992C6E0282B6F88D7CB73F485F8A27A77453C151B0BA40E294653A9
73298EBECE8132B440ED4B4437283356B79CADA8198512A45044A7AF04CD02CD4DF7F47D5D1E7FE9
52C346B01D03D1F69904D1AB5E8C433B0615E88CF4D01B3C96361F82B5CF7CB4D92FF3971E44F0C3
317D3C5B0BC8DF4BCD4DC63474D0E0B5BEFF3177E2722D4AD4AC4B4AB6269EE948BBAB6019ECF2F5
846A3D215F6C0D999D489215D4328875DE21F2CA243CF184280B229ECA4B8A9C5290973503AE5883
03C67DDECC577F12B41F0D4DA266772867F9D93E1863BF76C6AEA5DE3FC6567EECE93D96F717E39E
DF536ABDFEC14DF6748DC90A2CDF6066246DF69D2745D2944123AB3A6ADCFBE7C74EA8E8D712AE86
F76B3059178E78FB2FBE8D1F25831C70F58FB6B5922B371A27501E7463E01C844A2226CBA263B570
4E5C4D3E50FE31435437E1ED39E6E3BF47B4E2C4588274F044B3294E7B2BFE302E76EFA3CB74108D
A6CFBBBF383F5C456128ADB5E667E1F7ECB4C3E00AB8937769E5A2830520E9FC0A1DA1662F881ECC
DD7967647B5841D8FDE1DF7C9F5475523F236005EEC0DF307BFCEF379355C30A83EDC96D6086E224
388DC7B5E951B819347AC5A1F9FBE7EF1907726EE7E972AA1DDECBF7F72658C20FDE99FEE686D7E5
01A7759DEF55169938F34978A6BD4DB49E494883F67E868A9AB177FA8E6F81157A95A03B4D9DB572
EC1CFF33B450BC13E00830BBA20AFF928CCE04B4F79F3795DB54A4A8B5A2F3CB323194990050CBBB
C7CD32103E0911160FF4DFF135A77DD0CC15867B994CC88E1EC10E3A097D329DBB90FBB62981FF61
C2521F9AB4B9393C6764E5B4361D0FBB1938456CE437142F0AAD9341588BD15EA0F6EDDACF12A62E
C025F3294AB1AC45719C5EFEE94067390D579AED4D1D36041D358CF1A24446176DCC808CE2D6CE02
7A2C2F6E517A5ADAC722EE94A1710BF61254DB4693B30225C12B9C4F856E1D24075327017D6B288B
B52EDE713B3710778A565EFF6C89656BE3C5F590F6ECA600390C1BFDE9B0EEBC2E4FBB9E0E2F405B
39738F7969F64E8228494B298C3FFF4C7DED00B0EEC336B7EFEAA892C4A80CE9ABAAB4318FB34348
93AAE6A90FF00B892D1DEE254DACDB268A6308E91FB628A98989956958C9634896B878CF93F4E0AB
A0170C1B7BE2A0C4A0D514D7BBBC4CA114349D4D4985E96DB7E2ABB752C7828A9E36D9B0B4551DCD
D878C06C3C68D2C214EC8121F6675D8D03545606B582B09B76B6D8608DFCED5C4A721F7008FC2014
1D877353E8BA5DEB1CB61F7C956D4A9F8CFFC8C4FF81B2660AE4BE45F7A63141BAEDEA05C43CAC2F
A04163ACECAEF90F61E0473E5CBF1F1994076B6A72CB5C33B17DD57E2632F7C6DEF7837F8A939055
CF357795865D86C7745DE54C6079C791850B20C0C7349472FB6018521DD5924ED1505A1B8C8F9CF4
C892CB40795C4ADBA3CC11C8A52A1DCFA8FD334D7F3C344CB4057E80A4B66AF6A97799F8DE817CDD
0202870BBF42E76C9BABD2D9B66D10F1A68388AF1A511887FFC50EC7D07581D4C4FC3F6C4F7EFCA9
4799D74132B5EA25DF0C9557902C7EF1E04E612D9E40DBA459513E584C3A3EE5614ACEBA165E07A7
CA3394969C2CF1FFF28B1C7DA85451270DF0FB71DE22A03FC2F17531FD59B12B55DEA7F5F56B0DF9
34C96E26124342571BD04FAE6A12C6EB0E21F06275605FABE91C6EDCF55B298BC4CC52891DD90360
AA5FDC150004BAE65225FFC42D13026F9C6FE343D7CE2F52229B4846F6E23BB2BBDB6DCF60F07A74
8F19F74A1168DC5C67BEF840A3C68CA7A4D8CE7F94610F4CEE989459D0CDF1B194C63A2B82479746
03A89150C4C6AC67AE3A1341F9516887C6BA254F81C5B552C527765A52ED5C4FC45D575F606E465F
7C2EDD2F5927319BE737D48099C333BBA84486F5F8CC0B32052DB6E57DC55A68019788DEABF8D649
A531C1880D07E425D55D4DD4F3966B2FBD2A0B55E5C429051DCF0E3B9CB1DE6A5B3DA05DDBBDD3CC
1C81877AED2BD272FC7A10707C07DAA54FD6CD37E15C247E3100A1A0C527727B73D45C8E02798C44
1864A2D1D30FAF94121F0CADA24753221C85DD5B43E5F00FCAF73A1E531D9453307581C6FA28BB5C
54D93F149D3871D2E017E6E7FFF7B0BEC71B83AD12AF353CD13311D3A6F16C51938986C9B6A24EAA
06B8BE6DF27A5090B3B120D1D1E064C6C1745536C6B0AE5C899C3DCA91BC38B7E900D9614F291B9D
BAA85AFBBBB57D58C3E1FA8713CCA1BF4EED469773EB4B9605125C08A8F7E998E37BD893F3533232
ECDF47D26E8B2A0437220FAA760DC8E90FCBEF59AF6C1C55FE1A28A4C98E2A67DD5A7E55BD4FE272
15533A56561F0D80989BFE15B321976CDEF26FD6530EF7A368A7239CC55D7AE2B8F0E980DF63CFE6
F562F3ADD0AB906B60682BA447CE4A86E6D5538E13C6847791D8A16F5BA29E5840847A7E33AFF57E
BBEC1A5B329A461FD0E858DE5163A2120BA12839C3A216C44F364452A2D6401EB549791012C4B65F
4FEECA2B73B2D88CA49B44493802B01A23321470A2593A8F8ADE3F88D87247851561372137E11D10
11A733C671C71D33EC939B05060C73697EE577A8F2BAE08309585887E5F314BCC642BA2715B51E0B
4D093F6B11CD37BD9728EE90A0C92D15BD1105637052F89B417F6F36340588601C9C2BE9526D01B2
E88EEAFA300E38B0EB5E2B54341533B31DA1193588974DC054FFBDF374960D28F0C8C1AB8505CF5C
64988DB86E17213EF0D9D6D52ADB1BCEBCD02B5E16F0866D21D7C0FE108D551E695CEAFBB83AADC7
362727C47BF24C482EAD6F122F1F35923DE5D6A248BB36433D044F73C944E6CE4D9FBDF0417ED53C
8F56B6D389519E7A539D6BE9444A4747957FEABCFFDCA5FA54BFF46F637B3A3299988929CDE008E9
E3C4CCA97054A822C4AAD01ECF9861AF6238E6643358B0EA141B0E161C6ABCB45F38740B344D4112
9D4E898DAEA8F2065263D68D97966FA24BF88E61BD86CF2C7BFD1F058FCF04AEB88F3A30C9D446C6
3611112CCF30F163C103D6C7C5AF946ADD33B50A58FCD8EC612268F7E119BDF387104F22E4C2CAE2
DAC407F206186F12D93BA87711FB05E6E96F17DE333305196FA7C33DC06255828744B590FA0E67CC
E4B0375276FC7AB9B324978B15FC228DAC17F955C7B3D441C540192145FBD002EE20FBDF6F397F95
336C0A056609E28430E123A432EE91594E20A8D9E5774FE8768C84CC040A706D8D3590BBC9AFE373
4A5536162846B6B7BB7B248924F1DAFD768B9546BD2A2CFA1203D6A3FF45C8EBDE2355F01744484C
DA9FC337CF7D9D54106407F54FEEA81B77BFEBEE088F344CA2E537644B615D8D6B6A79D03F6CBD9B
573FBA87EB00410B5251A29007CFB60E711F642C19847F58333B48F66B6758E4ABE524A4671B0635
C491341B3CDEE650CB9F774A5B6FB92AA70FEC7D9A057084214D81EA5A36A7F8EBE9922A70F2B102
121736E0BFB178A08ADC0A58E2A9DB347FB9B0BE707C038CC19A5519C3FA9AAEF660653086191E59
320D0E696218CE1E8EA7DB5FB3318EEC98C130F3F1C45D0D2401223421FF99BD6E1546873C6F12C6
F45D2E1C3EE41634F5A415FC8338A18EF2299EFCECEE00F9025E79610168548BF2A52623A479EEAE
CC55BE5172B0CF07F9B04E2B2AC08A2BC839DFBA9680F2BB2E438519BF3B434C71B4AD9E64262C76
9F6C1AD174FCFF3F41B5BD7652AB296C543F323F0A16E88C6D1FD3025C33794551DCAED303B57A87
CD1E7FA46E16ED357CE0FEBAAD2678A4D84E4D6B1635F412465C0F3E7246407BDDF934F0E2E0F5D3
EFE318D7D63A7B6BD0CD5556B6DA811D521408EF336CCE2D2B6777AA472A9EE0DB9FE0D6914059FE
25EFF5D7E3D2A6EB96B23669118B9EFFEE5B7FB8F1EEEA355998BB48430156F14766FD77605BBF80
CDEF19879E8F8C07B6998AF145B0AED86FA94A952F2F49D2891D41AB0184EFA8616B139E640A3A9B
D808BDF79E283B0CC4686935D0D96630D590A5F4A7C71C05E110BF3CDB5150D8CAC418AB25419BCF
DD5EF0A2015305561CA26494E267BA89892AD21E0BFF44D48E330694A1CE12183B9A7E4E25D78EA3
498EDF9A22DD7718ABD06DE2C28D7762F609A1E9A5C40A878FB8AB33A60383152A119B9FA077B109
90AF19C261CE43AFC116593C30BC27EE4D8CBCA0C0298BB84327FDBDD93F073B1E06F71933C0323A
6E7FD2AABA783E9BC995C4AED621434B82B34424B768B4427EE65228E612581B0B8A7AAC3149788D
FDD106A6AB93E01771802AD93B63EC386B057690E5C34A409421E532C6614EC61A0197C13EAEE438
35ED9BB38CF811E39CF8F154684E3D8B12E3B673152B82DD9B15A2A68A6163D2CCD72D3117F7C24C
F1575671832ECC4AC6B912882C0231050D60ACDC7D6F36C6BB4E32B6019B32D1DA08C7ACFC1DF451
3A338FACC16D297C56C6138FB02FC7FB5BF7B9DE4C61B63C6B37B0F9CB42E6FF86693BAE1CEBB60C
9C15CB6222F547E0D0776BC5545A73A2ED3C7799F0CA3C2D5EE17849DFB15C6ECF7C2846AD10870A
00E0810F35A57770EEE9D49D05B54500DF164A02FFC324CCFDB5F828AF7307DDFBBE647E98909C73
A3CC6BFB360042823C678EE6ACA0D658C12776F2A573656073E4F40505F5CB4A3D340B034B0FBC29
C3B6B055D23F0BD47E44B441D430B8703883AF8EBA79081D528AF5646340A27291472B8E1F19C8BB
B4AD17C7EA1FCFCC7B52E6EBAE0BC8204AA52C08B3A63B2F07FBFF20092139143A24130191C41D2D
69077D71FC204C5FD41275DCEBEF7E5701BFF6C0A4217F6F60C2E37697C7F1C35D2451B040BA0D28
0C9D23AAEF592BFFB436165C314C3CB75223D15694B6EF312CBCE8035A1A9172365FCCD119CD5DCC
569B84C6BBC5AC9CAB6942096034523671156FAE2012F6A24A001DCB2F35A8A031A2366CA98F1E52
944B58FBF1852710CEE0116BD2C7D68DB956B15FB6AAA147155E9F179E67357F231F8252D728AF12
49DAFCF6AB4EBC8637E1BA10D27555D2FAAC9EEE5E51C8BBC793ECC6011C4FEDDF7116E719147927
0BC11D5EDD9215A4E8087A6A16A591BF7ADFDB69C4A03361C0DD078017DC5851BBF60E06A86C6C0B
E08087C99F4F9002ED5206534913353AE16C4F358BC1564A442CAE506A107D1FBC0B9ED99AFC6633
209BEDBBB681CCE475645E92155285C00FD6985216CCE60064946F94778F7AA85ED87F5762C20FE9
DC007954281BD6FCA8554D2A0CA5B76A3ED42EE5F44F3B276E574F64B20E1AD489753903ECD20B4B
EC88ABD1E1CF5D06AA1815AB771E350EB6D04078EC04616B977CDA8CE88C483DDEE9F28D58366D3C
224C41D19E550B5ECB9775F569C2D391F61C4667A9BD11C69A88473AA7884B823F762195CC403823
690A32087893C29C63100A5935842F6B612C95EC9B5F07459608786310C8AE65DBBDCFED21B43191
874E20D08F12E1384DCE1A990CA5F07DE36BD012DC9EC558FE7CC44494F48CA3BCBF1F1F11BB98BA
EBBF8691F8590F84AD849923E656860EFC0EC27496FE6D6C185791E3261027DEEE4C57032547F94E
7D593F7885526AAF054BB850C02E863D831ECFEE61A781B89867139889A362F95F48A837ADB955C9
939F609D2EBBD56775151D2EA4B09D38FC1D824A952EE7E52849260DE61F07333076CF887A3AC2F4
CD088C29E47715C5242E2366CB493B2FEB38C19FC159EC50EAE88409CF0A30C0A6823C45D0532C2A
72E45A17916F6CEEB475C4D4A19372AE271326697CCCAFBB43D92C25A052797186FE8314FB41FD94
2A4B24548866BAC19A83BCD2E6979FB3C7B70B075DCDAB3EF6B6181A00A98AE73B6D968EE2DDEF07
503A92E4FE1E0B67A90A2F351D600DF960101A15808AA99B3C680A8F50D5CBBC96D98A3A2AD5F14C
43857F4CB9DF9372FE74B5D6CA9CD801667399E778B56EF702A56F0F393137B20BF11BCFF9DFC0F0
4E67649D07A2A5F4C42C9A929231D5BACFB6B53210E9FE311642D8BAA7358E6A7370B6CE921765B3
68A354B42C8877E59227146409DA83E407657BEB475329F228CDFDD11BC73123234649AEF0E2E9DA
76C12AF91713828368FB778905A6B7150258695D4D9DF6111E1B28A9462002D7C476FE44A9B13F32
9FF84930D213787932A1BA01EA608ABE7054FFDAAE2176EB960005E5407D7C1D39AEF8EAD8683A50
D93398C584312EE4A12C07E9D55AE9981D7EF57D66499CA93EA653EDDA1BECB494662E54CD7ED8A3
0B2A8522CAB12B2751F7E9B3B66CA0B5C8905E0F3A51F68C96E9C02F10FE515FD6133D3ED298D15E
8B1649F3D13341BDADDA7FCB838720E8D0D9DD92D0A241A0CD8E25D7B313DDAA2F25B543BB0E7965
402ED0F24AD146E49919ABD9604ECFEA5A7A49E58664DCEFDC893F5D722CF24A44D26369F5D86569
9632141348086A80AE528EDAFFF9D9986D5665DBCD375DF221D5EF1757D79361E5A5BCBE333B6C9C
1CF46794A7C7C776477023BB298C970F6DFF9AE6C7ADDA8CEBE73B07117BFED6CED2A36548081C79
BDA9A70C8FC5FA16D0EFD3E9F869DD5DBDF6E70CDA4217935FEFE577B64DA1DDBADB9A092B9D1E3C
E1FD3B6E0117DDED155313A5DB7D8742C3409FC18B9743F09ADEC49BFF2FDBBEF9D5FA7110266287
7C65E3A1421BA56E258A49D76C436C97AE2116F772CA5EEA5726BF17AD5D5CE37DC5F45235730E90
A1A1E3087132C820EB9E0E311500F2CA193C72E2ACCB4D77ADFA34E268B014FFAB5DD1BE7187251A
A69B7BB3A517796BACEFB9ACE0114FAAEFB0D9BCA028A52F5037291232A04C2353B9663BFCBEC2D9
30CB007954B8C6396003214262AA9CA9FA876B4191313FD1831D664863C4A19946AEB8F4E21C468B
9C94B8CAA407A74AF418DFB60D46BEE5029C884950D3BE8A58023DA864E9AB34005337D335B0B35A
91DDEB53A54C3233150E27225B0800C841E489E9EA6C12F5D95112BB723C3E88AAEDA3A942D06242
2CD80B04DDF024ED79224E166086C5770EB10C389D0BF0327B2F753358D9BD552C04EA52BA154EEE
5A84C51FBBFC79055AD0F1243E489F82FD3D1A3D2CCB24A02DB3F306767564A2451DA405BAFFED98
20241A82C6F4F6E1D2A36FD954540EF3C091247120F5E1B362D1EBCBF80951A3158B1547E7A0CCFE
40C03F992BAD00496C32BBE9B0A06EE9554EA3FAA247A7399A37D05329CADB006F679B58F2E5969B
13A5516A9F6949505A64B7B3FE5E748B9B9662C05E6C5CB79D64FD72C54F557ADE72880B3F9D8718
58D5EA3FEF2BD3FCFD670794AEA6144D13782BA89648C98E7CF5160089DB9798E49BE2DEBC2669C1
0C42AE1AD7C1FF4921EF465300977E057C0AEE61579460F56E51B6EAFC1F7F41D669ADE9610EE777
055F927444F971121CD76A55A273CEBB481B89D6B78D0066ECE31BE3EEF65CE9FD22D22EFD6E3ED4
536E6439782AD53550CEF1A903125F228A3E2F1AA3342B0551C59924149358F8E941969125F6E54C
8B2C068F57FE0DF91912CD71BE9492768191F4F6B70BA45C72409D4AC6E9619E8A34398E6A66E984
55F1793D8A2C0DF30EABE2B19679318AE09014262DFBB9AED5D637653FBA1C10821908ED6E088910
AA033E2E0798A630966D29F84845A9C937C27A268CAB8BA1AE9B32E12B52EE4B64BE5388AD32035C
7F98904F052B31D7C4819E27BCBC597E8503A5614E0DC2BBE5C51922980E3F492B61BEEB169C3EB6
AB9F1DA82EA6BCFBCC16199923C8399B0495EE9A9E1749DAD9FB289FF3FCCF34F55DF7D94F91EF31
B3B4C8074C567C4FAB337A337BCC2F459075244F665B079C159AAB83781E465F5259D41313183EC5
F5F53BFB4797942F93EAD6CBF9255F9B4DD0748A3BC6BF36ACBE0127AF68EA6566B65430D0595FD2
A7A2FF74055BF2E70BFFF2B79131F1871CEDEFB495FF914B88770654F9E5556AF535E1B9AF812004
99288AA39D1388ACCB5B11B13596B550F2746B2A83B076F4F606F7580156E54FBF6976AA4CFC9581
0A7FAC41A1635FDCFD6F7CD6BF738190D7F9FEAAB8C0B7CE38DD1459E2465C3B75625C8BAFE3B60A
F66ED183965AB9681A8174C44311D8EE36E468A8FFE2035B7C5AB6A372FE37FF627F4697C0D19F7C
8A1E356F829BBF2B8F4A95A49F85CA16ADDCA5C0817D6A4F7C4EAEE908DA13E0C89C9AEFF6D1D7B5
BCD1BBF672B46C4960720CD1C74E70C78784CBFA8930576AD4067D406A0FCE9248DCE6D610D7EF0E
97F3F9CEA1D08DDA90DFF0C484DD32265FD13A2571513F361DE3061F2EA76886112AC7589B290220
E34610277CF81535CD628CA688CA812275D7B9909757DD519F1FC89FE4D0AFE5FDB999323A470C6A
A0D9BA9CC92BAC24514E7CB3A3EAD2A70271EA8B02B2DDFEC6CE803F1B761D9BB7099FFCBF918D8E
B602946FB0DC14F0FD1289037B15A4A96A4605BBE53BCEA9112BF9746F3BDDC06CCCD808C62F2B41
D4F508EEFB03AD22E2E154888DC63C6BEC6A21D1851A5C82397FA49BD163BA8A72527827E4B6F50F
585325219FAA9B3A2CE14A0134C19DAE50373A0F9E6DDC8205467242D11A3989D17730C8169964B9
CC9549BE20A84FD9137DD9C9F7DEBAC3A41345DFEB0AEDCD7ED408A909000FE8D9CAC85D93052256
7A2C9312769DC85F902D4A5F5766EA3C561549F1F2B4C5269276946809ECA26B6F51DB4CBDA9E668
BE1023D8962C0DBCACD5BBC9E5F61C459B825036E1322737C0F196C0DF93DA76011DF2CA06F7B383
8C672A802EA24A474ACF7A51F2DE867ECAF5674B1053CD5419F5FAC20584A3F7565D7CE584CD395B
1968B622FE3C68DAD2F0E33274DFDF03B5A8EA047B077DA1316DF487C91ECEA84E9B417EA25EC9CF
1F1CEDD7A1C2CB0D51A58BD8F9772FAED8D553141ADAB148AFDA200479CD04C0FFD1478EBC618303
5437A5BC1AEE3218E9B27D21656EB9F31BD4E7D3186C89DF251207E8B67265585083111BC1AFD4D6
A2773629147A29CBB4BBC3935B83392487858E0D18FFC96E57C83C4C6744C8E0DBF001DFD64B660C
CC8064907AA4BECC12376A1EB55EDF655CBBB4744C1A6166590B9572073A2AB577EF446B80567241
389F990AE6C90B286EB48454166BBF264422FF2A387FA0B413F2295B6B188A64927DF702C232CCAE
59A2CCD1D109840A464BAC74A45B865A6667C901D86F771C4A36421308551F532497990BC15DA648
6E322566C210C517DAADDBC24DACB39CA41611B9F961E4696D1FEC46E71C608DFDEEF19ECDD88724
24E1BEF7176B0AFA4888BDB4C56C8690AFD03428F32740DFBC4BE22B7583DC47BBA42DF4E83C14AA
29F4E79397BBDCD2EC43338BA1F0D2CA9DA6E64A065FCB0073ACD0D86E46EEBF1454C9C172C6BAA5
0F37FA19756B05405763387237794E9FF74E6749BF6CE5EE9145413950D342DBE5B0EFDE57163127
2A8D060E935547E1FB0FB1FD60400FF856D027671CCAECFF7E215BE61E8A77E9BF5C72C2C1E4501A
A11B2F8574BD823574EC9598D579A9C5C525867F4BAAAA78DDA0E5BD7AC832DEA41328A507874A85
90B7F133E743471D4FA27DFAC39C6F99E233C913183B2A039CBEB5CB3BF8825A92D83D266246D5B3
CC7B11469E611E260C6ED16D17C9693B13B78E3F0DE2F0ABBE73FD6AE1ED25F57B4894254FFDB332
0E65ADA53669B95CA28BB4BD166507E9D8F12727E46D2B9593186C090764FE8A95F1594291FD551C
A96E4CBE1D6FD42852B2B65E7F10C4F17707F930DD934E2A2ACBDFA40E04EABC1E54632D67AB7D5C
00DC103A3D11DCF78B6771D98ABD5CCA0B253283C67B0863C80D1A78FE6D5422568207509FDB1946
92706C7A211B29955F6354092C9732DB2ABA8CDAF407FF25B40BF9D73317D5985E19E6C12B6AB5F5
DD59328905F822E1EBEB87C4E386EF20CEB7EAF842700F09BDC50D7AE6442D1C93804D56FE194785
968373A154E1F426BF76692CE3E4474360ACB9FEBD3191B8EE909E7C224EF90EEF36CD660AC9A642
4DB5BB20B8835D365D35A442ECB2444F30466C3323001A087639B73848E3EE275406CFFB495ECDB4
52F2A357F45D2D32BB22CAF9F9C2C44741A5341B29BB6C4322287A2A3891E1E853B976E17DD9306F
D98BDE8A0C97ABDCC7C708BD1BF49B524CD0DCECB40DDC557E9C90A1EDDEE57BBABC4C338F08A625
E03C1C1A20DEA709051EB1A3264D7002D6DD2BB7B622AF93C7DF54F49EFA5FBA58F115A049A91875
A2476C19F9133D0BE1B07C8102746163CEA0A98F9B62EA59C9CED7AD808DD52DDF8687933AE52A7D
9D7081150A812801D3FA78F90C4933E5DF09C991325324DEC6ED364ADF73DFC7B78953B51FBA2F81
F264C2A94139289CEBF7ECD6D8FEE9E579BE231FE1ABBCC07B4BF1884CABDCEBFC56610A5E2B7510
37FE804511FB5443F7B21290E38855F6DE5EE38960E02481DC57F83CFCB87C8FF1CB196CDC19B2B4
6C7C72B64D7D45C678851ED7E2860DE7DB772BE7B33C84ADF7E6F9B2063D1263CDF55E6220753ACD
67C4701EBDC0799AF47AC58A0CCE796384A50DE6A814DD994B372630E64E5FDFF57393522F689DF7
81C44599B21AB1C214D4ACF94F07CFEE79C628C85378B96D9007ACD4225E14DAD8C70984DC596DF1
96BC814E7346217C94F172FA40B3DFC73C30E6E530DDE4A91F6A5166AE19EAA3D2CC3D9D6917BFD3
1EFAC19C236463AF8D7FB7D9B3A4D6FB6D962C59B296E988561957A3C3D11F33ACF69F5768A2DA30
462BA9AFE67D3C41A1E8368099361F50D4F6368963A48C75F1590804E7918A02EB9DA5F60F49828C
95AC60E9D86DEB7699C35037669C02D408269D6BF481EC745E4EC630F68FF5168BE5E0BDF875EEC1
5EB9CAA9CBED1CE2A0EB4CE97C14E10114087DCBE5DE1DB6A070CBC6B68EE141B7D62ED320F7B74C
07D9762E0F5C8AF0779D38B7677ED65B5DD2F83ED06F041B5701228EFEAA0FFC031E44D6D68B274A
45FF9EB62FDA007CDC98B86831E9A668098364B421E1FE2A45D85824612A521777C6177316F0C6DB
D9847A2F61326E74A3114EAC3ABAEE456156DF125E4EDAD6BDB66E7DA6370C90ADC4AF4EC1958170
C32D5AAF3B45BF749EE1DFAD8A5D0C03973B7C1589EAE4E67F6C87213C721E4A33466F3F54253545
5014417CFFC9AF461CF695F5E1D7A37E4C7680A5624AA11EEA65C59BB38A96734E4A4A238C636638
9EB8083D5AD753FA7F74EDF10054315EDD53DE61D48846F70AA9272626E23BA3DAB7CCEE819B0A88
9CE775AA7F5205C95A19AAF475729D2C0BCAD9AB5459380A5F034C108A64B80621820D779582A198
14058DFDCC6C2D6461AC6F98C64AABA53A2EF77CEF612EA766FE15498F56F54106D70D0F8DD4134C
8C64B282E79A96F15D4BBE0297885ACF775BA5009006315637D60AD86D25A3CA6AC5BF5B4DB95B1A
672A8C589D89101809D838236560F7690E329784C1D335203BFED3A258CD79467D16B6DA06A282BC
4B9669986CB50C54DADE3D5B20FD5CD9FDDE60AF4B5D8D9C50E77CF50DF3B36F37F381FE7E28A719
91C8199D18258C09BD0440F5E258A5D2E22C6CFBFDC5F91228992E86532F4C0A50067BCB2D4387B2
9FEFB8043D7BC44A322FD3629D7D92B6EEBA21B035DAC884110BDC6B22CF59B08C195BBA1C682E5F
8CF32F479937D329FE8EC6E9A3A3AA63AE95EEB766E0EACEEAD4DCF46617888AE687009112732A7A
8FA8419A4652075EDDF83E291613B66BA793D3858CEA093C79B89B0C93E11CAAB86AD1980C401713
0B6A02545DE484FDA6E4DFBCEBBC848751B2A8821CB3F7AC96D2EA9B83B575AB60CECA41EA567EE0
8ADAC8F1060255057527485D6B12A26D2E7EF6892865FD65FEF28F8B46249C4F19341089D59DAF82
582CAD1A3B53C763A0E57134A57C4A24AB4FD358592ADB01BE8F1D9FAE9CA97A3BC3A0E2939913E0
62960CC1D29ECEF9E61BAC20E92F13C49078E7F1562C9D7C01C2B300ECD6ADCAC9AA0C1F1BA30401
0573F79D158C66D91A8D987C5239C9D4FEED1DC5C9586C4129C33E7C737C624EE9BD1EDE38E9F72A
78DC19E144B5AABF3B0FB72216815E371A5D6452684965CB7208B87CE5A27E444820E03F80AD2DF4
E280D25D9BDE41E719BB2C939E25B7965DB162CA8665CBFE65DFDC7992A508D54FE4EE8454C11482
7186A280D3D9EDF397640A809E3646675AB6621B9CDF42808E2F19859AC975CF70F41D2B3D22F8E0
C180126F4A12122B207A150BC8E1819962DAEBB821DE59B7EEF8FF9219474597AF859E353B4B713F
5F1350F4049DCE99627492E396038B10A2F8E82AB679F65BE14A166E4502921BA44CCFE04E5DD3FE
B04BA47C3F7A3E7DBF7D55328AD1E96092C73EDB16C3325537295DF768E2633D01304EA0B01379AA
DAFE6CCA2AB3E246768C5AC841A458A2F69141A9A9D716D129B26643F1BBC95D8CD0ED44148F7C6A
F370201E454F4AFF7C11A8080508FEDE242343E7ADDD5A8AAF079C50765A79BD25FBBDC59EDF980F
FE0B60435692C49D20AC22F8BD1FCA3F3D8200CA26D61A30212558B54671E63BC09776A3AE7A906F
CA63281F080A00500C42C02B8F82357A3EBF572CFC4BEBA3FE86537DDDF23A861C240A31778A131E
F638C1DBB7E87A45487C092D23FD9FB2C162C3253636ED263B141178FCA9F2D5BE2D81F99B2872C4
B3C08749CE18C9C00E75DA6B3E4C6A6DD79EBA731618EF5B5E767BB40429D8FEEC6ABFE9975746FB
3A82A03A07B7D0DA8BAECFD1F72AFE17EB0C0CF100A2D48F4449A42C482BB1D64C19F8FEA73F5BA1
8FC9BFEE3F640C39C081669A9B0EE3FF6B2BDC0A726301EF0E2259E65BE59275C76E7A3F1C76C3A3
3AD0E2F79198DCA39C482B4E1196238DBA937692CF319436830BBF441C0A8A04161DC0814B5DF049
83099439EF421B6D37D351D4A988A8DFE93D796B2E8B2564C602F79E6162F56F933196A0DCE91051
600BAFFD9D439A91F17C20CD6A9104B553D823A0317E3C8344E9F0B2560AD583BF876AE307892500
2177AF61BDBD745CEC2B2A7931D27423D2667584AE0D6CAA2B281EB9271ADE86C493791AC9A2265B
8324F764D20DE65F6267439F1574DB02C600E771D3C743D420FA6F8BF01A977B91AF035E0D5412AB
0B85D6ED3ED9D0345ED434F9B95FD911A9D3828CD162686E6ECCD2B6A5B1104F0E6838AAC7FB3FC7
09F08F8E82B4BFCB55D8984771F9F4D339EE7FF391448C7807A436A78B6A487D3A5A86F314B302FA
C5BE1C1DB9844F975619D615D1C7A20EC2B144797E0648CF5C044C8DD1699EEA3AC9D7E3BAA54A85
11A932623D5ED3F0A9C3028CA439AC395F58DEAF1C0354A169D9AC7F380900D9828C3ECBB975F6FE
6BD79EA4BEA9B71F3A9B1D2EAF8F1E475B4FB99758192EBCDA21B47EA33F57C58E904DA260C801AE
CF457C84592B81CFA96C10E448D705D24871F3D1AD1FE004406C8070A54FA3747788C5B55E9462E6
F51378BF3F848360542CAD2D5FF9EDAC84C164DFEC115A2F3D873760EAE58CC8F361B37E6CE076EF
325A1C54DFF84DB95DB7DB5B56C48ED15C5426E6153D8A94B1A35B22EAB1D7B871097DF12C093BA5
538957AB7D0AB2E39A2D1AECB91F0A693B8F6A00601929B6C55AAE8A227CAB6404FEBCC8BC4EEEE0
ADD4CFD7DEC225170A0063457918B9875AD7F022A8F9932ADE316E4126EAB75C1D0B2B9F44E85F1C
54755D1301345665EA630C8E885A8D9AB069DEA2CC6D12E4A0BF6E80C3AE12BC7ABE507422A5D92B
65F70B4A472DD945EBB960880EC4C34E4C206C260FDF86A997D7D399A0219A51E6F8BC1189EC0ED0
B8686F0243BFAFD829979747442AB1DA8282F10F4C37C4E6C88D231460DA3BF34C23A4755E2F8F21
F6D138C86B6091CB3BCE5ED170242C4CC87C010FE63DA9A2ECBDD85311DA8572AD67E40F744D2EC9
6607701D9790574F051C859EF29291AFA301C809E0A5513DF9A7FC2DB1776DBD4A2CB622BD17811B
C0E584A8D89D4BEB17C2D0AA8BF31CD7E2B36C0E1888409788E30EAC2E46AFA1CFE457D3A19C28C5
80669CB82CF36BF40DFAFED78F99A5D5DF189CE293413FFBA9E8D2457986C68483242AD767D5F026
1CE303153C35D5DEB1789448088B51C48A9B8E903BBC69ED7FB0129CCE33A0337198F11DBA94FDAE
AD74BBC5E519F559094E15B03AF3EFA89DC38B4278C68D2AEEEBE4B28B351D7B72F52D94480D8CBC
06544645F20800B8284A4E7C8FAD59D0AA8EC8EC0551912CBC62694A5DD15C469BBE614FB187C084
838D676E5A1CC8DFA8676758EB7D53FD2BA8F1C434F4F70AED8F2CE27EED2F6A82E20E30EACF9BF0
CE28B4BF7D556815A887D777B7D75F60D2C410AA2D378B7BFAA6C3A5BF0A5EF80D3E35A0CF393A5E
BC27A895D712C6F004F1A03F9FCF493973F33E6FB106407DFD992AB0E9E36EF395663A6EEFFD71BB
2DAD9DFE6AA4685F307B8FD69BB2F74E672666414A71FA479B37D3DEF6AEAF80FA14821C65F7ABBE
5CC6DD49002216E23B3D22C282F3DE0077EA81017E79D8C3BDB61EC031CFB13FA981120A6C518F4B
4C39C9DD5AC6EDA29ABA527C9948BC3162EF65E8251C9D4E3494C6A51A41D489F8BC89250128EBD7
0EFD01B9F03C40B6E0384364F2571F7D969016A959E4243D7AB728F0F030B8E2FB456D8E47A85898
313B0E91C68C7A8A7226603427AC6DCB5C69924FD026E90CB0EE89AC42D874BB15AFC981079E9DC7
1271C3E461265AF327D4AAB4AEFAB6A9DC3F84DCE7C7868D4719006344B9055C8BA952A2250B8041
E5EF519BB788201124BE90AECAC2293A310D9565E1EA4AEB99F7ED7106649169E8EBF3DCB210706A
F2FA65158D3059DFBD7AB5B00DBB06B016F73FEDB3AE1C1CC03BC2D94B143BFBD759338EB181B1F6
841F7B539D8D126FC5B31B244A3A00ABBB121A98F73314D1F1683F513C3CCC9A0C2180824ACE5D45
E454062CE1217F7AFBDC60A6022B0134EDA6C5D787DE8A5925BEB374F64D612329B9AC17B6EC03F8
56CFEE502C1FC3AAC7B6F251E8DE4147DCB1580185C406F38E6B729307EADFF6D7A0E824C9830093
F0C4FECEEFC7FF839306FEFEB780FFBD8879F22AFDADCA4C0767B8EEAE5DB869D7BD91355F0255E1
CAC68A81A276967F233624DE0D2082B89E2C2D1DB0F8BE0B2BD7051C4DE9B1564AA6CBA03E50386F
D685943D1EDDF5BE0EB34418C48E5EA645CBA552A0444B254E82E9E84A5B7BD0064D5EA87B1716C1
4EF7FD14E2187FCE16FF6ECBC0A6588B30B4329626F024BDBA65457028668BC6750A4DD668D017CC
EF35CD9CF45EC73885FC91B8AD78920919B4747A710D25BB850B558C5CCF7170C20012DD0F2874A6
699DF53EDC6C75716A5B6B06C98F4904BAD22B18C77B3EEF32DE3F45A8AC12383DA16DF6F06CD923
D344CFC2253ECF97A52F2DC6A22539231E29A324F851265BA82BE566E42167247CEBD914EBE42EAB
E189E74FE1FF17ADA8A5F47DC9866CF86694DEE28EED333B0A8AE380557820E3F1D32B05AE27FFE1
68267FADD310C4EE550F71704EF71F4C669952F30E485AF37561884066C0E3425C748BBAC77CC7A9
87EC336B8BEBA44358BEA4ECFEA32494A8006E9852C4BFCB1C0F00ACC247F1F8E3F3B34539C67638
64527F9F885132DCACBFCB1DC80EE3B2A711145DDA1D3B5F83144E2CD698D43A02B0DEB706C78D75
A24FA39B9374E1155969FAD7D5FB477F4C3C7440DBFE1BD1DC877360E8690A6D3A64EF0A1313A520
C49320295302227CE5625E134EA442A537505D206EE46E7E218BDA38F7B6BA124ACA0E949725CEEB
961EF8B0727E3A78287E61E65A84AC14D1014A213259A48F04C634C1F04C73B4110D0DB491250CCD
7DAE323CC8BD29BEF605DD92AA5480009DEAD1256E5C9FFB18362D63B022C2A378D15ADE2C6AE603
1DF385CF090226F0AF889464584A9EA63B884453DE231058C5661C4F7DCF7505D7B1E48C78AA5799
8FF39084FFF1CD18CB2989D867F2E085B291FE52367B4E8667E5CDA4F41DDBC7129DA5BDC39549E0
8B67D9C9E4C332D91FE261728521245CBF51870F24C42F5814F393719A9E126C5693C0E776E4D8F3
0F0288537B8E9A7C5DA4F931FC83F96A1950B1DF26C0448B646D3BF42C0429E2BD0164703FC71833
19DDEA75CE65D9DFFE8369787FE664306D843421C2C0C3A5B210E823F8366161A96CA88D95FD6486
5F9E5B0D53DCEE4A98AC10A8FF1BC34A46DB6016E973C9FA298D3F58228E3D9FCCCF9632556CE2E7
F9C81E05FDB0FC1071E69A4C158E742D0B8939CA3DE33A4BE8D01D679C81C6BA9CF396A6768CA626
05D796AA5C323E3A6208F2DA5000FC4462ED81AD0044D9959E40E4764562ADA76E33EC63271966F1
7A13AD376A54FFA40FA247896A22C1C4A4CE51094CA1892A0B9904EB762839AAE1EDB5A0A5A69343
CCA45F88F61926B23E6C85688862B1D10F1ED827FCCE2A427E49D960DBEE0D39EDE08D2565C6F5AD
66CA83DAC1467C38F742132F715DA7E9757A5D067FDB4A8859D148473F302BF6ECB9B7EA5C0DF851
8F58D4D076625B92BC8201028064950D70CD40492DA83B98FFD79BD3DCD9CEE95178B6DEA9AB10B3
4C61A74B49C3697CF714F56A9B1E366B04500C9A67704AF6F721851EA4566B96E220E7B526873F94
E6013EA8C489639D291167BCAEFB661C96C27DC7BCD5B317C1F101CD8DF2FB29F6162B5ECE903C0D
5570C8C6325F05218850E4A5B5F94C7CE334BADDFC5DB98EF5333B4A92129F41D046D0F5EB6F342C
F362BC8E45511FCF328E2CE2D4C579516307AEC400BA207071C887F5185AF536A6827307D7698095
E8A6F8C19812A11C32AD207FBC353172C8DF626C5C05CD24C171B3C8DAB270A74AC48E35F0A8849C
E0934B93D56C93599F5235EC441B5232257C4C6767C7B5A35830010E60E56AFBE9199B42E725A216
C49D45A3C554767DF192F04D1A192D5CE196831EB7A56201A4A96CD44DD084729774334F698E1902
614405347A37A4C753C0211D7F24D5265CF033E3C4D30E61886CF781D2AC30385E6021A892AB116D
1F5505635BF5C915D0300ACA8AC32CAA0F3639550C4AEB390DA7B86E53B6BB0E4819626757BA9986
BCA4B4B18F6BF3706577A3BE146F2585025D5A36EB14E587C5469EEEB622D31FD32EBFA812B9CCDC
CFF7D17D00D9F21BF8871661F20E89A25A4543068EC509D0DF7DEA2A24FF68957943BE0FC7BD319D
92A575E12E6FB8112D72A100FEF3EE85972304BBE07FC1026CCC068E8A414F641116E51F76009C5A
F9E664BCCF93C943CFF2115235BB3290F935AA3FAB4F2E73FCDB9FA5E1866EFE278FFE7EA9DD6F89
38CD5E5F4F31F6C659AF7EFF5B291AFB86521678B42C99275024EDAD04E5929D201A36F4A6C4DCD7
2E349D6B9A1F90B123DEDE3DA50EDF929F9285747CD504C8F4A73D522F312D623BD65A35419C0729
30976129B2D99B32D1DEDD81D64F7879CEDDFF04BBBF1286E07BCE651E2DEC190DFB9D25F3C1EEC8
D7277752BB7CCC313A0FEEBF0EFFA2A189861AD4EA13AD4FDBD5160DC273F12525815F0D693C1413
AFE4FBE09BCBD71E16C33E6CF8D18732447FFDCC2E4AF9E270D725C1D262D96E72538CA3309BCAF2
35A3FAFAB27D265C583E6F6F062B555C97DFD89AC46E6154670ADCA13FD99F7A4B9B8BB224D43764
8CC9DB76E177F562862C912D8CBC248A4C628FF2D0C9688611CED3DFB89064B988F16655633B7CC7
AFAE34B2937528EA0814ED245D6B0D2AEF87A5B63E2BD7E4F7D9CFE372C295A0891F97C3855C97EC
C03C7C2A231704BED419612255F8B2C9262D48CB4FB46D63CC9697A210FA9D7BFC3BAB7E46172D3F
52A4AF9C4114BC72A5C7CBA042FA633AFD5E404F29408D4485837E55E6F9702F04C7AB410C351039
6A78C8672F8EAD53BB9CBCED63FB9E72E7238CC88FB4E7C48C3DE3E4B80E277B952727916A4127A2
5CC1413C390F4DAFD5253B07BC96DAE8CF4DA08330DEE580CBC1E12B75A661819E96B018D47A8B71
B6BFAFC5E3CBFE68E5193417B6E730E6A2820838D22049BE6BB64B74AA13779D46519965ED80D5FC
30B0A6F73D26DEBD8150B3D27B3F135F608D59BB1632AD9C2E11177FAF54CBD1C4E58D58C395BAE8
AD7C7AEEB0E1C3F0C0B7A5E7142E9A1DCCC8B4EF56C319D4A4F750857D2FD180F871772B9CC69FB9
B222F83C3ACCB66125AF6848B2EFDCE3D2284FA5844641FB32F701FBF32F1D2F2E2233B66E36CCD1
49FCB3FCDB6EA04367D11624717D73D9128EA7D9AABB8658BE9E9986E532
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark{restore}if

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: MSAM10
%!PS-AdobeFont-1.1: MSAM10 2.1
%%CreationDate: 1993 Sep 17 09:05:00
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSAM10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 4 /squaresolid put
readonly def
/FontBBox{8 -463 1331 1003}readonly def
/UniqueID 5031981 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1C87678CE98C24B934A76220
4DD9B2FF3A49786028E35DDE10AD2C926BD30AD47015FFE9469DE1F793D1C53A
C8812CBCD402444EAEA7A50EC5FD93D6A04C2783B50EA48059E3E7407537CB8D
4C206846EF0764C05289733920E2399E58AD8F137C229F3CE3E34D2D1EAB2D53
20D44EFAC8EFA4D14A2EFE389D952527F98D0E49BD5BD2C8D58FF9CB9C78D974
75C2AB5467D73D2B5E277A3FDC35909938A9DF0EB91BD9159D3437BE22EE4544
3429AC8E2BFBE34AE54D3BA3AD04BDF3F4F43A2B43992DF88678681B3AB32CFD
A23E2C98D1AF00AB206AC95B78BBE6316F7A0AB6BD3236C28C76288B3C25D1EB
E9ABB3576C5EC15A71D26177F5883E9B48293D59015615E2EEAF2E9BA04151ED
5497B9A1C41CBA44BAFF13EA218F5EAC11952EE336AD1DBE6CE92F002EAA3B3D
3BE4C3792F3405763C4BD93EFC3B4FC34193439561841BA989DD8D9F9AEE7A7B
24AEB4654B35023C9720B8F31AA9452E29753FB7915CB29977E725611E37C0B7
784BCC26FACF8A7A0EB1E54290D27FFE52B2D87FAD080AD15EE1984C37E0EB30
122C3012D3A16B09C28903D138352AB5462674B6CFB63F1371768D094DDF288C
36FB9B58443F872D61F2CD8CED42FE0EFF3D7E9952A172BB1AFECB60BF79F2B6
04265FDE4F78BC9FD619AA733CD0412F1D9A7C13B271BF827DCBDC8ABAE24FF0
74D3C220621D7FF0EFE62D835A221D0A7C139E2E6681FC2BBA58FA3B80D416EC
3854C63BA040A4262B458340DAA18AA6AEA3BBAC61615CB85982B18664D3D3AF
340C65B969071CF2D0CABEB80E04623D0526F862ECA8280EEE236C535F70561A
854181132E677674AD5E14C6636F57541D3C821F0776D2CB9B8526D4B826791A
0B179B387D47B08982D338AE4D93711A9AFEC6B628B8EC464346666841657E34
0A8624A495F142A3D4BEDF75EA6AEB3F283B1B527748949E4767368AB7391F22
80B8DD8461C76DABE568B977E3CBE4B17F7A5D58CB025CAB581588CFE46CE7F8
7D54E7688CE550D5F283BAA71FECD03B45052F6C5467A3A93B1B1AF15B611A31
C49998ECB8988D5CD38B4DFB9E7F4B5A363E2D703396B0DE5934CE210331B2DC
5D0A41A7321E0B76A1DC8D3129CA0FE67228C0D9B4A56B3D6551D1B34ADBB2B9
19B3C9FAA8B33B7B1FAABE696F303F11E2A1039860905E19
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 112 /radicalbig put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueID 5000774 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1C8384F906A7BAACDF441BB0AAEA2A697E453D9DBB2D81F604C29AC61
F7816B922F71F5A4D893FB1BBB9053367D8462F3D8AD395B65191A8AFF77B909
C0247CE1DDAE2160EC397F95CE4642F01161543876EC577894A4F6290A869344
9ABE8C7F916DDF2255EF2146B142E41026B1D76DACAD6930BF9A50450AA9C0D3
BB7F75258CB4FE37337C03BEF3C3B5B5E42C498AFEA7F693EA8469B71E340D65
2A84CA6E1576C555C30F436DFF750EB473F2AE61BF95A60E3CC195E05CCC4633
052EAAB6EC1D7409138ACE89C8FFBF1D567034BC26C47D3D9D1496EA4A6D073D
0C11E18CA3E7993AA99A4BD98DF142806350E3B43CB26FF870C2E6F2E6EA37
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /dotlessi put
dup 19 /acute put
dup 46 /period put
dup 66 /B put
dup 97 /a put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueID 5000768 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209608D3976637A
DB9C73EB3A28623DF758C25574D740385B2C3D10086AEB904A33DD76DA2CC4BF
7E37F9117E9D81D3EFDA12D5BDF0067450C5A8A53959C055C5D6087F1FE6FB5D
8306F16FAD71AB986320F1229440C63ACB5FA24E41CFEB12C2BEA2C25E59A3F9
6CA5B7A04B57F2471D36F5B41E6363DCEFF2DFFE9131F044125884739392333E
15418156EEE8DE92EF4C176742032FE8889839755D8D821CD7F8FAAF8A22C283
19F79216C6D454A864898EE9F830DB5F3372B8F47C464DF19C69ACB3BC0566E2
F25E7FF148B2CDA2B90CB5884440F464CD57295728A4415963CC1BC0635BBEF4
E812CA5E0E788035873D05616F7B0F6A30D36BB285E7955CFD860345F16D952A
BF2F7D2702DB352D0874442B2074859EB49313BC27E1067D627362649D82A5C3
A57DC5041B1A13FD2FA89D875019E23C31650A25CBEEC6B93C575C363FAE2164
76ACBDCDFEFC8B7BD24AF41D55196DF6FB2F28DF88349947B448513C7E832EB9
F35B28EF86C231336351C1F89AA9AB1F8C02D0DC35746E97C2B29B7A44CF7418
89DAE02563F58C453F45C231219FC9727D5D477B22EFFAAADAFEC78ABAC4D295
6CD89996036FBD45E53B129E9FE583C1C5083B199AB8C8FB7EA2F8C7D4D3CCEB
9BB7623FF9BE5D7D99B31E627EDABFD4E30851135DBB27457FB4CAE161973476
11DFE63DA3C7CFDF037FA2BC4A92730FAF68949DD17C1D4D030D7C1F7B873C11
E9D40A2414485EE51C916E20BAD2C45E54E4F7948FFEAF3702C6F8B3BDEB5CDA
18F9F8BDA2AFFE69797CF1791F057F8945427E95FB425AAC96FCE84774622377
3C8BC72E954983FEDEBF29C468F8709731A513697AC661337A35059E033BF9F8
6DB88FC6C46FD508870C6C620861E751C779512C404ED48FF12A49B9CE4FA973
134372970A35FBF96123FBADF96FBB45FC3FD89AE09FF322EB01B1222EF05EC8
9BF7023DAD920B14923F255A51C48BEFD2BCD926C26CA266CAF719A760721400
4D566D1A1B4C2B709569303CD1D23D5C8E17CF1B43A482C44FE52E57AF48D49B
1C572809EE861F86F7038D627E933605E9AFFFFFBD7F12425CF626FADD7F013D
BD6E18D63CF46DACB9D96F9E22F6A94321E8FEEC4C681957C721F61E832ACF7A
1FA6C19C5235CAC303AC954222B4F0396E715D9F1637C31B755EA31D26BEAEB7
0F458906DBD790CA6F4D37A9B913EF8493B07DA95DEE465AE39DF0DFAEACC9A2
496A025EF93B8906094ABB1A7C1270A368ED1A124CDA3CCE6A6043465A0208D1
3E5771AF7A5DC1A374F3E7C2E2EAC2B801D92EF478400C54645D5A91472022A1
CEA15EB8567761290C8169F50277AECBBC6BDCAECD035F28077DA4ACA5B379DE
5E535650B31650AE6D13881EEC831AAE43FC4EE6CFCDA2250E300DE78C1D33FA
DA81CD5769455A28747A1527A27581C988C2AFDBB67E275839C24EBFCC33D3E3
5F358A92BA9C47036615356DE114D19E07B3EB96F84A35487C7E0DD59C228D75
A0F096AC8EBE34C2AC5095BFF4AB74D66B0483FB9212580165F934A611C65EA0
CD1D5CDC409895F01B2EC333D36A878D10258C10A0D06AE780D31852C0B76006
844565B19CC87505DB28E55C97C04209E0FD1610B47EE011D6CB8EB50A7A9306
3C0F7A811BB87DA859BD63C325842E57174359262E97B86B3D4BAF8A4298CB59
4A856731D2935DF1C8C6134A645286FB2A995391D3573E85D1CE33781D092F0A
EB33F99FFBC779628CDC245A23A8BB3AA93E8C60BFCB64A475308A22A07610D4
53814402E8B9960EFD851029C3D50483096E5E0D5E8FD7A0A8A67251DC6276DA
5F9CEDE33D549941AC0F612C485644A7235081A662524C155E064394266BF2DB
676E8B7CB89311D34AC2B9204C8C445354155A52690B5875921247D1AC732E9F
2E238AD0DAFAD0B5E9138F972503FEBC8A42F8486D2630EDC9B51F88FF22C261
AA78345CA9428F37C9695651AB0D7469F1BE23203E15391CE1A258CE49207871
F5EDC9860A57CC295644F4DEF4D982190A29812A1C98871C1124F3242B324B09
6241E8A900E7C75DD37EA2055A4D9E76C654609FA2F645A89A570EA5F6F7D8FC
C77B8B0C615409904253266392F74EF044F21984508C75F722F59E8E025E80BB
23355E0D7830954123365B49BFAACB6F2883D7645980DAE6C05BA1B43D2DD245
A97A0EF655E0B0FBC9DFC21B65222D81ECB555CD85853706023E130D632AE5FB
D33EDC56BC3E4AC4B823DEB9D1E89B186618AFA0EEEE7E22D63CD218990E1457
F5919A1596EA31D451211A632C1630638E503187AAAB537E2E716F13DCF6D76D
B0CCB1C87B0DEF15802AF211F58BF15BF8820560CC1E5C8F5BAB8C31BA2E8F53
92A4675C8C5419D179376720B18CB9B0AB17BCFB09F77B68390EA62D991BE5D7
3CC6BB0199EB4FC99C999155AC00960A8D8DDBED7860D2F807C226DCEE948C18
4843F2140C1E4CBE1B8BEDB6AF8D63369BB6B1097E469AEA1D5744BB01D0A9F4
CFB5934C947106ACF0DC0F38A6C8088CA9171F4CEEE74C99542BA68DD4C94250
54412B7DBFC26F837CF6F8438A64B7E3140C61CFE482B8862355004A85784E2B
2328E2989823788F8EF67F2B96A04AFFA792F81C1E6CBB6947E67503CF4694E9
E2CFFE751B8DD2162B2126A9943898B186F0F6FE9581DE03C862E4273A538D40
BE5620109386E544AA3C97D9709580489E743082E2B406CD09C2EDA2C3BE0CE9
403F05452884BFA25C73D2BE8DE2D9918DFD26B8507C329CF3DA50B6DFB8075C
E48B0C0865D90AA6608CB0F3866CC6781AAA43B729E81362F37B6E90E7704ACC
077A0A7457ED5E75A4FBEB40EC4547AB9C3B42B7EA59BCD72EACD7F602E3DD0D
3124800135276374A921EFCA2F6213311E1CEEBB03D3A84553E54425796E9D73
49694F29DAD73E3A512A17DEB06F6A11890AD68CA8CB9C965A4F6DD97EB7929E
7C221F2D702B6DE3A224E6680D8D0D22997E7988B5783D93B981D08D6887F9ED
867D39E62D6D8DAF082151DF5F9C8014E2470DF23CB9F24C126DE3AEB5933960
872AFCE5806A9BDE96C6FD1F80DC33EC6C59A8AA5574F5790DDDD5DCF1A101BB
EE32306D67B823DB7F582CB9C10717F9A213BF329C4588E0D74A944A4D539464
280FC736D1EE3D88FAA2FD8F66C53D9F0E5D88845BDF82D28BE84DFABEE2A603
A97B385B03B524FA76E50D204C6CB0F1A24B7DDAEFCA9E68626153929226BFB5
ACE0DD718D256181EE01E381F8502ED57B2BAD649D1F2C25DE793D0FF019F4A3
63DAB5E21CE7B3AEDF513330BC357604BD01C6334F5A2ADAC1BE6D2795E89A7E
4BE812F147D2C9E62E3A163A48828173843E9F83BC4ABC6133C9D4FC3FC469E6
E7C7F4FFDE6CCA92CB55AB641490759E3B0F02A85BAF32F19058331D150810B3
01A17BD2C2CB53CCAE9C7767DA8D233C6D877D7CBCEB68435262876BB7C50AC2
993EA8F2AECC76B328AAD041B72A975AE0D4890BD2861D127B45CF6A1125DD8B
30541B19B81A376E1EC360CB47A8852B419607FAC2392148E673C4D98AE727D3
CCD32E2F0ABD680AFC2E679872FEFE32DCCC08084CA3AE5F811F75C5AFBB1C13
AFBCDB7435EE4A21F24F750C97405D8325955F3C34487F09727629CE49E8AE37
D5DB167A6165DDE8F34B45F5D4E1DA84E43E6139C14869CEEE7E85C7310C2020
C8BEE6C82147F154EC059FC06CB57189BD1CA31E604BF1D4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueID 5000789 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB67C3039A0F
BF0BA4B455D035FF3126F33A4DEA7E284EC968D7E3573F67851FAA86E02B6656
975FCC660F7273CB48779588886327A2F48CFFBE4E44543C1EB8D36543F683EC
150736E74DFDF2FF295BBC90DD9B40B7347DD5C3780CD3DEBCDB3845FCD5A6BE
D4B0F4589FEA9DB5C26FCD6C77ED81350F0B3749C6CA17CC63C5AF2C2AFD5E84
229B899BA2F3EAF822DCAA073D0836AFF25DFF895F3C7738CE991FA430DD7655
ED688AEEF60CE70EC99EA2E8F8A365DCF4EDB16073C89A6F0481EFB2E9FD3EB4
45E116C0F1F7ED0D5F677484FC800E5A560C50CF151955906B979C0522A7BA88
5FB7CEA43DCD2FADE9304D4017F0996D26AD97E3DCB715009929920D0C93C7E8
E8F6DF07F007F8BC8BBF81928C8BA155501CBBED198CEEC01DA4A4DCE0F60F59
BFCF91B05E704876BBD1EE0F58EE30221880FD40C5EF347D871A8092722106CA
3EE1F22DF811148B1336E82AED857DBF81997F918B8412E58E4012E3C828091C
D0A72E2B86E6C24F84F7875EDC498F0B074AD47149E606EE88CED79E1993B045
0A428F23D6D272B5A8990A2DA163A6D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM7
%!PS-AdobeFont-1.1: MSBM7 2.1
%%CreationDate: 1992 Oct 17 08:30:50
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSBM7) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSBM7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
/FontBBox{0 -504 2615 1004}readonly def
/UniqueID 5032014 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6A66A4000A13D5F68BFF326D
1D432B0D064B56C598F4338C319309181D78E1629A31ECA5DD8536379B03C383
D10F04E2CB7C8461B10646CD63AFEB7608468CA0FCFC4D3458FB43D22879B515
27DD9CCF44C2BFCD95A4DE911E4915FBC02335E9999FD9B546134081D6DA3792
EC4A76DEBA77635BE52E09986268A919CB48B5EFB1A1301EE0683CB5709BC8CE
D819D799020CBA673BA39C911075501395B1FD20EAD392C9D5A8C9FD1198C737
D1A614CF0C0432F29DDEB4BF9DB026908DBE89EE522B7D55DE9BF64AFBE6248E
2E10466655EB9083E7D23E3F0EE26154F191BEBC9987930CD4B4CABE1275BDF9
8755EF3D531FDF91D54954FC53F15A38D1E8F8D1E36447484FA2C09D34813615
838B6330FEAE536D08376E4A0FDDF58CDF5647C9F1FF3A7D1ACAD376DB3CADB6
9459F7A5D4F1864863B79E9F93A1EDE8B99C3138D26227C01F6FE0AAC800F2E5
94DD81CF7B1355B642CE45CB532FC5B535D66EDFFEA076C009E87406D9772D71
848C3C53B7496A5D6B58679EF11E114C5F457C6A0D3CDE50278E4A89D5393B1C
F877CF4E2142A4D045C4AA9138105D748903BACC28FD43DFEDB341E1FCDBE2EA
D412498FBB5374D6836CFBEB13D4C2B7B9625C25B037FDA9DCC42F5679C4B3C1
6340E341F73A9215092C0ACC505A859FA935BE5172F4F6D4A30E73914DBD5297
7FE0CEB5CD0B92176B8174870F9FAFD22BD2ADDE02B5705B5FAFDEE372F17857
40C1B4024C9F04375B9CF997E9D0C0F7D82465D678BB9810016E6BCC9C4374EA
6B2CC834894FDCA891643D9417369458A630FD498794823FFA55705315F0687E
7592A5DFC8B8D6FE2F3C64B4A4F9D37F5F2200BAA277F2E0BA8E5A849CB4D8F7
C59D7605F06ECAA3A01F5180E25F1DEA34F81CDA7DD6C90BA8D0478E3ABF9F76
58C0FE1BC6594E230018ED14DED710EB9A11F6C4355EA61D9CA083951E8C374A
4EAB8971BDCD6C396BD1C6E07313B338068845A962F0A32548FD253D1F237BE9
1AC8C1412AA46DDA13D4C1840D75D6A94043A7DB11C57487035D4652902449AD
C7AAE657D1B0142D78D4F39E90DD6222E11320DE4D2939F427FA7058FE5E0386
BF4560B2EFA31802BCC6804027634DE8C10ECDE7C259AFEFCADB80AA07D433DC
7DB619FA8DBD44762B287B9E9F085584A0C1BA1F128CB59BB17F975B3556E024
F8845387ACEE0DD08394C0325AA73AF4DDD4AD8C60281BC9425D64DAFB3A2710
78C3CD4165BBBE89E342D2A94A5CD76083C217A5443E10811DE9E45E54DABE9D
D44746617B833A165E33EBE90C99203967A6CE4219C7B6ABBA9878BD4A75006F
EC7A3969713A7B9ECE7DD01EFAA64A36B5AF8854692597C9AF0A300660AF1AF9
23E4379A2624968AB762A960E148AE2718911B0EE896ADECAB44055924F1AB8B
88D6A95770B69EC27997889FD2E789F0967F67DAD4E94557FD3BB057F05A9399
1F23464A92DD140642E3A7B1973849E64D1A3CF6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueID 5000792 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FADB679CF58BAFDD3E51DFDD314B91A605515D729EE20C42505FD4E0835
3C9D365B14C003BC6DD352F0228A8C161F172D2551CD1C67CD0B1B21DED53203
046FAFF9B1129167921DD82C5964F9DDDFE0D2686875BD075FC81831A941F20E
C5CD90040A092E559F6D1D3B0E9BB71733595AE0EA6093F986377A96060BF12A
A1B525CD9FA741FE051DD54A32BECD55A868DD63119A4370F8322CCBEC889BC2
A723CB4015FC4AA90AE873EA14DE13382CA9CF0D8DFB65F0ABEDFD9A64BB3F4D
731E2E1C9A1789228FF44116230A70C339C9819676022AB31B5C9C589AE9094B
09882051AD4637C1710D93E8DD117B4E7B478493B91EA6306FDB3FA6D738AAB1
49FBB21A00AC2A999C21445DE3177F21D8B6AAB33869C882613EA6B5EC56476B
5634181ECBF03BFEDB57F079EACE3B334F6F384BDF9D70AEBD592C8ECF21378B
54A8B5DBF7CB9282E16AA517E14843909339B5E7C55B038BF3BB493F3B884A1C
C25F9E8FB912CBE23199AD9D2C3E573727701BA301526C66C3617B9514D6F11F
11930B1D97C17816C85B1BFD9B973A191B33CC3B391815AD14F1CBE935942AEC
D4004E6BEF379066FD72209DC88D2E634E79BCC2B98C766CBD92C561F2703F8A
109E6C6CEC7B866F2FC7ADF646BF492E520319F3B949AB5D84AE990B33344A40
3971F58DFDF8D8D67FA0B8F2A0D884F8C09A5A721319B911DBA0A35903877343
C37BC36C5EB32353272D1E6ED5FCA611BE319A7E1E842CB7576E7A7E360FB06E
1A389BB0DE8D34D7E315354F974C5CD455DD810796E94A26FDE64A47702BDC0A
ABABB6D81116A2E75C0940A75209274B3F99CD3718860DA2688B01404EB0BE3C
B6EF944FC48712229D3936E9D2DBD53446592DB6A45C638F6781603881EAB58C
AC9A0395CFA6FAE14C96AA933ED3A93CFB65A4F81607AF60B76637885EEA66EF
1D37E346DEED771CDC6C07DD1956F8063520945FC68C57028178081F3558D393
60ABCC28B5A5C68AF6374080BB0B1BDD7A8AE3333B648F40B02CEA9D4CDBF4F3
FB5AFCF58914F9D12DE9445965A082C8D23787838F7E63C54B3548405699312B
9566F8F66C5812CB2705DD1030026807C6274688AA3AC94DA69EB8580B14A31C
D991F5C6C5FECE870F38106EBE010351F0D2C34562BC348FD17405CD44EA1ECA
44A73927E08AC56D3F37023EFAFEC99B3EC4155F7608EFAD8EE781201EF52918
BA9A4C5E50E8B02782139E8FF5387A0D7F2E88924C1F951F809E3B776EA9B5D2
689F20AFE599C979984DBE98DC20B0FBC9C69762F556719F8C4976331931CFA9
A7CFB2D5DEC39BAEAA7CC9DC8FBCEAB4A37E9E2B766F6D28EC0C6BB46CBA14C3
1C90EE8033C91A5D0ED40BF02D7360C27A87AAA05DC28DB4AC638B4F7A6D6E9D
4630B8FA8B650718668BEF51F6B1FDD538D04BDB1798D0A35CDF3095153FB2BE
5BBD160264EF0894D43122B78060045FF10F20107BC52AD7AC28FD8031375B45
F710A84C188ED8BC33AA4621A59C7F9B4C70BB18BFBEAF07D81EE852CFE7BA4D
542E4A4AB29ECCC87477C03B815FA40A54A64474589AF69675E85C7F4C368118
ABD3F36458C0B6D3BF214B3D15F9265B6EA03C534A1111E262825DE93C5D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /dotlessi put
dup 19 /acute put
dup 44 /comma put
dup 45 /hyphen put
dup 58 /colon put
dup 65 /A put
dup 70 /F put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 122 /z put
dup 125 /hungarumlaut put
dup 127 /dieresis put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
/UniqueID 5000829 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EF696E091A9D51510BE264701A41C04FA8125A48F306ACA7A83E35D5BA0C296A
BC594ECA2CB27E92FED95B595C21E5BF0DA724D40761CB377BDE5FB98C9D152D
6C0DC98C4083E9656321BFC445CD6FCC142DEF16E27DD6FAD0B3185223B1A7D6
779F39C70793184F2C3B721FD0AE6D8E063BD47804785DAEA74AF8C75483B713
650616523575C3A062F3D53464719977C1B03EBD8D8D1AEA35CA70D5E15FD694
E476799C89892909F3793D1BF957C8A447B6F30D828DFE4D81D45A816ED7A7B5
7835164E80F1345CF6E683266A842CD52AC0CDDC1FFEE72F910A4E256E5FB07D
A4E0EA5A808AC515D7A94C5DF72EB12BC4CFC51A5E6CAF85519BD866C90AA4ED
90B97861152EBB8477655F277549B3EBFF2DD77A28C26CC5A339CA81292BBC01
2E6164F055D9820F2B7DA1107F973A5F5F2680DC7E2BD7DD140716CB857F4D65
FB49259FD850CE928B199F1BB8CAB8826A893C14DC8041DFCF53642E2582E6D6
D602C53122F4D8A4417F88387396CC627FA08D98AAE23BA04F8BF63BE83169EA
A5A8A43B4D02748AF87BE1F459486B5D3B1530C32EBF64293D16984F7AB7738A
2071A846C2409C5D08CC5E3D0223EEA2FC2C4928124574F7408C8DB2C50870BD
95A3B6944CB95E1265028EBC2FB2CD0D93BB195426091ABC3B747055D1CE2FF4
42C164BB0D4D76D34849CE3AFD65DA218F526D987F93F3E7FECEEAD6E032A82C
3F2FBC44783D7F0EAE2544C02FBC70F9461FA1B495B004EDF0183DE0A8648BF6
D599C76DA57F9F28A0549B88E8604E91C23D9D3233C84D9CCE3C4467095CB022
E9C0358FB0BB740A6C2012410744C105B2EAAE1BFE014B7338414E713D27C631
8544DBBCFA65E769B794A0324D80DF2CC48718FE5F4CC8FEEDC47FF64FB158BC
A7B4EA38ECBB8C4CE92197E6E466BE6C719D41999FA91CAB92CC9201F7C5C97A
2A31DE6FA17E41380A0EABD4DC1523F165B7ACD6B70317B8BE538F1A14AA4A8D
2CF85220179A03D87C45C3729939DEFD21109A0FDF67EB275831000753615BA0
D61298C48718FA40409F0F652717436E513915447D7908D09A123B77FC3465E7
80B593DE765F77F12D1BEF68B836B804F15B5AA3E6A59AD8A8FA00172078FC76
B07F13A00D58974A77E0EB8CC910661DA424F15F1777AB861C34787B41756AAC
474E524402FF78EB1288EB5C7E3A27F630A4184F2653F236319E2C67466E8334
F168EF80928803A50A856E738A54711168D1FCB7A68C1001AFCB0AC263DD6EB5
9E4ECCFD4C4AC7178111C642D614DB63D20BADA4189B2D3A06915618FF33E0F9
179CE197E8B4C320528D61491B16C41799E6206A543835E15F2B86178326E06B
8EE41318D23EFC1F94B7CEAE2278EF8A5BA486D2D70EBB6CF9E51C681BF6D77D
618C54EBBEA043F5DA44461E8211304254E2FB140EEFA2D770374E593F1EA769
9A78651A11D455EB3F9D3AB13AB05788A7FE232AB28614E79A01D0363D11E519
D1E67F1CC07935EDD2B48A5A8EE9CD1C0608D004249C4EBEB0F554B4863BF7B0
6E154845D86BEE2B82D2486DFF847EB3CA40A1B7F2BDD9A3517EC7B8D383CB2F
82AC2DDEDD22DBF55BC2A71F1DE8BDE0E1544000B843A8BD101EEABA63CECA24
C576B56922BAE50AEF85ADF968700838203EEF0E93C53AE7657796F8C2D1C9EA
6066C0FEBE0228E80E9630E2EB4D0990D3CE79DA72131EF102F3F8C8E0E79A91
9DA37043FE476FDA40C6612C8C2719D5F940162592C626136AB3122C30B086FC
FFACC43A1E6E213114E29A05E83E5F81228DA947EEF603A0D60FFF5117988952
8989A483DC5379EB20DF8321C308D63768D878558B8C2A51DFF8388446A866F8
3F5B068126905E0BA538AB9DDBD5777CAE2A11268960296A5AE87245CDF8702C
B2DFA81AC9416F4DCB2755B3B7E9C13BFEE47240C57DD56F672425BE0FE3545F
AE15ADF819EEAC09157B18FE0551FEF0A998F7231AF7DEC5CA6AA1444FE4B582
B13171B240E96704D4A33DB2D9324DB0CB0AE15AB791250F035EB7178A41FD5E
C6399316B386618AD9A2BB87F6B2E404422A1B71CD26764A688697D9E102C2CB
77E6E6B53425FACF24F8EBA5F477F69B61D0A7842735E1F7C5490A9A56BD7695
2E254595A0D6140486966196B11197D08A5FA212F65CADA42DF76BABCBE055D5
56EFF290B15D5E89087B9B1D47C12F22686A928574E7C33D232A1E008C4C7804
833DA5712BED98CCEA2B2A4769E562593A9F069A133FB00E6800011BEE186A3A
A962CB35453ABCE05C04B7A3C7FD506DF65D7F21674A95C4B6BCD0FD3ACEEF97
ECA2935F3421F58F5278F431BDA4AE4C8929DD7113573329A7A31BF06603C85E
B867D08EC7D7840C1CFB99C622E78BA984FDDFFB4B53E644E28E122C9F10EDE8
EC50D450F60930040C8186D9D454C760C265CB740D98BCA2D09B6DC4D824F1F8
0887A918BEA90A5945BE1224361E1573A0C5EE834BAD7079BBE53BD697CB5E7D
9C48DFCB4630788460F36CD3FDD31A0EF86DBD6A8E370511DE30F7EB577D6A77
92CB4B806324EEE0B629D1F84FBD9B7E8D8D270413636E29D2290C77B83202BB
C74B074B073EF2E549E343C2B91DD3910CDC926A6E03132A9FDCA45FA134263B
E2488D262A36432466DAAE10D3A4F3B9087CAE5BE1566A5504953B9733D89100
4064AC621B7B89C5595C9BE1EB83DD0D5D33A5656AE218E26A2BFA4403AF8F9F
B7886B7D061680E15D3FB27B0C21CF793372367A5EF70DC77F80945EBB3A8E4A
1E966C96C4536F4466CF3F564ECC261F46CAB64631B2194D33A2AC60A2279667
65F7B919FF5F4E523425334F6A52A40CCBA32E86924E105F8D511C0E0DCFFA1C
BE6FABC6109EEEBD393732E7987CA82851A8723233384C4C696ED66AF8486228
9A1C9831FCFA7367310BDC4FD5645D62A662CABC21AC3FECD789D4DE273A6944
7E5459125F72E0EBECE84247D92EF68B7DF12A00DDD9A53589020DA35B77B5F7
E46F45F075CB4804212CDBD1885963915018A607CD4C510E34E3D0C3018D321C
FCB1EBFCB4691D5B09B6D8D42384711C8DF4B7249725780117F1B621BD2E5702
F897A1F9C3A0BFB6150E73ACEC74B8D2FE725E5D97FA2940061C3FDA3786A135
EF7CED9572C4ECCCA63634E04768D48F6B8DA7D1B040C146FFEE08E7977839AD
EB860B8BD74249C2126ED4F1D5A7A18EB29F0D2EDD0FC787BBD2158DA210F307
A6E910BD8699D55EA365B8CE8684F39EDD1792CC62C550E900C1AC96B8CC239C
99F49422B0D579605B97E218A26D63CD339BB595A53EDFA31532151946914B66
51A96086507BB94A14AA15408E9E5DCD868ABB2C8DA3154158B55F93A5EBF158
37D1052CA5BC20CF94B519F12C67B118DB1D4D7FF4F5D3702CAE266660CAB319
43DF9535BB1EB65E99AA992A7A507F1436EBAF5B2C2C686DA5091CAEA22BDDB3
03A0B8A1F9559FFC4598329ED089F97D6871233FDAE96A82BBB701414EF94D23
FB1320CF3CC812C8829FCED896588920A613EC0A114DB641512B3A7E45425703
AFCACC76C8A8902E213D1A8218DF8E0A3367669DB78A8574BEA299CD21B78560
0C9660B2CDDAAEA1E22FBC14AC12D980F1BECCFDD35DB2314A22DAE956AEC2E9
A9E653B2A45BE0439C519D7AEAF8D933633F0BB5DD4648CB58CB2BF124F3553F
75B0699A306E1AB901B1EC80BC2BA75BCD80A8AC023A9453E67C8550570B578F
EDBC6D0514FF2ED442B9A65EFEBA52A125A0826662DE8EBBE4F1B52A8839D330
D99B2E6144CA37A87FA888B34F8A62F443B053682A86043DD4D9BE18A4C4909A
1923B117FA84DA69BE1FCD06B0E667BD534984D3F1F4893140A88D4A0660F342
89E4F22DC823AE9B81E77C38E431DFA9E8F0C47157FDE2017B9268E5295A152B
5C761BC74A8067CE7CACB1A1CA1F52B0A32ECD29C3CC3A67D851236B07F21939
483AA5D0B6F64B3EC845AFCCCDF0696ED7B08EE482754D85FD12D0D612F19D45
158BFD813C8C64E6E9669DAC8F942E8308728D34AFF884746261D36B7FAF5965
0534B279CA6F92CBA9A500D5FFDEA704EC2275D16C0F0A5783D200923FA5C26C
3B930EECA3A8A1EF5200EB6F77C91A46E0384525B54AE3C5EAC2A79420F72751
F59A98AC97F0BF33789500B60193F86EBEE4DE0407BFF715C7164988E145BB52
A2D73FEDC206CCC76E0FFD23687D9D2854834AF6302BE781E03EDC3E14B38CD6
C030B7F66C13D5B5C3E7141D661F92D32601E038D31F4081D4E95F6F4BD10583
B24EDCEF29262E1265B73ACA6585392FB53F747F8CC3A5AEA69A9FF7A7327043
001856CA8570A38DACE9AAE9EADF9D26325833FAD440EB4ACFE7D5D0E03E5224
00EB7E7E69C1E6E1DA9DCF085A1BB292FF333157BA00B4D34553256554A83F34
9B05F3D4208B3AF8AEF3385E7B1A6A25AEF99A4DDF9ED3F3C2BDD8F679D514DA
849E7BCB7BA0DA41B72100BBAF85DFC38F48BE87AF98C8CC51558888BF93E40F
6D81E25EFF2A55D58AC05340C391492B377BE3D0C79F946CC66A654ECE418145
98F3B76B2F999CE12E12AF1A0AD508E3FCE1FF9093CA4ECB0AAEA2FB4A4DC58F
472776724DE634E33F3578025212F17CA9D6390EDA65027EAA74474936E23941
0AB66EB09054AAD0A9264A709C94B14BCD26B69C9192C18EC7A03DACB9C4E16D
F9AD272F31DD54636780813FF2F945389977B9AF60F796751484F2F8FA0C1363
75E0AF08D66F5CCF23D5A50F56EFC46434293C9D1F147C4223FBFF7A49705982
9A0EBA1A5DDEC467F986A3F662F45815EA2338EAE4CCDBEE55CB933DA6C60B0E
BF2725049F99B826C4A035D67E23431EAE6164701F9529E028F307716EE9DF41
A334CB33E2A6EE052AA8B78B95E64498545B021490BAB81F5964032A53D2B788
4B8A56B1F9400E75D38B4AF82D028FC9AB00C0124B78595164221439D766186A
E88DFEDCE71360E288BB6D002ED6610E1C739BE4F9526D7E06B048820D7A3293
4AD918D377EC636BF63ECA79609EE78AB4B602F6B579077A4DE0179EBF9F2DDB
9FA827888EF0278C542C63850FE6DA70F5CEDAC1FB60FE3F80D03218BA61CE6F
C5F781AC161842B784737551D2F59E1A77A680BC09989351A23F9726E04017BB
E630E4D709A2359C1586E7CA7F36A6DD3E36E56667BA2C7E3580CEC9F55698B4
2AB5F1CBB6E1258DCA5D96DAF91880A87EEDC6BD63F7E63C19E71B8877638A22
9AE99370650D173DD6959936778B6E6A8F41A38977B1996649C74588E110FDD3
D039A0E96FFDE3D0F2712EC507A3EE7438796F91255EDAF57699967ED9DFA436
61BB8A9697AB257CDAFCC62DA575B0D1D2FF665F640660B746EA5785DAA158D7
3E0B1048D227B41F8CEAD32DC1FB6D674320449953AA4AEEB70CB6220D3ABBB9
93B1B659F2185C72BB6FBEC2C52EF6A2D96F2F1296EE9825366B5308BDD43A28
80FEA09E1B3DDB7B1FF9E3C4261F5BC63E9FFCD592C3AA03E2C6FBB7B1CC24A5
26F569CC00CE1E9E0FB30ABB81C15D0368EB0BD82B9203BF27AD974E9166FABB
F191F9EB8EEEDFC7D1D497C4B072B847D6DB872D4790537310611D01A09ACCBE
5659E3AC6FEA3E03DA154B3CBB7C538CBED80F7A38EED6176EB5E053D2C87CD8
8C50C77950CE1015D7159B80C03781E8C54FDFBCA24D74080B1E1F92867162CD
0B992DEC6D583CDD3D9308509D3ED3688AAE29BFE0F404DF0927BB3F3B8C8414
721976FE4324B080310A4FA8B8F22890ED8E56F335E287C1042A6C701D01DA66
1A9BB67DC5B729C6133121EF4DBE3BC70C618C284197DDDCA043C2832A73181E
0490420246EC8FEBD0BF1ADF1366FB55BAF4A24884FAB78F1E177C443587D572
BA8DA760B1310BDDA31B620423ABE36A0C86712DAC054FC19AE26DE63EC79ACE
10EE923B259B81EC29239D67B2414C05840C5F9A214BAAF4D1182DF26BFEC436
64F40F81D6C2A74FBDCA161D94D1632BBF73B73669456157F7588738539A17E7
283C6DC6D7BA1EF4F7989B02B88DCB225B05BDE29BA3295598C221EE12656562
FB1F560044F8FE906AC376FFF4D73FD938756B3CB28E8C794005A33E6A9E57DC
BADF74A2C0E7398699AAD15B516152A7792E33ACCEB9A6B2F2ECD3E77BF64721
6B875946F45AFDAD1716498B704DBB11C8DB4E8CD3BBA999F2BD32CC2DA0A45F
FF17533BBB6F88FCE1642E8557D25ABDB0AF612BD81B50A6D21E0685786F45F7
2DED3A0B53ECDC1F6082A0CF998EDB9F1755A09607660F0F6ADE3408E2590638
14B1ACFA385DD10F853CB0E0983E7F8FD2F9A50AAC7B96246CC38236D5FDB1B7
5B2EDCB7A292EB338CCA2D49DA74482B8D075CBCD05B486C2F3683CBA5E7AFF9
132A66E39E3C94FF30DBE1A38B514810873DD13919D61D324C35535EEFAF5D58
AB74D7F637B450C1F124F463C16727B5AAD46F805FF35A1BB6964239E01EDC9B
E0CA8D8B3D173D82E128A2828770803B2C1A15CA7EB0BE6524DDFDFD1D7B3BA0
60F020AC43945D331DDC30F6A5145B2BCC60B4868CF8475772A35E672D0A1B83
8FB9DBAAE09DCCE6D2DF89224970054579E37B942F2A57274089F6431035CB6F
04B01F62986333A60F7DA5B278A00B0ABF4E30B2457994EAB24156F13BF10519
37F129EEE0A337A0203047B2C102CE8EE10E7A90ACA8FCE0270C26C825BE96DE
DD8B4D892E71DF5A1E3D937DB50B6105BD7735849F0A263CE7A400DE4172E88F
97D43D1C0A1304E815B3816106193F5F451D5BB801203E456189E3EB074351A9
C5F9D43B930CCF39157E013C00CC5C42571D7EABA323AB6C22FCCD28A928D42A
56BEB47780C6C8882603AA1B90191E5ABBDFC7C2D67FD2DE805CA92C19BBB71A
9123F5D6C055B417B87A80BB62E46B3F340F458FEE6DBF4301B3C17D4B70BE59
BCE9E9BAA4F50B6EE7A5EBD8AE34A40813DF872B57FF5C76505B7AA7AB528533
9E5D0FA5BF3EFBC429B4161CA3E9CFA1E3939184AB612AC919A50656481CCD2D
946D4A5681707EEF4E06F8BC8612A3390510C827A6A145634AB63AE23829BA02
153C6A3E6399074608FFCA06A36BCD0D14855EE69CD0F9886531B3D12EE6DECF
D1E0538E9355DBCC10A0232A9C73ADDD7A7938E38EA5A753241C90B7BA50C964
A71C05FF36FC180BFBDC680F8C5E5AE0BDCF91393AB3D95CEFED6151829DFB7D
4D75D8A0EB29F650C2364822BF5D0B8D3F04A4D1CEB64153EBB15FA53AC4FBC6
6AFB628F9B3A33D81BC5EB9A3144B5ED9C1C1D50B346228F39F2F1BFBB0BE509
B16384C061DEC931CADA09CFF487A6A7650E0890BE64EB3127EFCFE20FFA8229
97B69F253AB64B28912593552B4F2BD84ED6964B6B65404AD5A9FED4EC9229BE
6BA70EEF1FF4758DC003BA7E43761D6FDFC85ED4FDA5BA7876920F8126414BC9
53F38B3D60A0EF8169E8B63D2DC033EA52DC94C119FDC6D658F01E57F9312DAE
A775B06D00C44C1D80B2614914FEBA0423D26B92160880B13737255541ABE193
3E03B1FB1271C98A3FC75CCD2359BE2763B5B049C19BB754DCD0DFAA5C6C6864
756299A392D483A67348C2EC1806D986511588A89A5EE3B380165C5729EA1BA6
3E5CD8F9B2853094FD1054D17DE7A017E207380B8286
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 97 /a put
dup 99 /c put
dup 104 /h put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueID 5000791 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762BADD50DF87A0
8B6D1BA96CC415579DE9A26786F99CFCB033AD8753CD9E2B43BD2416A6089EB8
C8771527C2D6E2382DD6A85879B200C21A0DC8F8954B7371D92B80D81716F31D
6D6D1C51D865A009C96E67687403A7D52E3AB88C9734550EAFC0E9AF2C978EE9
CF6E29BB288664BC5B6A001AD1A246F7435A754D9619F127BE06B181482F3F06
8D15001E6C7D78E253AB093E8FF013DA57935A4D5640031FFB87A19CA2DE967A
841A8D435220CFD88CC3D398FAECDB18B828E50D1B14FF1B820C27F56386560A
0D221EC4049A09EE14BA488455E6A6C1254E8DE07484F820F61DC76BC90FEB73
D8129A511A8B2648B76624F106D4BA6DED1D843EA9FE57C729D4338A4605BED9
1683633752B601F0688F0C1A915220D8D425C03EF4ECC8BED447D36FFEA2824F
8F1D6A0BD30519EEEEF13336943DE9D2908CBA5A7193F30C4606A78DC8FA294B
FC4CB296B240F15083E395B9FB9CB72B5BC42124509D6120655F2407D63889DD
20E5BAD7F30D978C21CC26BFD95532E322AB265422D67032D437E393C7CA40F6
05A1CB48602520CD4D635111034A41468C4F2F37CBADB5757299CAD3C77A50AD
9B6920813D88B727554A0734BF828470B755469B4A7E58659596CF3E2ABC323C
4E917E94C7E16DDD9C5A437B23A2FCC67B1D6401CDFD2A13CC36CCB75A0130D7
CADC2D621853DB11AE741E231AB37082FD0295622361784FCA47B03F200AFECF
0373DF6951F07F062AFCAC8D62D9CBD3A06E0511A3F3DA0EF1E1F7612955203C
C5D0504522E3697CE170C65AAB49E0372E758E2E9FF4A1D526571613A5FB5A05
65ACF2BE25BF6E7E71AA1D6E4D722D7721F733E3C974A40C739D4A9A7443DDB9
F417D1AFE64BD08B2EDAAE3545D1C4BD29E073DABEF0EF47A955F6FB6B004A5C
5BA1D637DA8E358CB91C3C4B7DC0F29FE25C51713907A74486C62296ED567869
54F0234088CFF8E05798198E4E613B9420826D490543B10C2DEB41557F761D70
292D38DE5E5314A4338A04BDDA2524216AC774C1D74E40291F34F0F8BFDCE3CF
A3DF257E94C73A65E160F78E41A303FCFBCA367C012491D700FBC44104C39A5E
9C5E87A15B1A6DBDFD3A6B86D8AEF4484DB7F61B020C3A163016E443F9E278CB
1BCADE1718F2C8CFACE69FA0E2200F1EEA2042D980C2319A2AB6A28EC09E834C
C055C81DF1B2C4BC0B3E067883AACF32FCAA9C131F070F00E172C8A65B0D60DC
0BE5AF913A573FAAB4E75918EE537F952AE915372BD3B1E70CCCAA64FB435E37
DD54818E837DBEE95885083EAEACA4F2F4F03D97F153113EFD8F48BAF95A3FC3
1B98C5E7F2C69C1840C3DD9A9828F7CDC3ACA717A73CC823075C30BC61CFC1CF
7D56118CEAD011B7FD143F5F38F7E92BE9AD481991E23E21B78CB2E67C178986
943756865CC5538832C0F98E930F4D140144F4C3876360E7EC65772C0A137107
A10BDEA795117886AC6AE46F120B888C7D14E04C676B3FB46FA1C18BB55F232E
F6A69962F85335F6C87B2EDC4CB16D20307CAEBE21145F0653DB3DB765ED5102
FDA1CEB09472075DEC5C6CBA52D699FE6CDA79903E9F1AC79F6D01B3FC2BA1DB
43E89C1C9FC1C70420EA9C49E767602CC4D3F7CAB2AD99DC58F93CAF449653E0
4DF2AEA7E5FF39A971FB84D95E35BF88C368C55F80457C2570D8DB7D012BEB7A
C07B3D3622F6F0ABC991AD18A40C2B01539F22462EF60BFD80D1484D436407A3
A32DD0EB0EB0E6A18924CFB8F1B3C6DA0B41EF2E7E297143D55A0DED33B3BBD3
9DAF9F1293714D6207D704349A3E1A07277AB34C80987E1D4142A743911F342A
97910F725BD8C22EB6460E125B1D5C905721DE286F8A6954F0A63534B48EE34F
D9F516CA0D2EE61F115C291ABE9537C8445EF093AE561C10AFE5A8937AE88D7E
B0A9B1FC5168C6D75F3CB0AC8CC0FAC3FF5110825B30116A4E75535EC88919AF
F6EC8528E4B1A7D6C45C55DF75652406D587043AABA81114639BDB0B79C5D973
73E93E754FE07E714189BD719DBB17287B428D16F2729AB23FDCFAF219CC0BCC
84297BA385F6176400CC8D34CAA8E70F43AD3960E8312D785D098A1853197852
B9496C9400B205B3CD0BE0AA08047A8ED43E979C3C8B66E59BE55199C34C69E5
B752472A3C993E6310F6E39C3B5EBB1A9FE7C448DE7C991B21C5516A3D08E868
AE1075FB237A7B536D7DC46A2F2F1F5ABF0D0F03D78AE6E30F27C037FF2BB6C0
229DD7564D4BDC48715E8499206DA2C42BC1E19DB531D2A35036D25CAC3FEB28
7907389CED035FDEB68D4F696D170E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.1: MSBM10 2.1
%%CreationDate: 1993 Sep 17 11:10:37
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSBM10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
/FontBBox{-55 -420 2343 920}readonly def
/UniqueID 5031982 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6A66A4000A13D5F68BFF326D
1D432B0D064B56C598F4338C319309181D78E1629A31ECA5DD8536379B03C383
D10F04E2C2822D3E73F25B81C424627D3D9A158EAB554233A25D3C6849ABA86F
1F25C1667CB57D2E79B7803083CB7CC0616467F68450D9A3FEAB534EB9721003
DBFEEFD050F3AC3492F5C74162A9A531ECEC0F47610B4940E946D21CAA771D30
A6C27ECBA11708CC46C62396BF9D1990D579D0C394899D24FE7A4382EA18E7E1
160E7283AF5BE17254790628E79FCC206F28B5566075B3A5697D5209062544FF
D85FD89D6F43D6588B242AB2666B5D2861CD38A8CE676503EDFAE84D12A71E77
8405E468FE391F4F3F50D2C57ED55512036B0DB8E76A7EF413ED08673E56DE2C
16A3B65CD478433C0D2F9FEC4E662D54DAA43CFA6957D2A9AF8979BE06F70B68
ED4C8C493D6DAC4971A3F1D010A7726D084EC1074FECD7D12D72AE16C26194AF
21AF5774D9B860EEE8608D34F150092F09C19959BAA670022B9A9F263CD391E3
74DD1D1B4CD4D75273CAA4E37F68C631723E08FA35AD34C0AFB4621AE6689861
854D16CE1C375FD159A337E221A6FF1CFFB5693A0623E7EBB58C2969F590D081
AD92DD9E5322E26D6A15023664AC73A355998BCC48ADD0E7A4BC79790519606F
A1FEF6075033BCD422EE8233B83D1E7C20043280D531223D5AD4D5B41669F884
95CE4D6DDE819B588742B930C579EDF743F2C74C95F717FAA6154FADC3FE2975
F59CFB1C1A29059487E75C48505BAEAD7145667D4E18E46E610C868A257173ED
0D30EAA4C090854DD8378E92D0A376226EA7DA63798F247BAC770FE26D70E72F
90CCFAADF118304646955B0310C65F6CA51BEEEF87AFFE294D08C44354C73E8D
7AE0751CEBE41E68D7E91ED09D4F0FE329150A34D0DEE8F7AED88AFB66381817
364A65B9F1F9C6416198FB016FC8456DEEFED46BF4E1F873527AF52C13078ABF
93CFA6D5E87708787DC837B554561D07B2DB9A89B886A92E7615598566203FE5
96A6D048ACFEF549BBCE51A9EE6CE333704CFD95926DFC740F5A6896D22EBB27
79603F94943CBC04381C62F5C0AB6FEFCE9B71ABFF7FA10A060D7CE5BFE481B0
32E05B3C998C9D89CD66E4DAB5422D01B386769A45984EA2B3250786533E85CB
9F1595D3556EAAE9BAB4793D6245EC8B8D16A47697B51772CB644BD58E81F416
B01A9223997DCF9AAB43FB3CE9C8778039BA2D8E075FC02BB3FA5D66CCA58D24
D9E0261DBB8C11092320D9B0F5CC79FAF53EF2AFD99D5A7732B1962668A85807
9468AF19C570B30F7C798A4DC45D0AAB6E51DE57FCE9F19C468741F1B55ACB6F
C9357E6ADFF2A2E2E84037170DD9E3F217D22DDEE6E8660C7988961BDE9990AB
4CF63B8D0D60190BFE810A5661C8E02D32283B304CB434533629D0D3826548F7
EECDE3892C213BCF51BB7257B1C073A39928D1B67DC28E98CB0F7D1D0B158EE6
D49E399D58B3C6321CC9A2696F019E6F7EC0DADC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 6 /plusminus put
dup 7 /minusplus put
dup 34 /arrowup put
dup 35 /arrowdown put
dup 49 /infinity put
dup 50 /element put
dup 54 /negationslash put
dup 56 /universal put
dup 68 /D put
dup 82 /R put
dup 91 /union put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
dup 110 /backslash put
dup 112 /radical put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57034FFF80CBE86DD09B724B3539A82A7
A8A84C947CB592B05989BC3F478C0F438CF290049C875A46953A2661429AD219
12846FFEEFEA78A9C2436E18F92481B4A05E9481916C2CE893837A19337564DD
FBB3C22A7A09775A5F3107F043EFD1F752A8B595D1DBCED9F405D4EC63F663AD
65EDA6EE256A96AA2B43F931B6C6085DEB90EC20F3223333D1F7BF3D052CC39B
3F9AA7711D13BE9EC2FFB78F531449D3D44492CD3561E53BBF4A60266AD3864D
FEC5DBC1FF683AD5871D45A797B397DEEAC50D7DF552FD59E8D35DD47040F952
A71211F75869E9419E7317557E43642F370CA6C9504A1DDD0CB66C94C7ED3455
96C35AEC6CF26AAEE098FF8266A85BA2964E2177EFCDBFC028AAD71120CD2B43
B102034604B3CCA8E6E73A8E7F8FA09A76B10C6D444C34A480DF44C62D6F25F1
FA28F6662341672D75E079504295E035720F0BAECF5DB119AC286CDEB55344C7
70C01B3AC97B2E67AEEE49BFF9BDFD7E60E2E30F385997D51F478FF1550ECBE2
4A3518CB2C2F8D40A56546633F5A85DD3BF12BEF170A84AA6DD4ED619FF1E14B
7B99D8F5AA594FF361C379AC9BE1C58AE537ABDD146E26B6242830FAA9E39304
0C0F28AE6974B2B94A780E6D9B24DE10093E955A35B76688F4A81C5FE1500E90
EFEEDF4CE6BFA3128D129FAC8AF4BD6827E29A9355355F8503BCEF0E98DA24C5
124736D0BD48BDAD0697190309B0189B15CFAF097AF64D04C6E4F3DC55B2E7AC
9AC541DE23B157ECB37C981403547EC7D91D60D2A0E72D26D955C93624B1A834
B25F203E4F2C4AF45903E9A5EC742358FF7C7101DDCE3B31DE1825BD83C9186A
C96511D8D1F994C3425E0708813EDF2F06583521C9557D6AA4A06A1E3F992C7A
B6CC8A6822E525AED1A8BD10794591CD0080FAFEC6420886D60DBE2E7F3376CE
A6FD2A5C41CADA673FA12EEA998411BB447A52E7D88449D6D758BFC0E9D24824
8C879129C97CAEA048CFFECCB368A8B219954373AB46613C2E37EFCBCCF1AE05
454D2F75EE05F39E31C7D9A0A9753A09CC039F4EF70F5177C324C910C5DA841B
D16FDDF8D732515406E22293D7B4D2345EAFAAB7CAFE9D93258894F7A967378C
21ED824D63E6447CFC2796042BE26670738CDEA6C3DCE3EB76C666D8DAF36F72
7F0F3CB407291465B87AC5165DCB9CB3FF885350BA35507C0960D454BE0E7D6D
7B72C1E975BAC8EF40818B1784205B5C2130B46A114272D2DA760420EBBCDA54
A50195498C052E13B3DC90428EF728D93DF12F5F6300F576EB11E606F1201714
B2569D60CF58449A3C4AD686BE690AAE76D4395149EF708CB4CDF0F3524F1726
F308605848CEDE78B9E16A805822EB86683EF53E47D3732EC25D578ADFEB1001
986BDF7E69A68F4855D42F25967104CCDAB48DFDA92EFB089CA158D7F160DC94
4C82AAEF0C9D49EBD89E60DCA081724E8EAF86F06B7BCC59F02E083DC4742CD3
0910AC551877A5C2A3AB1B5DBF6C29D1F4116F7628DA08A5892DCE35E015FBA8
9BE4BF661AC283951C7D4E2E80C3ECA44C16DA658B9D2A02325CDDFDDE26C0D9
8770304A64BD641ADD78E8DC3A871C771B55384C8D67EEF932ABA9E4531A23EA
3EC1A6B1E339ACFA66D38998243D823DB16AB257505E6483AAB7D3809C5B37A9
A775B3319CA3ACF7E93356551922E4545D84054F555ECCAAC68572630DC698DC
22AAA750BA082A11CEB0F2D35A16CF145311F9ECBEBF29A7CCB41DE81D764CD4
5F99D8C95CDCCF55BFD1B21A02AD738E4DD7CFCFC8DB2814699F68E2609EB9D0
E08CD770823850228CF3EC83FFF31CF42F87747EF4270DE62BD10AFC248E5C48
08825CBFBAE0E76F6C648F745CBCC615766FAB4077F9FCA446D2050F29C5BD58
8FFD08400AFE07ABD2B4ADA2AB9A533F0676D4CF5339E0CA6971F69E9F225235
624B3F42E6363AC111242AA3AA8505FF152E5F028D5DED1E660E8E1D8E047386
51FD069430DA19F470EBE1A2524F85B95E6FEC75D77D3C937539851838867E8F
591A1C7240AC501057E3EBE31A10D066C6D12BD91AE13E5E3C0058755DB9D2C3
467AB163B2275D0B8E65E8D031576516C2AE4AEBAE69A1E7251F29BAD3DE3D30
915A59CDE68D0F1FA378FD53A5C9C7394F706B5E8466F3C27726E8031418CEDA
5BF2463243B0EC2AF5BB983112E248ED2B23352893C34106817AAA58FF72E490
B425D012FD8711B00D70BF6188325959C19826ACC85158D7B21E0762392C226E
F3441731D3E92FE3B6064D3E3AD1D2352B90BFF66AC24CDE2FC28537611A826D
1158A546362BBB592645C1B1476E83499575CBC52BCEE31F0C206304D07C2CE0
98D7475F6B8421B4FA7DD065AA88C71D4AAF77C4BF4D647060CA942C560A55EB
90E670B01BB2D3960DA14A7E4F3EB63C2EB3A8E5DEEC98643D04FBFB3DB702C4
CD5392D6EDF7229E342652DC4EF428E4385AF12B5295807249A5CD17F009E281
5E7029032B1E0039BFD55E7F9E9C7F48D364E408370297C7B00D8BB48B4A3B54
71123031DFC19AF732FBB364BA472AC9E0BB5DB05508F206B48A42F4DD0613AB
F3A492C62CED6D79C5468FB4B2661CBF9843330A1BD08E2A6E3BD5F95654D394
8AF5E30D826AEF9846C8C5279C0EAB348C71E8B03C7B71BACAD27DBB76CA5A18
D37FF8F75A1AF53C7971F7CD24EA72E1E0DECE7FBDD3C0E58885965B09B711C4
4592E9292677F94AEA6A404D56A41E6AEFA6B629C23C16666D2234B20E9B5DCF
D3D777D280A2F0A0414C7DD1B10C854977A9E4E85249C635088BB76CDAED08AB
4FCEF8CBC314D59303A549730FA6FF4DD3D8FBE778664B0625B09DAECB2A1514
A160B0278D5E59BC75D1B67BB8136C0AD7BBEEF08CD8C754D0F8290AEF2695AB
5152F97E2AB76503E885417779CB8D0F9F51A097E5BE8E8EF156CC4A82EFF7BB
4FB4D4BC1D47E8B6145B937F8C3CF666E4890CA084072C8C17D5AD6CA0E4C1C5
C39DBA8ED2CFDA6D99A3E984A0F43BD4273CEB755C57733F9E6D512887E0D800
66492AC0A268907043237A732270D1837F89EC6299C074C38350F6C32501C24F
301C055B8D5F686D82D13B73CF2A25FE19A59095673989E83AEF1B3A8E10472D
0320EA5250D2D40FDB5AE455460C2687E91B44CCDD1B5EA65C00AFCC410555DD
6087BA3DB02E57A5B30D7D6D45687DD8D02777B268F9888B2791364EF0EE3519
99CFE80933CBD27D12B8BCDEB13987A2ADE9DDE09C00E87CFE1386A97851F790
86CEDD327E6595E729F9B3CF9E1EA9AAC1E24FC912E514D7702FD963F50BCAD0
7DA534C48EDB39AFA40E312020EAE72B2C648BF50A688B44D0D847B729ACA4D3
0F65E4AD96BB4DC009B633686EA7C678110A72B4424E84EA502CBB7F7041B1A5
8EDEFFF4E8FAA54ADA68FC1C6E54E9F64A94312F213F8CA1EAE6CC78FB0D5FC5
D10BE3EFF14346A8A7AA5F640C86070BDA61BE14A16B0F36BA9A13299E3B7082
80E789055908E4D3BBAE430DDD4F1D0C2EE620361E2EBAB63E438AC50515EF11
BD8E920A2449D38ED9FF276721A68BA266D0935544B459A020058CE7E27B90AA
DFA7C93B384C0AEDE040ABE65CDE1D679BD68394BB1BCA810B2C7BF983D95177
24B8D59B51C4AEE408FBB15E4407ADCA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
dup 101 /e put
dup 116 /t put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667C419C4021DA92976C7550A196C257FC2124E6F6653FAEA9ECD781C6
793D55009809849DCD349D18C46B7072E96A292E937463E1671EFEF393030EF2
3127AEE8F957106A8BAE6B4C2B8779DF8696E89827FE9B259B0DFF68CC6E69FC
79E59581CCFF1C6888227C58AB77070D16BCCB082108F0B19C1A212F69FB9D2B
723C0E2FBB76D3D722CD5699473E25CE8E77558614157EF67DD4951837D3D18E
6FC510C2E95C238B8E003EFFB8323FFE35181958AFC060D23E365EF74E5622C3
B532AA458B05D743B39AE51F8064E92417FBF58E268920C0CADCD5D3B8433B14
1F255C49FF6D4AF34E66409A08C7E0ECE0C1B57120EC51873F64E284439EE0A6
462FA7A0C6ED528B719905B46B7BA0153B9DF431DB210F6F1C3AA2E1474F1FF6
98B9D0B9034CFDCD14208C93607DEF2599C263CC4240CE116C3B6922522308FC
A36591A6992B1BB6DFA6D88E7FC1D5956B581AA43514B14DEBED2D1E64933F8A
14B922D2FCDDAD77D4F7C02205AA50DC014A173F1B18E7F5A2853D34392481DD
A5D3975A688D6187994FA11D2CC9439C11DD0725F05734C50B40279F3166FA39
744B36A9D5BC45130D78DD45F86EB68CC3059F4E08033936E7FF91B7E42982E7
B70F867436C9CA07449AA4B201A723EE60AF66BD056ED698175BA75A0B413C69
AB6A2D9B74230B12B63AE50F5F5099BD06A9AC31AF94FB6533D5252B3F10B399
71602A0E3EE2B44925F55414B3A32AE8A3A2E659431A7E977C6CDEBB81342498
C8F66108963D3DA2C2DB9990E2D1F6E14CB01B970118BF2EB39B25B4A116AC3A
839E3CD2A8884FD0BEAE0250554F6FB686FC32C9F643AD5D67BE46039DEF70FA
6AA8D6CEE445EBFD51B5601D605ACC547EC2EE7C3F683DDAB26FA9ED11D3C679
C2A5FD20BDEBEA628CA8356EB9403FDB86B8DB2F8E157AEB51CBDD1F13C99DF6
A13432B4E43037E9DA6DD63E65884C62B32E482E78E711570386BF615FED3530
9F8ABE8FFA6B2105D5F23582ADDF978D939D134ED5FBF2F3DE814867867FE99A
6493B8FF52001077F3DB7E586A366A54C51C9CD6172E373C731BE69C1906BAFB
685C7DC85E287C6BF6984910FE8B6E0DED0A9AF1D8C553C120D148A67D0295D1
41C3D345BBAC34346E9EB827B3D57212A8D0286088B34272161E01F15F9B6E33
53B87496CE000C5067FB4A435B05A23D5E06A8231B7A30C4857892AD672A9034
4680A3A5000FE221A49F3C22CFE929A0D7C5A7CEB1D1E2B138C8BA5EAC845AB1
1152634E359BD60A422CAA798C648919CC447037C9F9071A21B289AB987672A9
CACA6ACD319990B2085B294FA18B495B6400844A79EF74689D80F05EF958488F
9A43E60A228645F9D2F7E390429A25FB73C11E018705A6B3A2C69A4B0C34A4CD
39278F156DF7040C1A2BE6A38BFA58F577289B139892E938CBE0F6CDC7FFB93F
39AC6483110D07E3C5AE8887A0D2D6AEFC2E405533A0DCF662BF63E7D37A4346
2A2FD8F6EB208E2BB1BFCBF1680B3C5FE124C02EB6743C6BA0CF103EA455DCA4
D16CE11FCF8744D752E55FDCC68AE67432B7265B3D555E5BC8E0DB59243EBADA
22435ABE98F0439B71EF148F57063BF9D9317C551019C4EECA282D145BFD5807
059AC54D245EB9C780D876393E9EA3D3F0431DFF81449D0B0A434A8995EFF784
5A83E93696E71D238C5C9387F3B1C5AF023F3602
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 16 /dotlessi put
dup 19 /acute put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 125 /hungarumlaut put
dup 127 /dieresis put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99AEC79FBBA92A27965AF40A71E05E4BA8D7FC58C828491
84A8EBDB90B1167333987F7D42A76E9C5C5A842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF51A1BEC1F1A6A1A5A5BFB54A1BE8C704194D72A79D33F099107F
153E3FFC70BED6D04DB4820FDAC002428C6741B91D8206296D827D3171351E85
39BB0DF1C2457E876D3A2E7E499D9D4104762FD19BA0526D38D2BF751EC56EB5
C80EE2A7AAF2CA12D1EB4548266CE8C0D2F93158A6728EB552FA09202865142F
E8D1300D637E6326175E17CD72787BCC9BB7121225F59C4C19CC59B8A6084482
61AEFA59772D67F05E9DDF2CA46FD0EE22A88D9A1F1E0F81552BD0795515FAD3
F86F5BAA6E2A79BD5B4D33EE5265DE91D14A68CE87B62E036C54AB64149034EB
07AFED80CE482FA427EB4EA198D8B4FB4CE1A3554A0BE5B900C5056FF5D05886
74146999CBFC16D3A20C8BD91FDE31DE4745820F2CAD99F5489D95B08349EA6A
0ED8F2302B44FA2589DEC1BC21D9C251BDF71BAD45A7796DC14E05E21ABCA2ED
B4D5BF3B1E7369FC9D9D3ADE0BF0C1397B771BDA1F4851799518D7372D3BF7F7
2EA59BAEC0A4775BCF9848B7913431F55F1D0A49F935B930847153AAA127352B
0A927C230AA6483979EC9770334684CD7008480DA5D5708E37A821AC21DECAF1
B212EA446316709A323307073AA80BCA4304C3DBD06FA1140698077ADA9F3DE4
43B69EE7BA3706473E116368EDE194AB7736466CAC7538052753F4002702DCDB
725BDE8D0BA3CFFFC15CC8E2BB721CAB8D9A10A151CEF73FF92E42EEA5CBD8BC
A3A0E3BD486EAC834805A85FAB06E8B6726558716A0F33DA9EEB77BFB0A89560
B7DC5F46E9FF922A707E00F2E580F61DDA31CF7A82344F080FE3630186496BDC
FD66E5DE3F5FC89D67E6B7A0FBB30787AF090ECB75DCE7C4107FFFC9AF461DF6
E344FB6FFA16DC77B781EF04A8DA4F8E5704DB3E9A8C49F93EF70D8CF46C72CA
155DB957FDCBD59F1E16BCE7D84470D2ACA8C76B724E6A7603D99558D1779004
71002E9E6F90CBD83C555D9FF1EC747BCAC97E12C1C0658707F5431CF9DBE17E
30BAD7D4E413D1EFD4B6C22A1B391BCB8BAA2433DCE261C5C9045BCFD832EB39
DF7958F2440229CC57B27414A5CB9DA3AEF5465AE447C9C1BE43B076CB5BDC83
A6B85F4C5B0615F0B7D734CE9CE4B5E7D5278A0AD4A2C7BBE23DFA82430A8733
7CE12B143EDF93273DA4EA9720C0C4AB15A308D9112B2FF75A625CAFAFEDCF58
5AD42D8E941A28CCCE79D83DDA8562903CAFFB3AC2F4E7DEA74A184E6E18F94F
CA4C72DFCEDF48A3F3D6D0BAB2561D8C29E041DF5D68498F26DBA3F2710C68FA
5516991769801EFF01BE5BB8BAC1492EAACFC6DFFEB6C269526AECBC79E70798
527291B956F78991F9EB0BA0B084D9379A9C8C6C6413D9031BBDD3BF405BD144
5329F8592E31724CCD46ADE80F0EFC78ACCEA10EBD93F6F12CE3CD9693019223
606020E15795E279C34A239FE006845248ADBA7857B1664CC3C9D08822B9D5B0
D70C6EC1DD9A79E110A585E016D806C36EDEF2B2725A4C6541E4CA79C0E3B27A
CC0A81A401EFF334A38A229CB2E0940723A3710FB851A204C00C707960A9DE4D
95FC1B77BECCFE5C894E63996319881EB035FD480BFF27C83592E809E0A97EAF
D33936E39C20275735958401E42D13D4CD45C0493EAC7A7481294A24F4754AFD
95E827D9B1239E67BC82C509F28875DF145959568B509D12FEEC7441D0920CE3
549E670580CA29F4703C95BCCA2DEDA17D019B87F1105BBE0A4457175BB069EF
E009AF1FD5360AF4634D2031F905EE0FAD52C890FDA64B145D300BA78BA69B08
8AA78BE8D4F43ECE076CDA593DA3D1D7C853B85B7FC8594DA8B551E6AD6809F1
03F545945B6B753FE3C062D3320B6557DF122CA84C12CFA533DBFEA818AD2987
1B3BB36CFC851F540E171D9DEF1B5A03B7D330C372834240F596191AB47E2FDF
8FAF04D02C7BE46B70D1C36483714A2DF834EE1169F72B76FAC7FBF4F248500A
E4D911D58C6016F51E87C21A989DDC98C370839CE8C5A1128ACC5AA49FDC817A
0B4DC8CC765E28C77CB0CF47F944028C0F2EA1CAEB8FE44999DDB236245291AC
AEF526A6CF25D1F1751E35C52B7DAD3315E3952A192099012239805B4D778198
92D3F63A0683843ECA3D3CA3505D6359382D25EAE4E3D14A64A28444E4CC5593
DC85A6AD5BD992D064A7E8629ED38ABBF4D28E1A6E0B4AC36F641F874E45A97E
341B89FE263FB2E36431489C681498CF3A22FF14D39CD1D21AB8B15FEE64FE8C
33941FAA73C27A48CE5557D32E156F84A62BB7CB66473CE400D28B344A79593D
32FF7520C746296F0948726C91AA82D977A71362AF3CA62F9F9CAFCBA08C64BF
B796A78FF03DCDEA08CFC6BC9991ABEE95CFDE27FCA5CB490BC5964BCE775D58
D282463AF0A8CA73B38EB0F06014000008ACC9AFB70ED1DCADA637F9DCD7D62E
0DB1FC6147A79E0B4DCFFB2217BECC867F661EDAEA337217709894511F4836B1
B009F999F1BCA4E9443751F077DCB7063F3F3AB2F5750F6CB2928ACE96517995
2C4C042C99F7379D81099D839485269BC0F06CF1BAC26A205F904B9CDF9F3BC5
D7D4A8FF4ED779F41B3CEC87E3CCFC02B73D8DFF7D0C00009A7476755C1E58CA
9FFBF5F751A7C2DA2D19BF93A7A19FAB21DD30F7D2E973702CFC2FC468B0383B
C8AF41833BB4B23917AD86CD51E266D84E04899FC4E20B36EB5F912130BE193A
5E8D22B62755A5B25B3553AB10A797D870D658723C5BDE6FAC6246AD289A58F6
4C8DB426CAECC32F01B6975CEFA212CF6D8C438357C1DFC3E425F8A29A375EBA
633FEE32169B3E9A818E4904EEBB0427B95BC6D4C3FC0E045478CD12B7A60F02
43E900E6B99359BB68301902CFF138F14CD8CAB5199B6E5CF51FC637538F323D
325E2F04E1F850540983356237FA113312A14FBFB68979D843E1C9F709DD6EA9
EA66CB6A74AEA5030C20D4D3D240DA77567F70C4FF713ADFEC17CBF299F686E7
D3463422D8D8E0DB40DFF65BFDC021D37DE03A6DD08036486FBCEAE67D60AD6F
E1032A210CE329AB69CEF413CF8376FBC5BF57EAB7149DA71F25615B084EEE69
98563101798B25F4D9DE426689D2E9C9FFF583CEDF7EB62912D4FDFEF2451609
4717DC95D2B610801BBAEB84148C05148BBD71ACBA4F397BE5612CE4034BD1B3
7DD5B2BCCDA447F24A078FBBD45DC6DAAB54EE5E4E4920B9FB77E4FDC00B0D32
A0A7C2620A8EB7B4FEE0DDA0BEA1F0318264565B4AE78E6795C537749B586B09
512F6AFD468802E0697F7C3CAEA17C5E1B6C9550619AFFDB37C3E84D10A2374E
B9405A7CC39F9026A1286B8D46BAD0B482C1EFBB35CF3319B2F65BD30A3B8EF6
98268B4615E57DCC866E290399661F617DC0FB59885BB2A48634440727E9913C
8E8ED98C6A6CFB16860FF9D0A4F127E6DAB53F1F552E221CF45444E5C2F400BF
53D4CB3B0D9D18754AC015E9031C584F7D1A32911EF181A695E4337F09791D3C
7FE1CB306A8A1A9E505B1F3947BED365BBAEB5D7781C001888A35AF4748C7573
E98F6A26387F2A3D7907FCA9DF15C4F600FF821077D198A07DEA9C95D7E0CAF3
03661FDAC78AFCFDD8D18FACAF882D6DD9602ED0D50A97024162196A4C92B2B6
EA01ED7F39D1228D8225BBC17CDF14EBA7014350C47FB395A2A8D62EB25E7F8F
FB17F5BFA19E5466ED07D4701810AE4648A68E8820FA2BBE1238C7B901AE8823
448643A0B5441D85121B82D26AB6C8C4950CDDA29BC8860A43D1FE67A24292AE
ECE1F2668C248FA8319A8D07BCC7536BA4F3321A1E227BD524B69D7E66E2F118
AF4BEAF60820E78402D5FEB407180635A8570C8AD47F6AAB0985C23D2B9DAD69
220282AA8D0849826D98E6E8CDA52EAA93BC60AABCE3932A67F5A0680B4BF642
B2320A2CDBC592359A3D013AE0D993B820E7BD34E1CCAEC5B45959E44E00E065
CEBFEC9E3F017CF7B038FC1B79F325FE372D53B318916CC80C0831FC7E6D12C2
786FEC0D75B2CEF8137ABFCD4A54841A0FEB14AB9B6F785DEB8EC35E52F26CF2
D4B4217892EB2CECB8341915A54704DD8A282279EBD7B1F6A019C1EECAC63137
5E0B9E758568F8446FF3CDB639565DCE93A4FDE35BCDCB71526B6E3C38BDC628
BD0AA793BA07F69CC426A8C05E118AA54DAB17A9DFD7ED3682E10ECBD137D638
D5182A0E3B6413BEE820E46DA22BB2FAA1945D09628C708AF5167E0D4C1B881D
F16C040976E6EE5722867483B0CC64F5ACBA7D17D0D988A100AE2CAC0D0A7669
56334AD24AF0BC5CCE9C00485835F0967E1EE55EDD492C2E09DBC51A39E2FF7B
8F31D353589B68AB219D98CB495713A5215B5FC6861A18E40FF274539D574D45
3F7C38E5E39C45A0230AFBD1E0F1962A854C9F94045914C07DE7A1F2B2E49D79
468438E7AF00D08DAA18C4435F0A31950E71BC373B1FF4D939B2090625967D31
C8707F3781689450E05B59BE27A152A959DC4AB24FFCDB771E53DC68BC9342F2
5092684FC8EA7752CF6271075535AD3C9F4688D715C1A1D3D8462929F7DD42ED
9712FBA18AD8B6A8D001650BCE27583C8EAD2C67B4B98407D35683BDFA75CC22
00A540D179BBBBB6EF8BDA8CE676F86344EE9AB32CF22EB10542BA5CD1621F22
B27AAEF5DD201A1F7D9EB24006D9B94EFAD36A9286C0FC789020DA429478CCA8
5D57329FD713CB0C15EA3EFDA579D9AE958ACB6613E8CD22DD76AE2037EF8C6E
73E4D3C2238E5555E392489CF6A0FD5E9269094D78184D144E1508D8E28F672B
8CC3320EF6FFD0E4D2C0AA0F31E3BA98834DAA4F4761406589F77D77F366A697
42D5E8885D9B7897BC73939FE41A825023DE0003C36D5503871380ACE7EC3979
576AAEA21C3269E8E37BD873D795C8A4950D1295DFEDFF685ABC423B98C9DFBB
FC379AFE13F984E519EF112963EB1CEF57D993E818901D84D48EB7A9A393D3A4
AD45FB194DC480ABD9269D37C03BCCDD2A7DBEBBCD588B8EFEF70150B060F4B8
B46AF304A7D2DDE68383C3B0B1F9F01E9E12DD3352A974676C8B4F018F1D1F2A
7E4F093D452586AE5843B104DB54C73C4D1EEE48ADCD5C18EE40947C511A4E85
73F5F8F9CA236910DFBA760AD482AAA9E1151D692E4B11B207AAB13E83A0DFCE
0B2C7822995C37C6F23399A85BC589A6C6D6A612550133121EE56C77EC6A3630
D971A9AB4D9C6291A29B3780E3A3F9F4A4ADFA68CDB529434E1F8DC89EBB8314
082B7A989D1D79B3C65144758AFB123BB466ED709A0C05100E527EEEA33B421D
21B5E7F6FA346687C593EDD7EF1719612CC8831D30FB49DE673618AB2FD9CE91
C3B8DD80F5FC54B08E809DB47B9EB215E784B5A7C149232F708CADB17B10C171
D5314D31BE197269FD9F35766906D0F39E44F67A26304193C14B831D008E4815
5773811E4B5919A3F156B01DCCF2E1181169354B00BE8BFF79F4C0E1FF5AE595
A9BD1F5FCDE8FC8DE63C7B214F61AEB7ACB5BD547707B4ACEA2746DB93ECAC64
EFECB7975B8296B86165C6CEC847C22A41BD6A44EC04BBC573185CF7FDDC7292
938F776E6977E26A4C5B0B8B958E82C516862669FF75EA567A35590ED824B9FB
092FE4134E1D0D0737ED1F0D6C3B543CB3B690B8493BAAFE0E85D51B81776575
8590430B649FC27106B2A8B224200A142B595F6ED7B9DFC2DC664EEB9A8809B1
28995FCD333A0725631A8317ED8665090FA91D03B65E2241DD134430C27E3EC5
D2742166ADBC83A3FCB1BBC1D8077BD7516D21DEBC1727B51CCA0CADB55852E9
90B167E1343A4824333A0D56BC7A6077D15768B7972B6B3819A177F7AF12462E
D0B69D15FD70FBDD2DE28F26D945F6486945621CA2B47FCC804B512B00B13712
FFA75183F4E8AAE4580D6261AD7B6204D57BF85A714D784FAC17477C3E991F36
1658B7BEA0AE11C2D462A32F1EAA71ED7B39A0A68D6AF7F88F06FAE9353AA780
99D630A97A3F8EFB09384EFD4458BBF8EB84D7D428EB0381A75CE194E6C9F46D
423CB0191B7C8623A1F117347F0B0CFDBF2DC4C47F614B725627623AA044B0A7
F2A0C152EAC7E348EA52A9908B95D28A6E55AAF3DE186C91D7B2074D271D552B
24CB85622AE741959FC27DCCEC45BF6E99ED6EA4B1FE2937CD1A3E953DAC0E84
2137A64A96A5546A71185E96D069DA41DAB8C39201B834CC006BD67EBC14ED29
1806747C1AE134C895E683135487128505F7821E6E87F30AFFDCBA4B8D38E625
64B18EB6723DFE87E4CCDBCFA05E69B9FF875EF74F7D8828796D702C3261166C
EE0B759F3708ACCC16BBE1BB5F01CAAF557BE0CE101B6A09116F5654D94EF699
CE5D2744B5E10E93E9E7D30358E6038743470A011EEC70B80292AD8BE15656FD
3C38D72744DF970FD95691E964BB91FA06167406C8E32E56C482E56A8BEBC197
FE89BCB4F0EA6D952E18E74F7DFAC74054A54B49BB6D2E8F03B305DE23EA7B96
F3C71D175FFC4AC0A02A90B63054249B9ECF89CCB37221093FDC7ABAC3A25D79
45D9BDEC25B010200016C877D0705C57B12AC41F3722725E1D21A4BA8B571CFF
70584ABC940E5E40D138D18911728DA886FCE33CA9A31AF16907C7FD8B7A2078
4204A25FED1A125EA016FFB745F81B905C3F9F36AB330118C3A70C47ACF051EC
88FC6B6E61E00A4A24AA95A4A8044487EBFF9F938734CD79191430686FE6B479
DFB587374BCB8752DCDEA818ACFF0F3F3C244DAE4D392936F4ACC3B97F48829E
96E734195DC43893D76B73D162302292C77A8603CCC7AA7E399A665E32E3BCCE
BA54579745DC234B927CE4FD34D47BD9544B25A1333608DD4D75C95E9F9FC4D7
1ADC6432174AA431F9B3C0EF0EE2505BE71A3527D2FC363A6CDA6FE58A6677C0
051100F2BD02E43251D3D6294C2880030D1965CA69E565CDCAD5E6230AD0AE55
8CF6EBD0B501223E3DAC637DC1EAD96187E7A6F15E4291E8866ACAE9F09E7F68
0459745A99A1AD99A638ED6EF86249AF7B6DDDC828167A08931A730AFD3580C6
18C1D2EA9CB58E7B6ACE8C784958ECF368C35F63644F5C391472655693F8C0B6
B68D669A32AC06B5258E76D92A4252662FB0FE99D144E84012353A72504DAB54
12483B8373B8018CD16BF8CBB5FB80C2D1095C99F945EC929B0EBCBC82F46628
7884F71022185EE5436680EE2ED5DECE520BBC5A90EDBB7F76B9EE0AB49E10DC
AAE4D00AE4B83C92296B4BC233A83073D19D9F93E00366E69943DB4F2DA184C1
E5C29616AB15C299FC3B7B5352B96CF27A773507123484B9A8F88B26879E84C9
7B2803C98CA4483BBC3B64797F6686DBFD64A15A1296D8C7AC206C1F14725D1E
31D9F3A8432CBEC953E5FB3ED053E3F0B6EE6CB7F6E7CD54858D4779F71258C6
41D605322A3D0E6953A0FFAAC153CE81709FBD6126937BDF09B31679AFA1FC2C
D6C636CD175A09EFE3997D53319AEBDE9C796DC06384EA48219A68B9609EB7A5
89BD1CCB1F52552460909FAB6C29458DA88E6EDE5D4BE5F321DA092D823167C6
B2BAB072999E55D396FF1AD7335D4044D52599DCE51FD9FACD7A24F259363024
FCF30E92E285FE445A12F0B4F22D094A9EE8BD2077977EBEB03C2924A5C5BBBC
22DDECDF9973DD5338FF048A86D032BD0F090726AC4D8A99CCDCEE52A70BF79D
8A2E285ABDEE97115078A4C16B56616A833EEB6EDA9417CC98CCFBB464731D80
4955C208DC117B12062F75D04058E2F1E85BC3BF6D36729456EABD4E2E8BC953
37EBBC866F52F09ED75F9876686A1D7699D621CD5B1E8DC40027D8F37BC4E0AE
7B6D3DC4C5651F7462F4B1E5F151EEC455D8BE8326A53E94297F827D2BB6E10D
20469F6EA3945168576AF7D318FDD4A6FD43A2561B70622195F4BD3C9D2D5A49
36FA1B7903CBF20B33A80BA60F5E10FD74E118E276C88B293A6F46AAB85968EE
747E2AAF417E0B97EB812C8BF1B1F328B9C74E9E82244CF1C055863BAB8978E2
6E84743D78C27D5CA0678BB5FBB33C2C66450D955D86764F736F2B157AA770E7
F23CCF0C260900FCAAB81968CC5DC21F233B8F5D2679CCD3B7A34BB9A9942961
5D6616315F55570A2AE838261430C73A271235D4EAEF5B4D4CFAD40756039600
98325428A4343BD9B1BAEBCA0362C0B595F1B45EC3BACC51986AE2CC4D2DF73D
51E45E7E892F973374355E3A6F4AFFD957281EAA0305236CA6BEFDE0D01200EC
B014DFE51AAF43E0291335702AC3BCDDF16F460892BA0ACBC3C552F8F530EDA9
180B8828ED981932E70FCB3B80AA7DC91B74FCE230AC6D988437DBD260CD64B1
FBB8AA4486A2D2EF914DCA7ED076168EE15E22984AB9DAD51AA0CE6A15E00DA6
ED4BB9AB9788325DA1707D0A6657F44BEBDE95F6D3ABC8DEBF7263D401831555
AAF1215A5D56B950E9F926B6B019BD586FE94F652C538CAF88284F60D74D38EC
2ABB3E4EC8992A21746556FFCC7709A5728622F678FB5F7BB86ECB85C9A4CDBB
6534FAA6B317A9B566ACE95ACBA4D221E48114B4D42E31BD30FA469479B44915
4790D37E0C53D4679131491CD934A87387738B7A9999D9DC01F780CA056124D9
6F772D5E5059896E4820E675C3F3309492C4A4270F809EF87332166C88EA894A
844F2901A1C33C7E79CE6D2822A84044B6E71934084D1A2377BBB7656B89B4F2
89EF6D9C583BEF185316CF046BD8738952D7CF0AB8780A185DDD3F7A9859FF3A
24D7EABDBDE956AE3AD5DE274C2D71497706B0AFCBBC004B2DCCA16FE91CBBDF
C852910800D8086427C7B1D95862F2A1F61377FB825604AE4E2013037B48F239
B2AA6E63D938E7B532C093DB3179FECB5FFE3EF4FCDFF5FD18A2B4E327FA7473
72E2F1D509759FD9F209B29134F8CAB3553F28D68355D77EE04F311966B0A5FE
9EC1B43038CFBB3EEC0BB8EB02B89FC682F924FD6D06C290022DB2298C2A6937
F121177297F716DA5071241E0A97C790A3EFFEE9B398BCD2CDDDC68A268F994C
E2EAFFB8F73E9355AA5585589AF004D7B155444BA28DE1612B987AC24E087FCD
374061E0816D98AA59C625A1ED014E8E78E038B81BFEEBA0456AD889C20267EF
2C6E8E806993EAEF54D1936DC56EDDE42144AFCB6D0D0E8AF65873B98C53B0F5
3B50E45BC7FC361643C833AA02E688A8FA6AA659EE2D87E4C3B9191ADBFF5B96
82F996B24F1CAA25FEF2CE9059C79E39C88BAFC1787B49809ADA66614C5A1EBD
648864377B6AA20F22F7B38F66DF14E93529625DBE78B5201755733B31225CAD
D175173A620E1B07CEF1971A272C9F9FC263B68F7A02008ABFA3D42D3D4B8913
B7EE5854EE64CA391425EBF53403D78DD22B2A3F83D5B3911241624C52931AF0
F787FA7F40AA16EE7E0A5B33AB4C2FE7118300D0E70604DB581DC3CD63A3E432
F09D5BCE92494657BEBD50D7FB8454E7FCB767D740AFBADDD0B5929C106FFC3B
1A1F154DF82C457DC849D97D10AA60A931BD72082B1B723A1AE1B8A991A1E831
BD236DA08EE0FD6A97EB5DC8AFF890626D6CD0D1B992A5DC45FE0AF495346B57
65CE6AF248743588542A3880DE0DA82D582548C5189B51380E22980A5669ECC5
E58B4648CB0034F9F5CEFDCF59612FDE445A45161CDDBD054F4EACBFEB66D878
060363AC8352EB254FF6E0C683363E8CD47E17F6942EA7B71B99250EF5B2B531
AB4CA51369DC4B8629804AC0E71798E896069787299EC66CC9474F499A5E211D
5F6A201E8E64DE053E849EBF224714B36EFCB703E634ADDB6D9A91F49E3D1551
45B3697E729D70E23CC58FA442D0998E0F0CD1A2F54FAC5F934926299373107B
5508962AAD13CD121FE312256B13272C79623F059C7D6CAF96FF7EA9E0FC2D63
348C8F7B0360AA040797594B67ADC4F28D8EF6B098BA1CEAA67790DB7751A133
79D29EC9A13AFCCFC8C9D5650478AA856A3BB7FE03FF3D0B7975D88108E3017B
849DFF3F4BDA8ED2C9B9046577798C02853FE002CB557279BFA241DF205666FB
9C0440D7F2DB88683D55E05591775C9FB2137FB5641C5C4CD5FA54F1CFB3752C
F7157E90BB3E70024E324ED9BE2E75AD14EF3B22339870D35C7BD73DAD6E6AC3
9BB3D6244B52829885D24DE2A7CDC518AAA309C29A0FF13A4F8D1DF57A9240D8
22956ABE6F641A9A385AF513643FEC3945F7F19F181789939BFC7228FFF5D586
48D0AAE606DADC36C2E929247ACA44F4BCD6C88A699BBBC903F6FBA090574AFD
667B7AB9076DF177890EB5BE2EE905C7D90C17CEF00E50EC91ACA6CB12F2232E
C15A605B9BE8DC51D520D6B1656B9813437ADD02C2D8ACBAD1B07E4C5BB390A3
89AFFD36B60C448CF3FB50845020420E45016016C4CA11D557D58F12FECE0AB2
0C5C14A15D06242BA2BC266234C1993FDCD01A86BDEE337C9D24EE53D8BCACBA
B877B50A65902DC05813E88E09B805488600BEE64206677915995C694B242E98
67060FE4882BFDDF9711F8D26D0BC2616C5F7CF79D812B165B515D8203C8E8D5
0FD07DEBBBA87166D08E724650FE7E8E88DA8AEDDB174EEBC905AB660A611837
B2C383B4D4139932733330E37CE6F3E0CF43ABDC78C96219560627EF52CBB402
D3A3F634B51115F7E32190FE22F242D485368107735F0389AE97DEA8EDA72D62
E1DCB6FD2B229E3B6620FB8CC83418C1FF7C160EC0466A0B3335ED8A135ABE85
61825A5D0A83A5D351670FAAB95E3AF038EAEB84B94231E97AE47177653966B4
480E8D5BAA58B23C223D2C8C1607D0FD4A8CBF6F3A575330A73D8F08087C1F00
5420EBD1D90451BE2D3971E87771C628DCE66E5EFB8421C38C1A8AE3401B193C
547BFE61855FAB9E3330C61CA23C7DF2EA3AEDFC3426FFA77791DA852B82F9E6
ABBC289443F96E11C8C93547DF0C40B5314501D56AABE556AD9632D8D0BB9177
F630ED2B88620F466C43CF4679A3555F1A4B65BF1D390748353490C6E37E64B9
06904EA3ECABADB0D0B7D5BC0713386B6277A82F61D8294649343C4AD1642EA6
BBFB45F38C2B648EE317E2655F91F71448DEA64281CD7AB069909CAAFB751BA6
16C4CB7B47585B19FF7BAA2B72A4B35E45817833
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 48 /prime put
dup 49 /infinity put
dup 106 /bar put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueID 5000818 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E9330253690E4C2BECD6FFF806E507B9C3A
02BC7D9B7DC6722CD2E2E62A5D3E73DF655BCDEBDA2F8F0D4A3BB322EF919D0E
1739A5BC54FD2A6247B9585124441A352E2DF2480AC8B659A4ACF55E9AD3557B
08F4566942CD7A690BF5D90F2A4B9941C85E9C77F86287E3DC76F7750C175D68
8138DD66528823DA99CC103B40D8EED23A7797C0114A40482ED30B36885AB3FC
F1788F76EDF0E76AB22EDF58AFD7349732A1E0C0BF749DC2BDBBE0BF1575335A
9F3F0474D91EA3BBDFF059147025742AF851223EDBD6E877D057EB24FB58613E
6AA1E2188329423E1ECB311D66166CBBAB44EB7D97407589ED6AFFE9E7FCA8C6
30D10CB7F26BAEAE25271011044A04EB17F081A894F512FA75B60B33FF0C2E06
7E68A3B485D8FE604AF79937D9EBAFEEC6A7A36BF588D31759C43BF9FE8F4A25
956F9AFA1F1966C457D5354595F354B4FBE0D2812AFEB828494A86834DDFC44A
8A8E8EB8FD5AD2D0063C063A33C59C47BBBA2D2160EE5205913FCD3A0DABECB0
83A10FB7CE4CD4F55949153CC87BA9CD7F27A70718B201298F71AF8F2B490732
FD128FB12B37BCC269B7E66865A8A8BB9B5B671CEDAAB1517B9945BB4E4FB279
4FD6F91FE635C9313D318981C731DBB0AB6969260745FE0B44D5CDDA4973B585
308D277CA8888388B3AE3D9C8C087EB43E6776171EAD428DF64E84F1FC142266
55957D0C4FDCD12D745B348CA88810B82716BD3F1B4E97F9F17C514488E4015C
B29290AACB6BAB6FD235E2E06518EBC83017B10F6A6D1D5ACE8123307A64CD33
10D3BD94572A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueID 5087383 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124DFAE11BA4AB27032F02AB84277DB8B54826DA4D626694B5A24E494E
8D7F6E68647F52547A12603D4347C5B8DFC034C2CC4108C084B6F142F6B17D77
767F3B7AB0526CFE27D03CE57AF6746AA7EA8A7768C82B16C410656CEB546C90
768822F0AA6EC0BE08CDFFFA51D86E790FDBF42CE311800F3BD77EA6CECB8094
C9147CC03E81DCE667BF5CE02CCC259B32BBDFAE0932BDF6CEDEC9DB5E31AE2B
CBD624841C0732E52B15DE0DCAFA9059C04E5DB1F86ECDB1C4EA1027483B2436
664B40123EDAA2202181BC38E3E188AC627D4087295D9D9C377D93751EBDEA7C
849A6F8F77C0C7394EE975AFF723AECE988A8D3D8E9700125DD6E81807848361
B04A5291DA4E8CD399A52CCBB105FC4417FA428A10A53CE4F352E953A78519A8
C488ACF57632844F1A7DD9BD5809F54FC73F3174263E1AD18CF4DF32D14C77D6
101A2B3EF151D7D01501563BD1A10B3E4900FAD07ACC0B765CA1FD5EBDA33683
C5A76C6909F6FF9846664EE973004ACE680A1610035401B5092DADBDCCE58A9B
FAD8CECB99EFCF741A2FF9C8FB0DC19533C28B67816E0204D1B89AE52EB5ADE4
871B0B4F36794811A185D08A37235B937CB6F6DE8514F10FCB8A2415875DDDE1
A9A354642181C3A978B0289F96BF31B37BC1B16BEF6C7CCAF3CD461B4DA1BE5A
08933895CED41FA26E8BA92D1620ACE122F3684F6791AFFB226A7F3F8671530C
AB5B442017069E5153AF5396BC9F33F6F70486FFD31571FC5A21B37B74FCB923
BAB998B156B6AD3156B73F44835FE8DFEEC77AF3E77B2D055894CB1776A10327
F0F372282419C88541E7BF3BEE8FBA4F6176EAE2EC4EC6B5FD806EFB6C4018AC
E26D927C3BE05A8202E723A8569A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
dup 101 /e put
dup 116 /t put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueID 5087386 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0A265B570BA294792DD2FC75CE2C83DCC225B902551DBD11E687EAC6E85D2B
02C28359A40AE66A6A6A8862CB17815B41E280313F0EFAA9981755611F7F683D
35603984D60BB0C772054355A97A5E03C689E23B04DA79080CE4579CC90EF38B
1A64CDD92B907AE83192C3C46C5FC40BB412F6656DC6349E6D29B5936DCE94CB
98E3B465FFF7574095F57BB3750F1A55F20456933FCA64CC1B060E260782BEF6
721D38BF65DF1F1DA5439DBC802B4A9D803BD635C05B9ACA4D26C28195A1F4C4
CC623B30B076D4861E89B93E2CF26F6DF07199C03BA5466FA3EFBD7F77EFE068
E55B7186855063934C5716EDC3F5056BDA963B6B933B546475BCFF91C512F411
8D14B1C32C9735281E536F87ADBF1AD9AA04D7DE2096413AB8B3C9E8B1F6F338
3B80D637D761A7A992CF58188FB0A04FD6C6886A60F27EF31C45E92F4717D8FB
D4A0844A8D9036D5F2BBCA2C170F3042F22DEB8D151C7135AB91DA289886604B
70B9F2A25A7D576FA1D70DC935CDD3E81915E9BE11CB03C9FDCFDE3700BDDAAE
D61CD52A78B075FF4FB8BE949FCC4B04813776A3451FE65A47D57D7B66499E99
B97C5141D2E05BA86C59535C34BA975381F96A4EC47EA032C6BEEF9F2E6565A0
0712528976CD8FD94E2F8F2607FEE1B55382A62B35FA16C62707F8018B3FF765
2DFB5B836BFA9050042921C72B8D032BDF6C594CCBD796BB15E26398DD34FAB2
4DCA5FDEF424CFB1800057E4CD4218C88DAEE1BCCCA10DC115C33E05D53C5F04
2E512B2E4AF08B012316E7524910C4111563ABB27AB6E746CEBF9CE816B349CE
7E2F102C920C27726380FBD329D29ADDF290883487CA36C1D3A270530780EEA0
8AEC4786551B7514AFDF162C9C8EEDA068246F367E88835E166A90FB1A389A34
26422E91ED9D4D51006C846969E9B525242A68394BFBC38BCB99BB5F798D9782
6BB8F3C16DA712D11AD17B0D534BFB5A95B4502A2F9B8BF5DBC9A1ACE3DC493E
E0F1025842EEC0874898A1D3CA83E42E6894BAFB683DE7CC46C423D6BD1C2CD7
F3E129E33577FE39888316C5B8C7BABA6E9F655747378E7107907B1CE02A009F
5D709FF0602C8894192D1341C868B768DF48CD99C5F114DB8789E9F85BF1D069
6D81B8AAB1C606A01BFD266CFD8407B362C6671FB2E10B1956E0B77B2EDD8875
BDAB209D935638E19F76344C9149E609223F9762DE7D06555867437319378167
48FA732B07AAB0BC58DCC4035C314AACE497B09DFDFB056E59430B19FD5763B4
2641E87E32B92D3CF23C4EA36F4E354000CA8273BC9C63EB2EA9E1DCCDFDA166
CBCF91D53DEE0306D150A0C4C97B2294D216CE413029274E197FD105DC285BF2
9A8E770A3F1BDD33B2DB1F579E186F516BE11AAEBDF68B3CE1F3C67108B13C59
DAED6EFEE435392B6799C23AC5CB57EA15F0969743140510B81B7B232D967A24
C04BA87C7E069DC9AB32CECE0D3AE51E19618E824FDFC2E2A1FF93EB3647174D
B97FC11BA1DF169052B3C95406343F8CC2FB83CCBB8429759C7D663C3D3FF4B1
E512E8FBD8BED3FA64CFC5825A41A647C32A387AEC4BC9349400CD10642FD7CB
B56A10A172BE682838BD66A7F40D87C3B9C9D5384D870C0E66AD4F4C126A5414
B79A8E950BA8ACE1C86E2EB6E28A3F2A15871941CB3E8E90DC2FDD536FCC9D28
16E8CDC7A6A9C5D172EDDAD94E9845F56828B6E7C874008BB941FF77F0A3B9F3
E056B61FCFEFE73700D46495C7ED453D141C540B3B4AB1BA1895B5E377968E82
EB6C334057620A52C77FD96564518F1EA50539D924E6F20EA83FE286E1C67159
E233917BC16F24C3A2BDFDFC0F03EAC2B6D1B58312DCD93237A2AC37FD459090
D76B292A4D47FC7DAAE1E5D74E6D5A01BFA06F17CC1CE3F1A0CFE7B08D87B85C
C6CBA5723CFFBE8006E6702F6E1003742E9952E3A9E7B069564158ACCADA2727
485A59FC5A5112481EE3072B3ADEF32ECD150B395C623C4648F4AA4C673ECBA0
C9ACEA221D2DA27A8FC2A384C28965EF3111F4016B807C6EE357FF9BF47AF109
CF2C9302B195C20BF8D8F273F60025157CE099F856E470992F2186274909AFE8
A7438D197C30654E7EE39B752099D7A316DF3A4C33703A2F446CEABBA4304A57
C6CC83C53376AAFD85A2D2BECFC043516D6E6347F1A0CEC023EB0BA132F66CCC
0679F8C200251FDC03FC56C545793604860D529413A6625C49CDFA407B851455
02A33F732D9D8228C6B6E2968C4CE8A8A332F69FD247DEA3EDBADA6CB355C1AD
D30BC6B2B7C202618CEEB8F0AA66599A6A5C89B50C3EF378F7E67DFF4222847C
A6D234BE5F76CF908D6BBB03A070B4D4F06729CC15472802A53FB48997DD5ED3
2F2D6B0093A9343A370562A1AE8C7FF449E4A78EB9327721C4074146C6445639
A70AE03DE34C53A917539CB00997B534FE04936846CAF1EEE36F7EA1683E1E6D
A2C00B28C851E0FFED4A260D94CF07A740E10050D038D8ABD6BB27A181861796
72C48CFA971241C6761238E360192AE2556305883EB201FC71E27EB7B63F12A2
89032FC8E1656D3C0DFBDE19ACFFA5667C888606035978E3C4D060953D9E91B8
CA587187E17E186B7B0C3D60AE59259E1EC07A7AA9E5A2866EFAE7BB26A39B1A
3A77F1B7215A763577E7608B70C75EE4E413BE51AD6CEEF78E410CD87E17A158
0CAF928906CAAA173C01AE6E67A19F1434F01CD39EC873B0F532E08353CEA486
BC0F4905468682
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /dotlessi put
dup 19 /acute put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 122 /z put
dup 125 /hungarumlaut put
dup 127 /dieresis put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueID 5000794 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CB2BE93C4E76
D7DA4AA6E8781A66F3AE397A9A49F4DA1F9A237B52E40F5F4986C30DBF168CBF
B3E963843593A1AC5FA7C47E7AE66BF5014F9564513A6EA20FC7FF4BFFE8A3D5
FB87B7FAA37C05E5417650B18F9B52500A5D144DE89E0A6A29321F147D471567
27804D06BA874CEB4DE2F97210EE2F59F6C04CAB7EB55DFF5063FA14AB0E0455
BA07ABBFEF8B50FAF862E6C7D9A49B13D84FF5CBFEE5EA55EECD8161429DA61D
DF34621A5BF58F2C486552A1E705C26E8A0152E9CB6EDAB442A01FEB09093B19
35CD0E8FEBA53770F16BDBDFC5CB2F1D3CB2C7E9D7D041D049C230AB9201F079
517E91C9A32761EB064CD28DACE93F702B876B7D6240536BC448D357383BD749
246413954FDD8E3A8F5AB335C0C77EEE1C99FDDC8CD6B2B914FBCE4F3D91C334
ACAA4479663EA386216E1A18CAF998C127C6BFB7F000400205E679A45808570E
46E9E8B2ADB0232DE59E2E4C0FCCAFC859F9FFF0C81E6F6BA41E2D8755ADA585
72955C67103E08F18148EC0A68741C2D4F93C6C8D5BDCD0E285BF6055466B063
CCF4068E17FBE750934D45F999180F36AA752732FB9A02F216BCE9098F4AB24A
AA1F769842574DB9C86A1ED4E21B766541E88895AF5C0E33865080478D94218D
FAEDB795D600746E8616824E45C6D9FF8CF69321554818505775AA50CCC74C0A
D3769ADB1D17EA48BA9A4F0A360C18D28DD87C37A8569A44733CDCA41BFA0E62
ED9DB948BE50DEA0D891581B6EC9E671418D71CE82D535B290530BFF54F22CE4
A11EF7151B366ED817CDC802DFDE039CCBAFE4DD96A8D48D208E3B75A76C5288
E176AD1ECEF262AF3F6792D755035F8E32C471FF2FBFD39A7E94478C8A1EB7C0
F191A0372BB47061479EBC90C7DB397EC891EF8DE0F915C5C870CDA1D91829F9
00C6CEF2A289BAA586B62290437DB927171F0FA7BDAAA85FC6DE142E495F56A7
F265FC5074B09CD92796E82898B5897D3DCA2EF703A76E86AC5AC5D058C11EDA
0E693CFB9726BC2849D37B15BE855FD76F95B838B038110B000C6CC8E74F80FE
CE38FC0AA7A27E3BAC09CF97A65659403FDD1BD16953D743811EBE9028FD7235
6E5200F755E9F671C1E78EAD408AB2C62629FB9EC32FB738A87B8754E00D9B3F
DD0A3D31654C118983691712655247C43CF362FAC77EF3DD31EDE2A9B8719765
76AB986821357FEB14B0FDE3FC711C7E141C3969D5C606AA7ABB1FA04233A190
D5610F66994E7491A6D3D1BF8F52545B8A613B494DA2FF9A17D3B573F03FF1DA
76B30270B6A42FFB640DFFF28969C9D57FCC51396FB705F8F43C688CB9C65AC8
191E7D60AF12B855D4C579CCF349CA648EBFC29E1FB2C221D3432C1E1AA566FF
34B8EEFAE9A67912F1FB4E6A9084A377FBF7451F9A1E3AF855DD6BF25F25BC19
34F0A5C65BCDE5034F0F7E09D6CF69938A0EE0532469A4A84F2E9585A83D1BA8
8F8DAE6009E07E8FD6DB08BAA20ED6D9C8341A9C8733510CB1246FE48DD73E63
D2A546F232F99159D770AC763FBB2E9D2379EBED8EEA876F1AF292DB4445D75C
363B7E7886A9B48994BA3C9C2A57EE582CF42195C46B2F4640FE5833BF46696A
B847650285BCB13300D0545C9ED6A52EB5DFBED862A917D9B562660EAFEB8445
FA5CB917DAC6240582CF5B87CC4C409B385D0823486504BC8E7767CC3E1A3705
5D701988B7B2677BD151C3947EC2AF9D9A99BAA2DA6183C56516631B39F11EC2
1F5246E69CDED90972AEF6AFCFE4448F03FB8AA78324E242BFAE461BAA40ECA8
F383D9873FA13F65AB6B4B8970CEB56E9E3F0A7A037161349A51F52EE0C11D16
B5A04FF8897C0B0D4412CB9CD072F3BD87E993C9057349B2E4371FA087DD7772
640290BC45D3552996D4F825ED731535837DED8818EB713040ACA4F6C0FD333E
73A5191EAC0E4D47775E89EBCC7CA8A8A0F610D47EDFF83D330CA62B010EFAE9
64D829F30DBB79D802E69484888C83654AA44B465F06269865EBEB780018192E
09FCA0AA44343EA715E4028A6DA80A205D5B090A6692857934BAC439179307AD
5648B3089F4C23EA0D8FA9D40D4931495955E9CEB967F8E39626A6CCD977EB48
D83C3260DC4D3E6ACBC53EA43E24A799FE241E30B34E217F4310C9CD42ADAE19
5F40FA35BC8B66198F56AC7C06A3DED05F40E824BBF64931E7EB415913804DEF
EC41BCEB29325AADBE64EFC6861340EE0F299DD51F0C4939612F918D038796D2
FA7DF8441B630C0D9D77DABB8770DB9306D73E2480FE903786105C95108EBDD4
C5F7C408B425499E030B3D7CAF2FE2217EA4AC32C78E1990AA7A6422F957C1A7
B117B4D43A828EC012BFEC727EE80AAF1BE6E9245790309B8369DE0E1A823C55
65D41E9D9CC06A429FD72578DABD493807183B55275FAAD99B96A18FDE3880DA
247756DE178F45E7367BD7DC49FBBB9E922CDB25621D8D940FC0955FCED0CA1A
821712CE83588EBEB706B914DA6DE0221468059C9C202F977541C38CAFB6ABC0
9F11C60311D5D1880B3B93AE83D84DBD4EBB8CEF29630131DFE59360F6FCECF8
D44B0810E7CE42A7EA98BD9D85630D901C43A33219E7943673054A19D134A8C4
E97EB4FBF9885BB8C74C23861E73E97F374CEF356D6E0D7774A953102FAAE944
6F893475DAEAA54ECB4C7E918DB7EA88E2DFEEAFFFA20AECF20EC79E35F7F7BA
B2AF07384981B163FD903D125E7B176682863E5C64C2342318B616E29A5B8AAD
9FFFC0F51FD5264E88356380065123D972F914F5BBF4288391F139DB0667E910
0EBEC0428B8F74F7586530DD4270B83292B713348FE751415A03E2443CDC5517
673B9FDC0EC9B7145EC89EE9E6775F81C63F1E485AFCD128048B9B35492B09C2
A81067833E39C28535777FE7A0B591004A1F2BA2F2934CB89404CED95E27B86B
7C40C20BC533D4656DBEA021C5ED2281270A8E8A31A33F91B0CB7FC7DEED1710
8506165353E9CE7A7419A71F87446833D5B84AF29773D4109CDBBE5FA412ABE9
7919A34CEE0E0FCAFBEFB523E94F4006C7C5682CCF4304A36908ECCD20D5CACC
5F5CBF214FF681325AE0EF7CE2375D3C5C88AFDA97DF861AB825256DF4A7DEB4
A71B41BBB0F09DBA94D5A0A6F296C7A9688335F6743FC50EE0A5706E5A9E9FDA
BD7E0B5246CC1F342CD07EF633D89BCD95DA643AAFE1C39900813F8FFFA375F9
3721B9F3602B96770A7410DF9EE472EEEEE1B6F55A86FBA01BF023E964FB033C
4D2F5419831E482C5311E793E549CC88B4FD30D154C82561E6B8038BA639CCE3
A546C52FB992B0B672F85C70AB62A7C9FAB2824442C0911BA926316FCEF13518
CE19719BFFC2B2CADAB6D29D7FE434755F0484F079452EC62FABC63DBB457BDF
97C7D789EF85E854DEF7B089DBAFA3412426E760AE847950D99BE804348DFBDD
DF8AAE6B3AD35C00036E6753D233E2882C7730045B5C3701D21FD0E7FF356197
357DC4C7E46372EC8B9A5C2C497CAC41261618D4DA96C363D08D38DD43BAFFF9
2C2CCA13812F955B92792E955B839176F717386BE1314C14328A2F91104DC4D1
32927FC570EFF8A4A324D2037D0ECA0FE41A6DEB67E177562A3BAA2CCFEF5CE4
0908FA568D208A4B8AFCAC4AB88EE5B0F0D913B562BB51CB013DC2E486ED0A2C
1200B163CEBB12CA4E193BC8B836AAA5FA1583D6141B3792BFEAA29850258962
0A7655C35DADE7C0D364808980A2B302A301A4D02D41AEBD94A9D6090DE54046
33DE5E9324FEE4B39FA24F751C0D9FAFA16D75A61ADF1F9AF3E04AFC6E8D7812
1911970162A11F81CAF805D87FFE508BC9A8C26355449AEC7BE0254973884A58
DBFE892A80C75D192EE993E2B101DDA75780C2774D4A20BF1107C1CA2CFA3FA6
975683F820D9B6C086CDFAD4B546EA24FAD17656918702B37185C4018836D1BF
B4611706D369E8FAC48E8F35D562C4B28715926EAD62636A5AF3B82308C089BF
C7AEA777021560463A663D60DBB5754E581F992CB821B5EB021389399093EFB3
036423C75F21E5C9F8416DE75D3C50AAE31D920E26111AB1BAF762B5D666D5BD
190F539BC5116E3996C90919568242F7D1DE47B96BC53C77A94132AB4947DB68
CE32E8EB785F32B97ED31F606D50D7D735160D0A5AE4B51F8706E61F55F4779D
141AEFC437B812EE17F81D3AB5435B2851337B4C4212F5C75DBB282EABBD4DC5
C236EC62EDF0A0B7939E551C85A0D67DEDE791B7C66535D2C3D1795836DCB2CD
05F40A0E09DB9120E0A53A10B649ACAC90989A8BF7A96F762786FD7E85C4E08E
DAC6FE0E48AC19F6943056535E53C5B938096E781CD9F451F5A3F547327A2951
D874ED5D4741B7BEDEB4356A3E6F5F5A8E4B33EA0A52E3A6612A663E85FFC40B
4B76B9282E0B32502E3FDC0E34CB01801A1C1651C63184F41FA8B10864371EE6
F2534896306B6F196D91E6E04C588064FE3ED518F4EBB5B17DBA8E5D9BE1BAF0
8C24C4E08FB1CFAB395C2340D64D83009C9C3F0FFEF81518DBBE8E88E91871B0
A62868966A67989F38B5E69B8C69FB1FFD9F15E4EC96273441F347B60B77CE4E
B95BE1FB400A593A404E19C043B89E46526C080DC0745B6477DBCF499FC9F7FB
8B22568A26D1C88BB22874D865057FE02DC584479AE32075D292AEF6B14FB922
0AC1BD80891DCC09545632CC6D7BFE31471E9F60CA58D11AF7C07252B8C8151E
34AAA0F3766DA110C4D214B0429D7B051FA9765AACF00BCEF6D5ACEE2F7A8BD5
EFE9AC224583A14040623CCF6EE61AAC4387DEAE40CF08DE3E3DE85AA6D069C0
F8D2564E911C765784AA88219CDEA55085BD26CB8DA20A97F4640EC7CAFDC9B2
EC3242AAE5EC9B8EBB61B427FE5422924746E829F582BEFC2C7393BBDFA5788D
95B28B9B3BB6D0945F3D04EB1C6328C7D6B84A0534CBCED5B05020AF5B37E188
55B84F3D32EF1C64C52553499605940CF21B38CB5F885345C9C5EA2442107C21
7D0D0498619D594DCA985BC70E846123CF2413EC7762F34F3B5BD475641B54EA
876292E316AA24F8BF115BDC8BE4FAF3408F0313B1615BC3EEAC2B15226DA901
52852254674541209944F6C2D59C9EE36BC096847BBD4F5C5F1907A7F05C5D71
3807C0B4B15EE80B9EA4E542BDD6680DEE8936D558DE1AD271906EB024CF3A84
7877A82A39768EE98A471741A965A828ACAB2A30F70446456D2EDF2A57345B88
882159024FF6BDA1193890CF8140ED6D43A2EC7FE79E2786773F11A2BE14CA60
91A2930DC02CA1BD34AC865EE634FD1071A8326FECA216E3B17B10510D523879
707AC3D3DB045D45B8EB107279A29DD45F63D9F2A611DE9B49CEEF3BCC9F1ED8
DF07987D9758AA8F223C9D35E52AAA06ECB38D26D7B013146E4E02AF6EF09642
B5F681DA13EB84648B72AC442FC422BB1D457A4D5697377791953CC1260EEDF5
7AB2C46BC1D370F9655187A323DC134EC069428DC9AB2DF33E9E48EC7F9AF509
9050E27CB9DFB17FA33B3728A22C5830CE425AD78A87F9EE4CC7D2DF98254866
E1BEC300357ABCFA1FDEE66418E03D435D6FE0B76C6838736517E51145267465
FE1E08B330FD42E77518B3E90940C53699B3BD108D6B82AEA9BB6E11CA4A117E
B0C8124C678DCEF798FF6D566EECC74845DFE77010148EE81F7186BD77472A0E
BA81FF1F36A49A8FF15E652C269137123DF30011F4DC71F308F06EA0936DA386
916631C28AA98163203C171C2C1F232E626ABADF08DDFD5842C4D305B466707F
F6B33CCD6F66427C9692EC420EA24341A8D2E2B88FCB27982FEA2769AE6344BE
5C3C815FE0FD85F29B59263170334DFFADBA76187FB6399AB8C104D218CB4ACA
292F03ABABA4FD2899674E05909922947FBF583A0AE3DEF83383AEE15BDA66BB
8AC91C0FEB09460D48F8A6D723CDAA5C086C58B3D56483638A145D2BD2150B38
BA64C3508514F6FA023FBBEC6655A5E4CB7BB3887B65225279BE9DE328B545AE
30CC26A9D9B08FDEF1C4D24E4C9E88F78EC45837F2DAF72A7DBEA034CD2D2263
FBBD2A25BE76461A10C2EC63572FF0DE61F95962BD3640A3E8DAA8D28873F358
2572F74D2A2FB4B805B6F04FC4E2DCDF6CFFEEDB8F48BCE602329D2668E1E479
239909B0452F6A0DD04DA06D4358717B3D677A6D96516B05374BA43111C84EC8
6B0423D3D6859B7D15B461C6F8C65F9855A23FEF37E213A8638B0B20A11AD44A
6F2E623E4E66A58288BFE2A56EEFFC8EAFC255431FB403C4DA694A5D471671E7
F75750A5906F7DF8A42D124C25FAE89F5B8349B44A843A151409AD7D668777B4
4A882AC1F58BB389B517F91D435A030EE8D3F1A163AFD8C289DF99BEB8A130A4
263B771119B0F5BDD076C83A4C1FD235FD0C945DBD964E4285809AC913A750E9
F341CE69FF79DECA4BDE41BA532F0C8F998F45EB18D4B4BD909FF17497C21F1C
FADADB5ADE9CEC6F463B875FDEC61C577ECB67D5518FA3B8705D9B24E94488B3
036A96984E2C4675C17F83632C971A76376CF029A5D300B6301A23325E81A3AA
38677D0D27228B5B77BAFB3F840A722A50574AD2086D446F36C47743A6555D66
9CDC9D30640F9A27F5C4277E71889E5ADB290CC4EC38CDE8FB83CF0DE7759455
4BE1DAC9AE75617105C2A9AA23C55D18ADCF14206D261F6AC0C82485E6EB2580
9982F071F7BD3A15A067991D15353490C7366119AC8D52F5CB9D828C96F7FA99
626776E02FC58536CD269BFEDA893B57E0079A769E7B39ED421D0928956B99C9
E2C5ED18B48AEC8C8B5D650996384D50701BE4518CE3B678E917C078A015F024
268AF8DC1679046E5AD4531A1E64595F14896DA88FDCC1E6C07708B1E73D8541
513088A8A574192D7A82511F7C0EF5F3D5D9BF95637B30DC5CE331CFAB91B1B5
4A245FA790FAF0E6367E249AC0592652020539C7245FBF9E6B2F84264F8A866C
76B98E693E1F7D3D6B305E3192AA6541E6EE461F725D0DCC0B254827A4AAED4E
468B072763E85D2EEEB413391A126F06BDC84B77EDFE47B95FA0CB6D5C443DEF
2A10B5894EE0F95CCD2657E693F9D6CEAF19C745F6E32900B763E2140CCD9B45
B05204FD8A453DE0BA7A3E28828839A9E7E4521CD837876D7D35D3ABCCEF4902
E6C9B401F5D2CCD396EF729BB5B52AE75DCCC719A0E25EDC207AA4C207DA7831
82E59032FAF9CBEB3452A04696971B7F36AD7D816A051BEEEB7071BB38C15860
707AF28745853BADEF7F89218AEB73E53C604B2ABECDF26B16D2942A1A39E736
300EE2F1A2528CDAC021133A8B3CF94EBFCAFD6FA46C2AD8ED0212819A98AD1E
69EBA4AF20F94653A7FE69B33848B65271C1995889C5662EA196F85CA445A3B0
1879091D3DF8F33329EB80CFC2E4E4B2580CBFA456C47FE14B463DDA7C21475D
0F07B1E0827F714C65E53ACC2A84B7F616174E3DF04DB36F33D38616E8904B1A
793BEC8747D34690C30DDDB7CE4519D5D437CDD9431DBF01FE63350CC097B2C2
043240291D143BD34961A58820A115C5F108739CD5CE3C64DD2678C63F71811C
8478C96D9B82135E5CC75126C2402494C52A8CE40367E73D1E6F94B2271C16DA
D4187D002B8941FCB0462B9036867D2336A60D11F2BF65C4BCB46A6A3F190C45
49E3C7DAB522B23E6ADBD8ADB8BD4A9150503BC1BB4843E438D586123E5083C6
6FC32B5B091C4FA29ECE11F9259B3DA93AF3773F62B455AB7D88392DA0B28637
DBCF3AB91C6E207DCD33B54AAD2F7DE93B0B9CB1AF6F0317258B10111AC1FC69
768339C1D3FCAD1811AFBEE6558D6FD736B94F4B3A668F921172A2823CCA4FBB
3306E51EC76428DD362E55C28ABEFD3A76F1D62E8E2D9A50F295FC61372FD758
F52575A370423C76E475F612A19D9D81FD4695D6899E84BCE297F7D92F4712B8
DA760A63483933FF594031F7A1D69DB7AD8D4E34E5492E05B97367CDC34AE364
872D5059BC4FD6E82A579E5F138A4DAB6CA785C8675A850C358BB37A4BA625FA
D4549BC270C03119FC46D8C8AC853430A5F210F7EB5B514024E254F7B186F028
67DF359A121ED6545286F58310016A23A090077517FF944B00FB2F50B3FC0897
408DBE3DF92CA6926D0712F691128E2E98BB60AED975F24A17BB36D0E4BF9D0E
254EE0D902C5CFA9DC59D8F5BC9DF4E3A76F5316B86921ECF9D7FD70926DE4C1
C51004F550082C5E7227EB735F63CCB056B4BF18BCC2F874776FEBE265CA8463
5A6F973FF4DC7785BB50767E21EE6A638C5FB1F4C97BF0AE130D03D80F8F98AB
B68876A544137EA21F70814A952567EA195293B5D6F4F09C76EA71C0044558BC
10ABEB9F682E78D5C93A0FBC5BFA993AF9EF07FDFF320794B50BD84F17FB8CBA
4691FB28830CA7148EB3A318688244E896494D90F7944CEAAF2D5FB16A7DB38D
AE51785216C14B9E678DCB89C879C1057B8896B9332ABD84246A6BE4629739F9
1337E56A6F74FBCA647283E061113C521D6FA2593492570146AD4A3DA3D5ACAC
06EB68C7EC7DE7B1538C63A09D236321C8A843FC10142D5CE5F35AF6162326FC
510E09D083C41348D798681DD8A7BE66C92F4485E1E9D4E824B77247FF5482CF
4554353C6C8AA93DB15C3AA3C9FA14B4CC3DEAE4397A7966A0C919E51366D476
F766FF23A5C3394E474B8F0050910D1D30A0B6F1069DDBDD262BEED0A13F2FCB
5AE000CF2AAF958860383C91204E16DF5CAE29FFABA76E41A5848AB863281B9A
81457D4F06F0F4CB9FE4A65C348D66BA298BA62464486B2D7F8EC62C09C4D072
5285A5790EB9B2C86FB0A3EC5F5953B4484316E60DCB1B62573080E67ACB63C1
3EBBC50A43358FDBC8B765D5B5B642657B9C52B0AA377632BD627032D9E72D9F
0CFACC92CFA9CCE23C4FFD19DA23F24D91B4FC9D0C259D24F18913A54DFD60DC
9E3A7631A4B537D684B5E0C56D1BD10631531A6283D5345654D7C3ABFA61CD96
176BE459B656721A1F3F902E9D89F0A1BB45479AF998DE7CE5A89BC632B272E4
B1F9734C7D7685F6A2DACAF51B53A8D38DBABD660E4049DEFE10933A702529BC
F4CE282861B5A040D7AACE6F96E3ED5593FB4ECBBD74DD55B112140FB14B7EE3
45E64855356A97252CE37D99671CE74F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /dotlessi put
dup 19 /acute put
dup 45 /hyphen put
dup 46 /period put
dup 65 /A put
dup 66 /B put
dup 72 /H put
dup 77 /M put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 122 /z put
dup 127 /dieresis put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueID 5000769 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE291FB1D9
0E43A8FD2EBD81EB1980071C0B0A0C82BA9F51B25079B1B256572924278C8D1C
178C0185E0C40032A914621AB7A798043D2F499B2F8D1E8DDFE77C0715947405
AAD38A7D002647B12FDCCE73BAD68EDA98BCF13E64B9738F40E818C8FCC5BF7A
3A8CED9983515443FD85D714546CECDB554FCB2B6A6ADA0F65795C066FCCB162
D44A06EC5592536EA05575B27DDE0080DC5ED5B61DEFCECA46B86F2A18F95D8C
7F0C1A97EAC0E1376FD489B5B0BDEF4274D4EBA03544198AA138B5F16EE541C7
BE66651A5CE4C061999C19B0847224BF5495453D948B1E53A102BC6512165381
1E53099722AF9C8642FBC0F155408FA1156FCA92AD66DF02D86889F4404FEFB6
5EA3648879A1E79847DDAB575A8F18F48E50F03C0A2E6E6CEB4D756870EF863C
804DEAB78BC9F7D9F00C6EB1E92C9B8BB142937BD96D8417F99B76866077B5EB
94B44B6DC63A71E641D39BEB670D84231685BA79FC3497786C81645AE7ABD409
8C4B7B5397418B0A1D417F4787E0F9B385D09B768666C745352BBB9589EFEB55
A7783D75DBAB42FDB10EB8FD41AF9B990926E9F801FBC032A1B5B099B771AA98
D414336F733487A9FF25CD1B5514CA3E9E444F2149015729AE7A60BA3B0A144A
B43CDA02346806A711D351E4C4AEEA0F6C38DE22F122A69064B19B2DCBF11CE6
88CC05C7BCF2E98C64BEC11372CBC75B916501C2522D2B9C53E23A183812F179
D9B0DC5A1C15D642E0363D06FF86AB86EFC1A317245DD7AC2E1073BD64044C77
B462AE541FE84E3EEEED863C2CE9057F8DE589E8DF97C5E9314BB2CC22D6908B
D67ABAD43D001AB295FD586C9094EB4F4E2FEE740BAA1CA5221F71692829D36B
7103962AE9AB95704D7B526533D1C6E463432116347F35941062F1661ECB0C1A
42FE32E6A7646695B64CE74E79C49CAD4FA151ABE49A9BF16A31ED8ED7C7E0DE
F017B2313011FB33448D7BE858461B2D3B82D905A7F17E45E01AD2DE3D430DF6
239240AA02B8BD5295A3C738AA06704EEF36C9C610DE68F29D4900CFCE461C4A
4D434661D24A975ED1E30A54B2313E9575DF07F69A930CC15B750F990738DE35
85E3CB93F161113A373BE14DF46BFEB3D9F45BF69FBF932E5D5EB4A43FDB4BFC
B1BF8DC2C026469966969D3459E0127147DE047E904BE87FE0DA792F5700D213
5340DA5EB2BD5239B7916796724682C57DFCB9A9D79E3099208E684270431788
2A745915C8159CD446BA6BEB275F20E307F1BB44B6E5DF5054661A9267DD5392
6AD8B9833114D02D23911F5D91589B9A16B441328C9B9E77CD405DAA214CC2D1
BE8717B308FB8B4C9A88541BAEDD343433994C6D43BADD54961B6548E7E36351
416D610C0D865DF87E7CBA07AC30507966F4310278F07F0BF802AB8D6DA978C8
F3725EF108756CCAED12387344EE63C95C2E6DED9E1EC26C968C17636715914D
79AC643BAC0E58D2DAFF8BCA645EA49DD9284E70281BD3B638DFE136943175FC
0A5259FA70CDEE3F0D1E0DCDAD059E1093B0C81A7BDA27EF09E367A3A778A8DA
51A6C1D9BC0CA92CA340A24C644DD21DDD02BD1E05A7C22AE433C783409CBF3B
8552F85B15DAF63BBEFAFCE92DF764D186205B4510ADC37F7AEE1BE2BDBCC243
843F72CD95EBA64DB9A7AA64C44C12BAB9685FBEB9A786752DA6560C6C59C00A
7BD978CF080166AAABCB49F4AEBEC38ABB3CB43876E8DF324F58196C8C4F3D61
894B2759694063C12CA07270680BF19D7D581BA747C12B28BD608BC483EE10BD
CE36BF5F73A96587917519699F5456E17FE232218D883510A0BF98874230FECF
DD51EE2709245D5FF6776F91A23B7367A6DE42C17254E6968CC7CA170439F349
06D279794645580F4F7B9D18DB3FEE97B0022994EA1FEC0F856BFEFC77A1AA65
C65A54C122344503CBA0A49C4CFDBD355E46E543E0C0F051894FDE5C73BF07F3
DA6DA8B05EB544F3A80BE8347720CDF97B1D91C7429A276A8F8ECFB4096663F9
10A57327B5AABE347A9A7E5919CAA7C80BAE76DC0F159F9E847F9AD6BFC95D57
8A2AF43FB10602829957C9E23FAF73DC4FFA27B0DAE3E08F526E050F76E38C4A
D7A93C20BCF9F4A2A22AE6B2DBC2D5FC7673E4B8B3463DBB4D8E12597594E2D8
97F6C8AEB8E7C6EE877A7E35926AD10A7910E47F819E76CA8BF5996728C7E240
8AE550DAAABD8286266C9521C58E56CF7ABF3415001DE64F76647AE964BA7CF9
1C4CA83C4D867837A6FEF9B80766FCE543E86C7CE3D2433CA894D4A9F21A0ABD
EDD9792969EB2477C8A68AB0BB257A834744488F1D010453FFD182953B0C4343
623A5FF74D4A30BE38F50B4BA5CFACE5BEEC6D2C616A2784193270B3AC87504B
DE404B31AA11693ABA377D3870D5F1B39301876CAD4CB2426F1524DB4983CE9D
14A90D62BEFD209292B5145B7D11D21E3DFBF884A6CFAB2D222E4F7C3220D80C
9958AE0018F027CC1D0695722E9F326D96D3CA4739EEB71B679CBA12FE53A4F9
98D6760A75EBA83DADE57DB320B8F713A8B62BF4C6CBF7FC0935EA9BFDC0EB6F
FFA634969DBA79E74B3542D2DF1617A80C769DAD1212F06A2BFECBB06DB8F298
6ED4D73D317AB3A4A9309912CB490EB4519FBAC97699BDD49FC18E6E148150DC
886A3082E379BAC65770479274D17E29D55ECA2932D79066C8AFB1134184DCB0
F6EE7230136153769207036D4511BBA9DFA0B20DF3F3445F804E7D388695BCB0
9A2F9E8C47A895A380626B39804762E27E021D98943AC0C3DE0F984CBDD356BB
9D047349DC301191C792B61C02CB5394A563AD1D857E2D5BE7B992E6FB58FAC0
7C862759E221C0E1A568204DD118AA7870E4C7385D5D515F92018772EFE58828
262ACFB7D288ACD824D0CE1ECE507A3D6887BD98D1AB784434620EA513904992
DD0EB4A8034E92A6884E3C53A477849B9FC7F0E9D97ECCD1F08CA877638F0D01
25C29514CBCEE82354E40D45801EDCB4D925AD829382BBD5BFF2075935E8BABC
256FA04D4A3C727CB82CC1FC1C0CDF2F7B939D88BC9C6EED8E5B1E5BA740E556
64469813926F1CCF0A31EA19841930215C9BEDC4A409C8433D5CA15E5D9C41A2
ACE7B9007A142AF48161831AAE22610D57FC42C621862D4B8B43193BB9177072
9441CC2B03C98F9A7D17EEC3B9167C06C390C9786200EFC146EBB2305871B561
3F9E69EBB70E5D23B0BEA8776116639C39C10C4BCCA273FB3F397EEE4536F9B4
1F02BFC3CC59600936205C0DA9125A3BFE37149FBC64665A6925C0F90883C20B
FB1C19C340A01B989B32BF2E55F753B38A3D6D3FF10BF950D62E40AB4D7ED6BB
FB1B6B49E9D87F4A253E04658E16DB4FE9414FBD4FE332C010EBCEF92502F62D
85A0AA3447434CF22285330F7555F868DFEDB7CECA94EC6B19D6AB4EAA3D0517
22959A6B9980F94D5ED5258A396536B8A0239BB6385D5158786307B758FCDCC9
0E89EA66CD19796C193A73837569925D2B1D4F5CED57A17B417787037E10064E
CD0DA01D0E0351D3A2778A7E46F5EC73974546AD9BE318D1268DD3E0C3A123FF
B2ABD13942244C0ADEAF82BF7602356C7085C60B1F69C94BA6919D7B175171DE
4F2288C2879AB47EE0F65017A7DD7B5CB93293AC2355D346E88952AA2A66160F
76A770AC907C4F2580D0673034263A08906E16EB5880C2CC7211DE721AFD889D
493A385DDD0BFE3F39F2DEB6936C6D2EFF2501611B1E0F4BCB48825D18ACDF1B
ADE03C59D5BAC4E468966C70E516A1F8E6E0A8658ADCB54F897887CEC31A429B
5D1F2816B58B3B0DBAD4DB038EC9AC9147D8A51A9C5E369680AB4BB1CE513E1B
3DF0E0791D802147C96D9C66ED2FC31E4A32B1C7A1D6D136144390EEB72B89D9
2D20F036FDA6DED7C2E4448F52CDA71D14520A433FAF1CF6A8367AB7E7F0C737
EA8364147D06E94B839C039DCB3EA5CF0ED2EA71F8B358F5B1EE138E24222A7E
1FE89287959E8FA8FEA0293097D5A2E92D7A7401EA76CCE810E14FB2D744F00E
4E434E8E105DF68492E239C0115C926287F8628F7F3C2B7B8899A73D842D381E
6AAC1158A4CF75D74E8E66B699C0AE02D72ED3ED029817332EB83D25CA97E538
873FE181460FBBA2106DD6EC9653E5D0BE8EE7D56B6D791B77F74AD84A248F64
9271F7E2476A5BF7A1F464FEE61FE070B1BB5E73585E26D5B6E4D3308C862CE4
7F801798A0F6F9C5AD43D23B6733E498C4F428081F59FCDB6D188EB8EC777711
836373E5D81E9449015383E1F4B2C3F06FF1D28DD5752D0C1AEF5226BF35180F
F9BF07F9368D99AB3733EF504D8C760D7E27F4A1276F08592E87212C0519A2A9
1B871CE7DAF49626001A7C620453AFA86376F4A8DBBE60D062858F0B1169ACF6
365C5117C86E11CFB92A90E8C0A5B2BA2159E9460EB499A9ED26345BD45923F2
47B33D74265B54082C5CFF00A1AADDD79314D09B4628D31D42ADAA6D86784929
F78B9A6E597107A2B117E87BDDF069EC81C6C1A179853A0B6D270D2591F855BA
BB14FD0230EAF814713EB5ABEA647961F93BAC351931511B4C120B9ECD9BBFCF
738EF2044EFE1EC07149A9EF4A4875F3F29A92BAEC9FE813BA82B88F90321EC5
99D7DAFE7AF2AC32CAC4A18F520CFC9CCE8619AB86C703D0DBC1D05AEC6C5A12
F17314981C886DBC3AA7E08B73730359CB16FC73ADE008979AC86886DC63E11A
0A5F58AED01077AF846FCB3A81EB30611A9119C1F53BAD8A019335C78564DE75
9A7CC8BB799164B2FFDCF52AB1F37E67AD8771843A120C85C8985CAF3AF47296
B042A9CD0041421B597B672FFF2B1CFC097C350720F87F28B7694B5B46E4BFD1
55FE6FED052A95849C05373548CBFD60ED3D7E49DF709D382E06C61702CCD3D8
11DDFBFB6AA96E79D014C7A19AA88CFB0AA1A5327B66EB94605487C7576E5BAA
7C5F4E885874C21E7BBD2C35118D0FAEF34879F0A668223AE91A4D434425565F
7F7D1DCEFB26333F4F71763D03ADA9ED3EEA9BDD488B6BF58FFB40F6F3413652
C4BEB4AFCEE8EA1F0DBA90CBCB83CF6AFA8B2CCFA5F6D2C97A0CE2A36253F31B
80DFC7530CF4C73146FC04CE15E39DD71503FDB4037BB1041B3B266329662AFB
805623B458D48E1507BFE1C8CEF3AF72721A11F018D5B6D710737DEA1E7237A5
FCAC6555739DB6C326AE823741DBD6020E292AC65C255EF1F2DD7EAD70BB21A3
D3F5238B4521F4C290710AC5FA1B6DF9C14B4F2C9C661073E56ECB0DA0776A61
DF98D762BA3D8C4439ECC207F930971721E4ACFF57F4F3AC176A441B221B58BD
C88B02AAFA012138D6940BE883BD6E9BF96E8CC4237260FC9FC6BB693ADA6D32
B1F9B20FEE357143788CD2D0BDBE6CAAF47A332743D31100BD2D1375D344C7C6
BA17FF42004EF6618CDC777674AD6009877AE74DD98135B3B6238B3000A1BE2B
8D60A8AC7DBC0B0C2C1FC0E36323EEEFA2A9F6D5C5AC3DE2FA2AB5F275F22D67
F1765BABF2B4A26865147BE30DFAA393C3E46C5EA83DF9CF18424958C717BDEE
CE93DD58BD21FFDB79982D816ADF02EE1BC19377C2E28061F5D5420CED4A7391
52972ED5F0C3795D9A8619135FFB59FFD8391FBA7C5208AF0F432AFC80E3CC58
D5E631CB5C0DF9AC813AF10FED5AFA58543F07BEF13E494D73E91697BFF986C2
622642241E032D9D112DDE6D28832276CC2DFA1D67F24371E402BCE1115A8F99
F33A73D4C601B0C607A633623199663E2E4AB57F69366721A7686DA3FDE811E5
C0CED31033001F9848DCC0EFA7353FB2DF2762678A322B85D31517D535BE0E6B
47DC20E5332210D0102395909AC694367F174CFFB355057201F80752B91DCE5E
5CABA1991400802E4CDD4CBD1431E9E1494C72C67FBB774BE204919AC94A8465
9DFA414C700684EE9DD78F43D969CC439F7152B199518B46E32634AB4EA285C5
F87B964711504FF85CDE590962EE953290EEF388F8110320EE74857FAA3574F4
58084152E9B6502BD135832CAE17C3B3874B9D76990016DFEC92249657F31006
15AB9A4EE6BC3C8947AE4E72A565EB82672211066749770ED6BC05F7A01EC955
A895C5615B22B5E08446BEC4328BB4B2E585FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (HIPB-FV.dvi)
@start /Fa 251[71 4[{}1 90.9091 /MSAM10 rf /Fb 143[91
112[{}1 90.9091 /CMEX10 rf /Fc 133[46 55 4[41 41 3[52
58 4[29 7[51 30[74 19[29 26[52 2[29 16[{}12 90.9091 /CMBX10
rf /Fd 207[30 4[47 43[{}2 49.8132 /CMR6 rf /Fe 173[48
82[{}1 66.4176 /MSBM7 rf /Ff 204[38 38 38 49[{}3 74.7198
/CMR9 rf /Fg 251[77 4[{}1 99.6264 /MSAM10 rf /Fh 128[50
1[50 2[40 47 2[45 52 32 40 41 2[50 55 80 25 45 30 30
50 45 30 45 50 45 1[50 26[64 4[72 6[30 12[35 30 24[50
2[30 16[{}30 99.6264 /CMTI12 rf /Fi 139[27 28 28 9[39
4[31 1[35 46[35 35 35 4[55 43[{}10 66.4176 /CMR8 rf /Fj
173[66 82[{}1 90.9091 /MSBM10 rf /Fk 143[76 1[45 3[25
2[45 45 10[61 8[77 13[70 11[51 1[0 3[61 91 13[45 45 32[25
71{}16 90.9091 /CMSY10 rf /Fl 134[45 52 3[33 14[42 38[71
2[25 25 58[{}7 90.9091 /CMMI10 rf /Fm 128[45 1[45 2[40
48 48 1[48 51 35 36 36 1[51 45 51 76 25 48 28 25 51 45
28 40 51 40 1[45 3[25 1[25 7[51 2[62 2[83 57 9[64 68
3[71 1[25 25 7[45 45 45 1[25 30 25 71 1[35 35 20[45 2[25
4[53 11[{}48 90.9091 /CMR10 rf /Fn 173[72 82[{}1 99.6264
/MSBM10 rf /Fo 149[20 56[71 19 47[55{}4 66.4176 /CMSY8
rf /Fp 143[83 1[50 6[50 50 51[66 42[77 77 5[77{}8 99.6264
/CMSY10 rf /Fq 134[35 40 120[{}2 66.4176 /CMMI8 rf /Fr
134[48 55 3[35 14[45 38[76 2[27 27 58[{}7 99.6264 /CMMI12
rf /Fs 128[49 1[49 2[43 51 2[51 54 38 38 38 1[54 49 54
81 27 51 30 27 54 49 30 43 54 43 54 49 13[54 2[66 2[89
61 9[69 73 3[76 2[27 7[49 49 49 1[27 33 27 76 1[38 38
20[49 2[27 16[{}44 99.6264 /CMR12 rf /Ft 128[56 4[50
59 2[59 62 44 44 46 1[62 56 62 1[31 59 34 31 62 56 34
51 1[50 62 54 12[78 6[106 10[80 85 18[31 37 25[56 2[31
16[{}30 99.6264 /CMBX12 rf /Fu 128[81 4[72 85 2[85 90
1[64 66 1[90 81 90 1[45 85 1[45 1[81 49 74 2[90 25[126
52[81 19[{}19 143.462 /CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 447 -6 a Fu(Hip)t(erb)t(olikus)52
b(f)t(\177)-85 b(uggv)l(\023)-77 b(en)l(y)l(ek)49 b(\023)-77
b(es)52 b(in)l(v)l(erzeik)-153 213 y Ft(A)37 b(szin)m(uszhip)s(erb)s
(olikusz-f)s(\177)-59 b(uggv)n(\023)-54 b(en)m(y)p -153
248 1592 4 v 262 325 1177 4 v 262 587 4 262 v 290 494
a Fs(sh)18 b Fr(x)28 b Fs(:=)623 426 y Fr(e)668 390 y
Fq(x)735 426 y Fp(\000)22 b Fr(e)879 390 y Fo(\000)p
Fq(x)p 623 471 355 4 v 776 562 a Fs(2)1086 494 y(\()p
Fr(x)28 b Fp(2)g Fn(R)p Fs(\))p 1436 587 4 262 v 262
590 1177 4 v -153 729 a(A)k(sh)h(f)s(\177)-51 b(uggv)m(\023)-46
b(en)m(y)33 b(tula)5 b(jdons\023)-49 b(agai:)-5 837 y
Fm(p\023)k(aratlan)31 b([sh)15 b Fl(x)25 b Fm(=)g Fk(\000)p
Fm(sh)14 b(\()p Fk(\000)p Fl(x)p Fm(\))31 b(\()p Fl(x)25
b Fk(2)g Fj(R)p Fm(\)];)-5 963 y(deriv\023)-45 b(alhat\023)g(o)32
b Fj(R)p Fm(-en,)27 b(\023)-43 b(es)231 1090 y(sh)318
1053 y Fo(0)356 1090 y Fl(x)25 b Fm(=)g(c)m(h)16 b Fl(x)91
b Fm(\()p Fl(x)25 b Fk(2)g Fj(R)p Fm(\),)231 1198 y(sh)318
1161 y Fo(0)356 1198 y Fm(0)h(=)f(c)m(h)15 b(0)26 b(=)f(1;)-5
1325 y Fk(")31 b Fm(az)g Fj(R)p Fm(-en;)-5 1452 y(k)m(on)m(v)m(ex)h
(\(0)p Fl(;)15 b Fm(+)p Fk(1)p Fm(\),)32 b(k)m(onk\023)-45
b(av)31 b(\()p Fk(\0001)p Fl(;)15 b Fm(0\)-n;)-5 1579
y(lim)-5 1634 y Fi(+)p Fo(1)152 1579 y Fm(sh)24 b(=)h(+)p
Fk(1)p Fm(,)30 b(lim)577 1634 y Fo(\0001)733 1579 y Fm(sh)24
b(=)h Fk(\0001)p Fm(,)-5 1740 y Fk(R)72 1755 y Fi(sh)168
1740 y Fm(=)g Fj(R)p Fm(;)83 2732 y
 /PSfrag where{pop(szf)[[0()0.8 0]](x)[[1()0.6 0]](y)[[2()0.6 0]]3
0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 83 2732 a @beginspecial
137 @llx 3 @lly 376 @urx 147 @ury 1842 @rwi @setspecial
%%BeginDocument: sh.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 137 3 376 147
%%HiResBoundingBox: 137.188 3.1875 375.438 146.125
%%Creator: (Mathematica 4.0 for Microsoft Windows)
%%CreationDate: (Tuesday, October 31, 2000) (7:23:05)
%%Title: Clipboard
%%DocumentNeededResources: font Times-Italic
%%+ font Helvetica
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 149.313 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
137.187500 146.125000 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		238.250000 def
/Mheight	142.937500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .6 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.481685 0.12375 0.3 0.075 [
[ 0 0 0 0 ]
[ 1 .6 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .6 L
0 .6 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
1 1 1 r
.001 w
[ ] 0 setdash
.02381 .3 m
.06096 .3 L
.10147 .3 L
.13952 .3 L
.17612 .3 L
.21507 .3 L
.25256 .3 L
.29241 .3 L
.33081 .3 L
.36774 .3 L
.40704 .3 L
.44487 .3 L
.48125 .3 L
.51999 .3 L
.55727 .3 L
.59691 .3 L
.63509 .3 L
.67182 .3 L
.7109 .3 L
.74852 .3 L
.78851 .3 L
.82703 .3 L
.8641 .3 L
.90353 .3 L
.93956 .3 L
s
0 g
.02381 .3 m
.93956 .3 L
s
% Start of user PostScript
-3.7 0 3.7 0 MAarrowhead1
% End of user PostScript
.48168 0 m
.48168 .6 L
s
% Start of user PostScript
0 -4. 0 4. MAarrowhead1
% End of user PostScript
gsave
.97619 .30375 -65.75 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
68.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.54356 .585 -66.25 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
69.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.004 w
.22336 0 m
.25256 .06703 L
.29241 .13503 L
.33081 .18416 L
.36774 .22076 L
.40704 .25196 L
.44487 .27736 L
.48125 .29974 L
.51999 .32359 L
.55727 .34871 L
.59691 .38037 L
.63509 .41869 L
.67182 .46623 L
.7109 .53314 L
s
.7109 .53314 m
.73999 .6 L
s
.001 w
.17231 .1125 m
.19741 .12771 L
.22479 .1443 L
.25049 .15988 L
.27522 .17487 L
.30154 .19082 L
.32687 .20617 L
.3538 .22249 L
.37974 .23821 L
.4047 .25334 L
.43125 .26943 L
.45681 .28493 L
.48139 .29982 L
.50757 .31569 L
.53276 .33095 L
.55954 .34719 L
.58534 .36282 L
.61015 .37786 L
.63656 .39386 L
.66198 .40927 L
.689 .42564 L
.71503 .44142 L
.74007 .4566 L
.76671 .47274 L
.79106 .4875 L
s
gsave
.86531 .3975 -69.625 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(szf) show
76.250 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

%%Trailer
%%EOF

%%EndDocument
 @endspecial 83 2732 a
 /End PSfrag
 83 2732 a 83 2274 a
 /Hide PSfrag
 83 2274 a
-786 2344 a Fs(PSfrag)32 b(replacemen)m(ts)p -786 2379
869 4 v 83 2383 a
 /Unhide PSfrag
 83 2383 a -36 2468 a
  {
 -36 2468 a -155
2480 a Fr(y)f Fs(=)c Fr(x)-36 2468 y
  } 0/Place PSfrag
 -36 2468 a 55 2594
a
  {
 55 2594 a 27 2615 a Fr(x)55 2594 y
  } 1/Place PSfrag
 55 2594 a 57 2700
a
  {
 57 2700 a 31 2712 a Fr(y)57 2700 y
  } 2/Place PSfrag
 57 2700 a 1854 2752
4 2608 v 1976 213 a Ft(A)37 b(k)m(oszin)m(uszhip)s(erb)s(olikusz-f)s
(\177)-59 b(uggv)n(\023)-54 b(en)m(y)p 1976 248 1705
4 v 2450 325 1178 4 v 2450 587 4 262 v 2478 494 a Fs(c)m(h)18
b Fr(x)28 b Fs(:=)2814 426 y Fr(e)2859 390 y Fq(x)2925
426 y Fs(+)22 b Fr(e)3068 390 y Fo(\000)p Fq(x)p 2814
471 354 4 v 2966 562 a Fs(2)3274 494 y(\()p Fr(x)28 b
Fp(2)g Fn(R)p Fs(\))p 3624 587 4 262 v 2450 590 1178
4 v 1976 729 a(A)33 b(c)m(h)g(f)s(\177)-51 b(uggv)m(\023)-46
b(en)m(y)33 b(tula)5 b(jdons\023)-49 b(agai:)2124 837
y Fm(p\023)k(aros)30 b([c)m(h)16 b Fl(x)25 b Fm(=)g(c)m(h)16
b(\()p Fk(\000)p Fl(x)p Fm(\))26 b Fl(>)f Fm(0)61 b(\()p
Fl(x)25 b Fk(2)g Fj(R)p Fm(\)];)2124 963 y(deriv\023)-45
b(alhat\023)g(o)32 b Fj(R)p Fm(-en,)c(\023)-43 b(es)2361
1071 y(c)m(h)2449 1035 y Fo(0)2487 1071 y Fl(x)26 b Fm(=)f(sh)14
b Fl(x)91 b Fm(\()p Fl(x)25 b Fk(2)g Fj(R)p Fm(\),)2361
1179 y(c)m(h)2449 1142 y Fo(0)2487 1179 y Fm(0)h(=)f(sh)15
b(0)25 b(=)g(0;)2124 1306 y Fk(#)31 b Fm(\()p Fk(\0001)p
Fl(;)15 b Fm(0\)-n,)32 b Fk(")e Fm(\(0)p Fl(;)15 b Fm(+)p
Fk(1)p Fm(\)-n;)2124 1433 y(k)m(on)m(v)m(ex)32 b Fj(R)p
Fm(-en;)2124 1560 y(lim)2125 1615 y Fi(+)p Fo(1)2281
1560 y Fm(c)m(h)25 b(=)g(+)p Fk(1)p Fm(,)31 b(lim)2708
1615 y Fo(\0001)2864 1560 y Fm(c)m(h)26 b(=)f(+)p Fk(1)p
Fm(,)2124 1726 y Fk(R)2201 1741 y Fi(c)n(h)2299 1726
y Fm(=)g([1)p Fl(;)15 b Fm(+)p Fk(1)p Fm(\);)2366 2602
y
 /PSfrag where{pop(szf)[[0()0.8 0]](e)[[1()0.6 0]](x)[[2()0.6 0]](y)[[3()0.6
0]]4 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 2366 2602 a @beginspecial 137 @llx 3 @lly 375 @urx
122 @ury 1615 @rwi @setspecial
%%BeginDocument: ch.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 137 3 375 122
%%HiResBoundingBox: 137.188 3.1875 374.688 121.938
%%Creator: (Mathematica 4.0 for Microsoft Windows)
%%CreationDate: (Tuesday, October 31, 2000) (18:08:03)
%%Title: Clipboard
%%DocumentNeededResources: font Times-Italic
%%+ font Helvetica
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 125.125 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
137.187500 121.937500 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		237.500000 def
/Mheight	118.750000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .5 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.477324 0.226757 0.03125 0.15625 [
[ 0 0 0 0 ]
[ 1 .5 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .5 L
0 .5 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
1 1 1 r
.001 w
[ ] 0 setdash
.02381 .03125 m
.0606 .03125 L
.10073 .03125 L
.13842 .03125 L
.17467 .03125 L
.21324 .03125 L
.25038 .03125 L
.28985 .03125 L
.32788 .03125 L
.36447 .03125 L
.40339 .03125 L
.44086 .03125 L
.4769 .03125 L
.51527 .03125 L
.55219 .03125 L
.59145 .03125 L
.62927 .03125 L
.66565 .03125 L
.70436 .03125 L
.74162 .03125 L
.78122 .03125 L
.81938 .03125 L
.8561 .03125 L
.89515 .03125 L
.93084 .03125 L
s
0 g
.02381 .03125 m
.93084 .03125 L
s
% Start of user PostScript
-2. 0 2. 0 MAarrowhead1
% End of user PostScript
.47732 0 m
.47732 .5 L
s
% Start of user PostScript
0 -0.2 0 3. MAarrowhead1
% End of user PostScript
gsave
.96712 .03906 -65.75 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
68.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.54535 .47656 -66.25 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
69.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.004 w
.11451 .43398 m
.14395 .38906 L
.17605 .34693 L
.2062 .31314 L
.2352 .28537 L
.26606 .26036 L
.29577 .24032 L
.32735 .22294 L
.35777 .20972 L
.38704 .20005 L
.40215 .19616 L
.41817 .19285 L
.43306 .19049 L
.447 .1889 L
.45491 .18826 L
.45881 .18802 L
.46243 .18784 L
.46569 .18771 L
.46918 .1876 L
.47116 .18756 L
.47214 .18754 L
.47304 .18753 L
.47384 .18752 L
.47472 .18751 L
.47561 .1875 L
.47654 .1875 L
.47753 .1875 L
.47845 .1875 L
.47893 .1875 L
.47946 .18751 L
.48002 .18751 L
.48053 .18752 L
.48235 .18754 L
.48338 .18756 L
.48432 .18757 L
.48777 .18767 L
.49141 .1878 L
.49535 .18799 L
.49902 .18822 L
.50734 .18887 L
.51536 .1897 L
.52293 .19067 L
.53709 .19296 L
.55234 .19613 L
.5664 .19971 L
.59642 .20955 L
.62529 .22196 L
.65602 .23858 L
.6856 .25818 L
.71705 .28326 L
Mistroke
.74734 .312 L
.77648 .34438 L
.80749 .38454 L
.83734 .42944 L
.84014 .43398 L
Mfstroke
.001 w
.43197 0 m
.45405 .01521 L
.47813 .0318 L
.50074 .04738 L
.52249 .06237 L
.54563 .07832 L
.56792 .09367 L
.5916 .10999 L
.61442 .12571 L
.63637 .14084 L
.65972 .15693 L
.68221 .17243 L
.70383 .18732 L
.72685 .20319 L
.749 .21845 L
.77256 .23469 L
.79525 .25032 L
.81707 .26536 L
.8403 .28136 L
.86266 .29677 L
.88642 .31314 L
.90932 .32892 L
.93135 .3441 L
.95478 .36024 L
.97619 .375 L
s
.01 w
.47732 .1875 Mdot
gsave
.52268 .26563 -65.7813 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(e) show
68.563 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.95351 .23438 -69.625 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(szf) show
76.250 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2366 2602 a
 /End PSfrag
 2366 2602 a 2366 2071 a
 /Hide PSfrag
 2366
2071 a 1555 2135 a Fm(PSfrag)30 b(replacemen)m(ts)p 1555
2167 811 4 v 2366 2170 a
 /Unhide PSfrag
 2366 2170 a 2255 2250 a
  {
 2255
2250 a 2145 2261 a Fl(y)e Fm(=)d Fl(x)2255 2250 y
  } 0/Place PSfrag
 2255
2250 a 2343 2357 a
  {
 2343 2357 a 2320 2386 a Fm(1)2343
2357 y
  } 1/Place PSfrag
 2343 2357 a 2340 2475 a
  {
 2340 2475 a 2314 2494
a Fl(x)2340 2475 y
  } 2/Place PSfrag
 2340 2475 a 2342 2574 a
  {
 2342 2574
a 2318 2585 a Fl(y)2342 2574 y
  } 3/Place PSfrag
 2342 2574 a -153 2958
a Fs(A)32 b(trigonometrikus)i(f)s(\177)-51 b(uggv)m(\023)-46
b(en)m(y)m(ek)34 b(nev)m(\023)-46 b(ere)34 b(utal\023)-49
b(ast)33 b(indok)m(olj\023)-49 b(ak)33 b(az)g(al\023)-49
b(abbi)33 b(azonoss\023)-49 b(agok.)-253 3075 y Ft(T)n(\023)-54
b(etel.)43 b Fh(F)-7 b(enn\023)-50 b(al)5 b(lnak)33 b(a)i(k\177)-50
b(ovetkez})g(o)33 b(e)-5 b(gyenl})-50 b(os)n(\023)j(egek:)16
3191 y Fs(\(a\))64 b(sh)18 b(\()p Fr(x)k Fs(+)g Fr(y)t
Fs(\))27 b(=)g(sh)18 b Fr(x)f Fs(c)m(h)g Fr(y)25 b Fs(+)d(c)m(h)c
Fr(x)f Fs(sh)g Fr(y)198 b Fs(\()p Fr(x;)17 b(y)31 b Fp(2)d
Fn(R)p Fs(\),)16 3328 y(\(b\))65 b(c)m(h)17 b(\()p Fr(x)23
b Fs(+)f Fr(y)t Fs(\))k(=)i(c)m(h)17 b Fr(x)g Fs(c)m(h)h
Fr(y)25 b Fs(+)d(sh)c Fr(x)f Fs(sh)g Fr(y)198 b Fs(\()p
Fr(x;)17 b(y)31 b Fp(2)d Fn(R)p Fs(\))-253 3464 y(\()p
Fh(add)-10 b(\023)-40 b(\020ci\023)-50 b(os)33 b(formul\023)-50
b(ak)p Fs(\),)16 3604 y(\(c\))65 b(c)m(h)295 3561 y Fi(2)334
3604 y Fr(x)23 b Fp(\000)f Fs(sh)604 3561 y Fi(2)644
3604 y Fr(x)28 b Fs(=)f(1)195 b(\()p Fr(x)28 b Fp(2)g
Fn(R)p Fs(\))-253 3741 y(\()p Fh(n)n(\023)-47 b(egyzetes)33
b(\177)-50 b(osszef)q(\177)f(ugg)n(\023)k(es)p Fs(\).)-253
3857 y Ft(Bizon)m(y)-12 b(\023)-44 b(\020t)o(\023)-55
b(as.)44 b Fs(Behely)m(ettes)-11 b(\023)-38 b(\020t)m(\023)-46
b(essel)37 b Fg(\004)-153 4014 y Fs(A)21 b(hip)s(erb)s(olikus)j(f)s
(\177)-51 b(uggv)m(\023)-46 b(en)m(y)m(ekre)23 b(v)m(onatk)m(oz\023)-49
b(o)23 b(n)m(\023)-46 b(egyzetes)24 b(\177)-49 b(osszef)s(\177)e(ugg)m
(\023)-46 b(es)22 b(geometriai)g(tartalma)g(a)f(k\177)-49
b(ov)m(etk)m(ez})g(o:)-253 4130 y(Minden)34 b Fr(t)28
b Fp(2)g Fn(R)33 b Fs(v)-5 b(al\023)-49 b(os)32 b(sz\023)-49
b(am)34 b(eset)m(\023)-46 b(en)34 b(a)f(\(c)m(h)17 b
Fr(t;)g Fs(sh)g Fr(t)p Fs(\))28 b Fp(2)g Fn(R)1829 4094
y Fi(2)1901 4130 y Fs(p)s(on)m(tok)33 b(ra)5 b(jta)32
b(v)-5 b(annak)33 b(az)g Fr(x)2986 4094 y Fi(2)3048 4130
y Fp(\000)23 b Fr(y)3200 4094 y Fi(2)3266 4130 y Fs(=)28
b(1)k(\()p Fr(x)c(>)g Fs(0\))-253 4247 y(egy)m(enlet)s(})-51
b(u)38 b(hip)s(erb)s(ola\023)-49 b(agon.)55 b(A)37 b(f)s(\177)-51
b(uggv)m(\023)-46 b(en)m(y)m(ek)38 b(nev)m(\023)-46 b(eb)s(en)39
b(szerepl})-49 b(o)38 b(hip)s(erb)s(olikus)g(jelz})-49
b(o)38 b(erre)f(a)f(geometriai)-253 4363 y(k)-5 b(ap)s(csolatra)32
b(utal.)1282 5248 y
 /PSfrag where{pop(chtsht)[[0()0.6 0]](e)[[1()0.6 0]](x)[[2()0.6 0]](y)[[3()0.6
0]]4 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 1282 5248 a @beginspecial 0 @llx
0 @lly 299 @urx 265 @ury 1133 @rwi @setspecial
%%BeginDocument: no-geomt.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 299 265
%%HiResBoundingBox: 0 0 299.938 265.875
%%Creator: (Mathematica Microsoft Windows 3.0)
%%Title: Clipboard
%%CreationDate: (11/10/00) (12:41:15)
%%DocumentNeededResources: (atend)
%%DocumentFonts: (atend)
%%DocumentNeededFonts: (atend)
%%EndComments
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def
/Mnodistort true def
/colorimage where
{ pop /Mcolorimage {colorimage} bind def /Mimage {image} bind def}
{
/colorimage {Mcolorimage} bind def
} ifelse
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		299.937500 def
/Mheight	265.875000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .88645 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.477324 0.00697715 0.443223 0.00697715 [
[.97619 .44329 -5.59375 -7.4375 ]
[.97619 .44329 5.59375 7.4375 ]
[.54012 .86534 -5.59375 -7.4375 ]
[.54012 .86534 5.59375 7.4375 ]
[.65664 .79836 0 -5.96875 ]
[.65664 .79836 30.5 5.96875 ]
[.68734 .40834 -5.34375 -6.96875 ]
[.68734 .40834 5.34375 6.96875 ]
[.51221 .40834 -5.34375 -6.96875 ]
[.51221 .40834 5.34375 6.96875 ]
[ 0 0 0 0 ]
[ 1 .88645 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
0 g
.5 Mabswid
.067 .81463 m
.10927 .76732 L
.14916 .72119 L
.18135 .68234 L
.20795 .64849 L
.23202 .6157 L
.25141 .5868 L
.26828 .55844 L
.28115 .53299 L
.2906 .50986 L
.29434 .49854 L
.29765 .48631 L
.30004 .47489 L
.30088 .46982 L
.30163 .46431 L
.30196 .46133 L
.30222 .45857 L
.30245 .45572 L
.30261 .45314 L
.30274 .4506 L
.30278 .44944 L
.30282 .44821 L
.30286 .44689 L
.30287 .44631 L
.30288 .44568 L
.30289 .44501 L
.30289 .44438 L
.30289 .444 L
.3029 .44364 L
.3029 .44296 L
.30289 .44233 L
.30289 .44165 L
.30288 .44102 L
.30287 .44043 L
.30285 .43908 L
.30281 .43765 L
.30276 .43625 L
.3027 .43496 L
.30254 .43201 L
.30215 .4271 L
.30159 .42184 L
.30081 .41616 L
.29975 .40997 L
.29728 .39862 L
.29002 .37498 L
.28008 .35115 L
.26766 .32689 L
.25115 .29924 L
.2318 .27043 L
.20719 .23696 L
Mistroke
.17917 .20141 L
.1478 .16365 L
.10915 .11899 L
.067 .07182 L
Mfstroke
.88765 .07182 m
.84538 .11912 L
.80549 .16526 L
.7733 .20411 L
.7467 .23795 L
.72263 .27075 L
.70324 .29965 L
.68637 .328 L
.6735 .35345 L
.66405 .37659 L
.66031 .38791 L
.65699 .40014 L
.6546 .41156 L
.65377 .41663 L
.65302 .42214 L
.65269 .42511 L
.65243 .42787 L
.6522 .43072 L
.65203 .43331 L
.65191 .43585 L
.65186 .43701 L
.65182 .43824 L
.65179 .43955 L
.65178 .44014 L
.65177 .44076 L
.65176 .44144 L
.65176 .44206 L
.65175 .44245 L
.65175 .44281 L
.65175 .44349 L
.65176 .44412 L
.65176 .44479 L
.65177 .44543 L
.65178 .44601 L
.6518 .44737 L
.65184 .4488 L
.65189 .45019 L
.65195 .45149 L
.65211 .45444 L
.6525 .45935 L
.65306 .46461 L
.65384 .47029 L
.65489 .47648 L
.65737 .48783 L
.66463 .51147 L
.67456 .5353 L
.68699 .55955 L
.7035 .58721 L
.72285 .61601 L
.74746 .64949 L
Mistroke
.77548 .68503 L
.80685 .7228 L
.8455 .76746 L
.88765 .81463 L
Mfstroke
1 1 1 r
.02381 .44322 m
.0606 .44322 L
.10073 .44322 L
.13842 .44322 L
.17467 .44322 L
.21324 .44322 L
.25038 .44322 L
.28985 .44322 L
.32788 .44322 L
.36447 .44322 L
.40339 .44322 L
.44086 .44322 L
.4769 .44322 L
.51527 .44322 L
.55219 .44322 L
.59145 .44322 L
.62927 .44322 L
.66565 .44322 L
.70436 .44322 L
.74162 .44322 L
.78122 .44322 L
.81938 .44322 L
.8561 .44322 L
.89515 .44322 L
.93084 .44322 L
s
0 g
.02381 .44322 m
.93084 .44322 L
s
% Start of user PostScript
-65. 0 65. 0 MAarrowhead1
% End of user PostScript
.47732 .02111 m
.47732 .86534 L
s
% Start of user PostScript
0 -60.5 0 60.5 MAarrowhead1
% End of user PostScript
gsave
.97619 .44329 -66.5938 -11.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 22.875 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 18.875000 moveto
 464.000000 18.875000 lineto
 464.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 18.875000 lineto
closepath
clip newpath
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(x) show
70.187500 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Courier
grestore
gsave
.54012 .86534 -66.5938 -11.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 22.875 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 18.875000 moveto
 464.000000 18.875000 lineto
 464.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 18.875000 lineto
closepath
clip newpath
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(y) show
70.187500 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Courier
grestore
gsave
.65664 .79836 -61 -9.96875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 19.9375 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 15.937500 moveto
 464.000000 15.937500 lineto
 464.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 15.937500 lineto
closepath
clip newpath
63.000000 12.062500 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 12.062500 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(chtsht) show
89.500000 12.062500 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Helvetica
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedFonts:
%%DocumentFonts: font Helvetica
grestore
gsave
.68734 .40834 -66.3438 -10.9688 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 21.9375 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 17.937500 moveto
 464.000000 17.937500 lineto
 464.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 17.937500 lineto
closepath
clip newpath
63.000000 13.625000 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 13.625000 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(1) show
69.687500 13.625000 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Helvetica
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedFonts:
%%DocumentFonts: font Helvetica
grestore
gsave
.51221 .40834 -66.3438 -10.9688 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 21.9375 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 17.937500 moveto
 464.000000 17.937500 lineto
 464.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 17.937500 lineto
closepath
clip newpath
63.000000 13.625000 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 13.625000 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(0) show
69.687500 13.625000 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Helvetica
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedFonts:
%%DocumentFonts: font Helvetica
grestore
.02 w
.83636 .75704 Mdot
0 0 m
1 0 L
1 .88645 L
0 .88645 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
%%PSTrailer
end
grestore

%%EPS Trailer

%%EndDocument
 @endspecial 1282 5248 a
 /End PSfrag
 1282 5248 a 1282 4675 a
 /Hide PSfrag
 1282
4675 a 413 4744 a Fs(PSfrag)h(replacemen)m(ts)p 413 4779
869 4 v 1282 4783 a
 /Unhide PSfrag
 1282 4783 a 1077 4850 a
  {
 1077 4850
a 872 4875 a Fs(\(c)m(h)17 b Fr(t;)g Fs(sh)g Fr(t)p Fs(\))1077
4850 y
  } 0/Place PSfrag
 1077 4850 a 1258 4984 a
  {
 1258 4984 a 1234 5016
a Fs(1)1258 4984 y
  } 1/Place PSfrag
 1258 4984 a 1254 5111 a
  {
 1254 5111
a 1226 5132 a Fr(x)1254 5111 y
  } 2/Place PSfrag
 1254 5111 a 1256 5217
a
  {
 1256 5217 a 1230 5229 a Fr(y)1256 5217 y
  } 3/Place PSfrag
 1256 5217
a -153 5385 a Fs(A)38 b(trigonometrikus)h(esethez)h(hasonl\023)-49
b(oan)38 b(az)h(\(a\),)g(\(b\))c(\023)-46 b(es)39 b(\(c\)-b})-49
b(ol)38 b(to)m(v\023)-49 b(abbi)39 b(azonoss\023)-49
b(agok)38 b(n)m(y)m(erhet})-49 b(ok.)-253 5501 y(P)m(\023)j(eld\023)d
(aul:)304 5636 y(sh)17 b(2)p Fr(x)28 b Fs(=)f(2sh)17
b Fr(x)g Fs(c)m(h)h Fr(x;)212 b Fs(sh)17 b Fr(x)23 b
Fp(\006)g Fs(sh)17 b Fr(y)31 b Fs(=)c(2)17 b(sh)2047
5568 y Fr(x)22 b Fp(\006)h Fr(y)p 2047 5613 229 4 v 2137
5704 a Fs(2)2302 5636 y(c)m(h)2423 5568 y Fr(x)g Fp(\007)f
Fr(y)p 2423 5613 V 2513 5704 a Fs(2)2759 5636 y(\()p
Fr(x;)17 b(y)31 b Fp(2)d Fn(R)p Fs(\))p Fr(:)-253 5802
y Ft(Meg)s(jegyz)n(\023)-54 b(es.)61 b Fs(A)39 b(c)m(h)g(f)s(\177)-51
b(uggv)m(\023)-46 b(en)m(y)38 b(k)m(\023)-46 b(ep)m(\023)g(et)39
b Ft(l)o(\023)-55 b(ancg\177)f(orb)n(\023)i(e)p Fs(nek)40
b(is)f(nev)m(ezik,)j(mert)d(egy)g(homog)m(\023)-46 b(en,)40
b(ha)5 b(jl)m(\023)-46 b(ek)m(on)m(y)-8 b(,)-253 5918
y(n)m(y)s(\023)-51 b(ul\023)i(asmen)m(tes,)35 b(k)m(\023)-46
b(et)33 b(v)m(\023)-46 b(eg)m(\023)g(en)34 b(felf)s(\177)-51
b(uggesztett)33 b(fonal)f(\(l\023)-49 b(anc\))33 b(ily)m(en)h(alak)m
(ot)e(v)m(esz)j(fel.)1736 6018 y Ff(1)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop -153 -22 a Ft(Az)36 b(\023)-55
b(area)38 b(szin)m(uszhip)s(erb)s(olikusz-f)s(\177)-59
b(uggv)n(\023)-54 b(en)m(y)p -153 13 1886 4 v -153 115
a Fs(Miv)m(el)34 b(a)e(sh)50 b(f)s(\177)-51 b(uggv)m(\023)-46
b(en)m(y)33 b(szigor)s(\023)-51 b(uan)32 b(monoton)-153
231 y(n\177)-49 b(ov})g(o)32 b Fn(R)p Fs(-en,)h(ez)m(\023)-46
b(ert)33 b(in)m(v)m(ert\023)-49 b(alhat\023)g(o:)p 543
323 615 4 v 543 457 4 134 v 572 432 a(arsh)44 b(:=)28
b(sh)1035 391 y Fo(\000)p Fi(1)p 1154 457 V 543 460 615
4 v -153 609 a Fs(Az)33 b(arsh)f(f)s(\177)-51 b(uggv)m(\023)-46
b(en)m(y)33 b(tula)5 b(jdons\023)-49 b(agai:)-5 717 y
Fk(D)65 732 y Fi(arsh)224 717 y Fm(=)25 b Fk(R)397 732
y Fi(sh)494 717 y Fm(=)g Fj(R)p Fm(,)91 b Fk(R)849 732
y Fi(arsh)1008 717 y Fm(=)25 b Fk(D)1174 732 y Fi(sh)1270
717 y Fm(=)g Fj(R)p Fm(;)-5 844 y(p\023)-45 b(aratlan)31
b([arsh)15 b Fl(x)25 b Fm(=)g Fk(\000)p Fm(arsh)14 b(\()p
Fk(\000)p Fl(x)p Fm(\))31 b(\()p Fl(x)25 b Fk(2)g Fj(R)p
Fm(\)];)-5 971 y(deriv\023)-45 b(alhat\023)g(o)32 b Fj(R)p
Fm(-en,)27 b(\023)-43 b(es)231 1136 y(arsh)399 1099 y
Fo(0)437 1136 y Fl(x)25 b Fm(=)759 1074 y(1)p 620 1115
324 4 v 620 1133 a Fk(p)p 696 1133 248 4 v 77 x Fm(1)c(+)f
Fl(x)905 1183 y Fi(2)1045 1136 y Fm(\()p Fl(x)25 b Fk(2)g
Fj(R)p Fm(\);)-5 1311 y Fk(")31 b Fj(R)p Fm(-en;)-5 1437
y(k)m(onk\023)-45 b(av)31 b(\(0)p Fl(;)15 b Fm(+)p Fk(1)p
Fm(\)-en,)32 b(k)m(on)m(v)m(ex)g(\()p Fk(\0001)p Fl(;)15
b Fm(0\)-n;)-5 1572 y(lim)-5 1628 y Fi(+)p Fo(1)152 1572
y Fm(arsh)24 b(=)h(+)p Fk(1)p Fm(,)30 b(lim)658 1628
y Fo(\0001)814 1572 y Fm(arsh)25 b(=)g Fk(\0001)p Fm(,)-3
1742 y Fs(az)33 b(ln)g(f)s(\177)-51 b(uggv)m(\023)-46
b(enn)m(y)m(el)23 b(\023)-38 b(\020gy)32 b(fejezhet})-49
b(o)34 b(ki:)233 1859 y(arsh)17 b Fr(x)29 b Fs(=)e(ln\()p
Fr(x)c Fs(+)911 1777 y Fp(p)p 994 1777 264 4 v 82 x Fr(x)1049
1831 y Fi(2)1111 1859 y Fs(+)f(1\))65 b(\()p Fr(x)28
b Fp(2)g Fn(R)p Fs(\))-153 2838 y
 /PSfrag where{pop(szf)[[0()0.8 0]](x)[[1()0.6 0]](y)[[2()0.6 0]]3
0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -153 2838 a @beginspecial
137 @llx 3 @lly 376 @urx 147 @ury 1842 @rwi @setspecial
%%BeginDocument: arsh.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 137 3 376 147
%%HiResBoundingBox: 137.188 3.9375 375.063 146.688
%%Creator: (Mathematica 4.0 for Microsoft Windows)
%%CreationDate: (Tuesday, October 31, 2000) (7:30:39)
%%Title: Clipboard
%%DocumentNeededResources: font Times-Italic
%%+ font Helvetica
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 150.625 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
137.187500 146.687500 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		237.875000 def
/Mheight	142.750000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .6 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.481685 0.12375 0.3 0.075 [
[ 0 0 0 0 ]
[ 1 .6 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .6 L
0 .6 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
1 1 1 r
.001 w
[ ] 0 setdash
.02381 .3 m
.06096 .3 L
.10147 .3 L
.13952 .3 L
.17612 .3 L
.21507 .3 L
.25256 .3 L
.29241 .3 L
.33081 .3 L
.36774 .3 L
.40704 .3 L
.44487 .3 L
.48125 .3 L
.51999 .3 L
.55727 .3 L
.59691 .3 L
.63509 .3 L
.67182 .3 L
.7109 .3 L
.74852 .3 L
.78851 .3 L
.82703 .3 L
.8641 .3 L
.90353 .3 L
.93956 .3 L
s
0 g
.02381 .3 m
.93956 .3 L
s
% Start of user PostScript
-3.7 0 3.7 0 MAarrowhead1
% End of user PostScript
.48168 0 m
.48168 .6 L
s
% Start of user PostScript
0 -4. 0 4. MAarrowhead1
% End of user PostScript
gsave
.97619 .30375 -65.75 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
68.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.54356 .585 -66.25 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
69.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.004 w
.02381 .14856 m
.06096 .15466 L
.10147 .16192 L
.13952 .1694 L
.17612 .17732 L
.21507 .1867 L
.25256 .19686 L
.29241 .20917 L
.33081 .22288 L
.36774 .23818 L
.40704 .25713 L
.44487 .27801 L
.48125 .29974 L
.51999 .32286 L
.55727 .34336 L
.59691 .36239 L
.63509 .37808 L
.67182 .39111 L
.7109 .40316 L
.74852 .41336 L
.78851 .42297 L
.82703 .43126 L
.8641 .43849 L
.90353 .44553 L
.93956 .45144 L
s
.001 w
.17231 .1125 m
.19741 .12771 L
.22479 .1443 L
.25049 .15988 L
.27522 .17487 L
.30154 .19082 L
.32687 .20617 L
.3538 .22249 L
.37974 .23821 L
.4047 .25334 L
.43125 .26943 L
.45681 .28493 L
.48139 .29982 L
.50757 .31569 L
.53276 .33095 L
.55954 .34719 L
.58534 .36282 L
.61015 .37786 L
.63656 .39386 L
.66198 .40927 L
.689 .42564 L
.71503 .44142 L
.74007 .4566 L
.76671 .47274 L
.79106 .4875 L
s
gsave
.61781 .4725 -69.625 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(szf) show
76.250 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

%%Trailer
%%EOF

%%EndDocument
 @endspecial -153 2838 a
 /End PSfrag
 -153 2838 a -153 2381 a
 /Hide PSfrag
 -153
2381 a -1022 2450 a Fs(PSfrag)k(replacemen)m(ts)p -1022
2485 869 4 v -153 2489 a
 /Unhide PSfrag
 -153 2489 a -272 2575 a
  {
 -272
2575 a -391 2587 a Fr(y)f Fs(=)c Fr(x)-272 2575 y
  } 0/Place PSfrag
 -272
2575 a -181 2700 a
  {
 -181 2700 a -209 2722 a Fr(x)-181
2700 y
  } 1/Place PSfrag
 -181 2700 a -179 2807 a
  {
 -179 2807 a -205 2819
a Fr(y)-179 2807 y
  } 2/Place PSfrag
 -179 2807 a 1854 2859 4 2951 v 1976
-22 a Ft(Az)36 b(\023)-55 b(area)38 b(k)m(oszin)m(uszhip)s(erb)s
(olikusz-f)s(\177)-59 b(uggv)n(\023)-54 b(en)m(y)p 1976
13 1998 4 v 1976 230 a Fs(A)40 b(c)m(h)57 b(f)s(\177)-51
b(uggv)m(\023)-46 b(en)m(y)40 b(nem,)i(de)e(p)m(\023)-46
b(eld\023)d(aul)41 b(az)e Fn(R)3595 189 y Fi(+)3595 255
y(0)3654 230 y Fs(-ra)g(v)-5 b(al\023)-49 b(o)1976 347
y(lesz)s(})e(uk)-11 b(\023)-38 b(\020t)m(\023)-46 b(ese)35
b(m\023)-49 b(ar)32 b(in)m(v)m(ert\023)-49 b(alhat\023)g(o.)45
b(Legy)m(en)p 2580 439 801 4 v 2580 621 4 183 v 2608
548 a(arc)m(h)g(:=)27 b(\(c)m(h)3097 575 y Fo(j)p Fe(R)3165
545 y Fd(+)3165 596 y(0)3220 548 y Fs(\))3258 506 y Fo(\000)p
Fi(1)p 3377 621 V 2580 624 801 4 v 1976 763 a Fs(Az)33
b(arc)m(h)g(f)s(\177)-51 b(uggv)m(\023)-46 b(en)m(y)33
b(tula)5 b(jdons\023)-49 b(agai:)2124 871 y Fk(D)2194
886 y Fi(arc)n(h)2355 871 y Fm(=)25 b([1)p Fl(;)15 b
Fm(+)p Fk(1)p Fm(\),)92 b Fk(R)2952 886 y Fi(arc)n(h)3113
871 y Fm(=)25 b([0)p Fl(;)15 b Fm(+)p Fk(1)p Fm(\);)2124
998 y(deriv\023)-45 b(alhat\023)g(o)32 b(\(1)p Fl(;)15
b Fm(+)p Fk(1)p Fm(\)-en,)29 b(\023)-43 b(es)2361 1168
y(arc)m(h)2530 1131 y Fo(0)2568 1168 y Fl(x)26 b Fm(=)2891
1106 y(1)p 2752 1147 324 4 v 2752 1165 a Fk(p)p 2827
1165 248 4 v 2827 1241 a Fl(x)2879 1215 y Fi(2)2939 1241
y Fk(\000)20 b Fm(1)3176 1168 y(\()p Fl(x)26 b Fk(2)f
Fm(\(1)p Fl(;)15 b Fm(+)p Fk(1)p Fm(\)\);)2124 1347 y
Fk(")31 b Fm([1)p Fl(;)15 b Fm(+)p Fk(1)p Fm(\)-en;)2124
1474 y(k)m(onk\023)-45 b(av)31 b([1)p Fl(;)15 b Fm(+)p
Fk(1)p Fm(\)-en;)2124 1601 y(lim)2125 1656 y Fi(+)p Fo(1)2281
1601 y Fm(arc)m(h)26 b(=)f(+)p Fk(1)p Fm(;)2124 1763
y(az)31 b(ln)g(f)s(\177)-48 b(uggv)m(\023)-43 b(enn)m(y)m(el)22
b(\023)-35 b(\020gy)31 b(fejezhet})-45 b(o)32 b(ki:)2360
1879 y(arc)m(h)16 b Fl(x)25 b Fm(=)g(ln\()p Fl(x)20 b
Fm(+)2991 1802 y Fk(p)p 3067 1802 V 77 x Fl(x)3119 1853
y Fi(2)3178 1879 y Fk(\000)g Fm(1\))61 b(\()p Fl(x)25
b Fk(2)g Fm([1)p Fl(;)15 b Fm(+)p Fk(1)p Fm(\)\))1976
2859 y
 /PSfrag where{pop(szf)[[0()0.8 0]](x)[[1()0.6 0]](y)[[2()0.6 0]]3
0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 1976 2859 a @beginspecial 137 @llx 3 @lly 375
@urx 147 @ury 1842 @rwi @setspecial
%%BeginDocument: arch.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 137 3 375 147
%%HiResBoundingBox: 137.188 3.9375 374.438 146.25
%%Creator: (Mathematica 4.0 for Microsoft Windows)
%%CreationDate: (Tuesday, October 31, 2000) (8:07:18)
%%Title: Clipboard
%%DocumentNeededResources: font Times-Italic
%%+ font Helvetica
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 150.188 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
137.187500 146.250000 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		237.250000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .6 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0680651 0.221278 0.0545455 0.181818 [
[ 0 0 0 0 ]
[ 1 .6 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .6 L
0 .6 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
1 1 1 r
.001 w
[ ] 0 setdash
.02381 .05455 m
.05972 .05455 L
.09887 .05455 L
.13565 .05455 L
.17102 .05455 L
.20867 .05455 L
.24491 .05455 L
.28342 .05455 L
.32053 .05455 L
.35623 .05455 L
.39421 .05455 L
.43079 .05455 L
.46595 .05455 L
.50339 .05455 L
.53942 .05455 L
.57774 .05455 L
.61464 .05455 L
.65014 .05455 L
.68791 .05455 L
.72428 .05455 L
.76292 .05455 L
.80016 .05455 L
.83599 .05455 L
.87409 .05455 L
.90892 .05455 L
s
0 g
.02381 .05455 m
.90892 .05455 L
s
% Start of user PostScript
-0.2 0 3.8 0 MAarrowhead1
% End of user PostScript
.06807 .01818 m
.06807 .6 L
s
% Start of user PostScript
0 -0.2 0 3. MAarrowhead1
% End of user PostScript
gsave
.97619 .06364 -65.75 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
68.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.13445 .57273 -66.25 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
69.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.004 w
.28934 .05463 m
.29008 .06939 L
.29075 .07505 L
.29226 .08403 L
.29497 .09548 L
.29814 .10566 L
.30114 .11366 L
.31358 .13889 L
.32625 .15816 L
.34001 .17535 L
.36565 .20151 L
.39033 .22225 L
.41407 .23951 L
.43934 .25581 L
.46367 .26995 L
.48953 .28365 L
.51444 .29579 L
.5384 .30665 L
.56389 .31745 L
.58844 .32721 L
.61453 .33699 L
.63966 .34589 L
.66384 .35403 L
.68957 .36228 L
.71434 .36987 L
.73816 .37685 L
.76352 .38399 L
.78793 .3906 L
.81387 .39735 L
.83887 .40362 L
.86291 .40944 L
.88679 .41504 L
s
.001 w
.02381 .01818 m
.04535 .03588 L
.06885 .05519 L
.09091 .07332 L
.11214 .09076 L
.13472 .10932 L
.15647 .12718 L
.17958 .14617 L
.20184 .16447 L
.22326 .18207 L
.24605 .20079 L
.268 .21882 L
.28909 .23616 L
.31156 .25462 L
.33318 .27238 L
.35617 .29127 L
.37831 .30946 L
.39961 .32696 L
.42227 .34559 L
.44409 .36351 L
.46728 .38257 L
.48962 .40092 L
.51112 .41859 L
.53398 .43737 L
.55488 .45455 L
s
.01 w
.28934 .05455 Mdot
gsave
.28934 .01818 -65.7813 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(e) show
68.563 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.31147 .47273 -69.625 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(szf) show
76.250 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

%%Trailer
%%EOF

%%EndDocument
 @endspecial 1976 2859 a
 /End PSfrag
 1976 2859 a 1976 2402 a
 /Hide PSfrag
 1976
2402 a 1107 2471 a Fs(PSfrag)32 b(replacemen)m(ts)p 1107
2507 869 4 v 1976 2511 a
 /Unhide PSfrag
 1976 2511 a 1857 2596 a
  {
 1857
2596 a 1738 2608 a Fr(y)f Fs(=)c Fr(x)1857 2596 y
  } 0/Place PSfrag
 1857
2596 a 1948 2722 a
  {
 1948 2722 a 1920 2743 a Fr(x)1948
2722 y
  } 1/Place PSfrag
 1948 2722 a 1950 2828 a
  {
 1950 2828 a 1924 2840
a Fr(y)1950 2828 y
  } 2/Place PSfrag
 1950 2828 a -253 3018 a Ft(T)n(\023)-54
b(etel.)43 b Fh(Az)36 b Fs(arsh)f Fh(f)q(\177)-51 b(uggv)n(\023)k(eny)
33 b(deriv\023)-50 b(alhat\023)g(o)34 b(az)h Fn(R)p Fh(-en,)c(\023)-47
b(es)1095 3218 y Fs(arsh)1291 3177 y Fo(0)1314 3218 y
Fr(x)28 b Fs(=)1660 3151 y(1)p 1511 3195 347 4 v 1511
3215 a Fp(p)p 1594 3215 264 4 v 82 x Fs(1)22 b(+)g Fr(x)1818
3269 y Fi(2)2063 3218 y Fs(\()p Fr(x)28 b Fp(2)g Fn(R)p
Fs(\))p Fr(:)-253 3524 y Fc(Bizon)m(y)-12 b(\023)-41
b(\020t)o(\023)-52 b(as.)75 b Fm(Miv)m(el)42 b(a)f(sh)55
b(f)s(\177)-48 b(uggv)m(\023)-43 b(en)m(y)42 b(di\013erenci\023)-45
b(alhat\023)g(o)40 b(\023)-43 b(es)42 b(sh)2072 3491
y Fo(0)2096 3524 y Fl(x)g Fm(=)g(c)m(h)16 b Fl(x)42 b
Fk(6)p Fm(=)g(0)f(\()p Fk(8)15 b Fl(x)43 b Fk(2)f Fj(R)p
Fm(\),)h(ez)m(\023)-43 b(ert)43 b(az)f(in)m(v)m(erz)-253
3632 y(f)s(\177)-48 b(uggv)m(\023)-43 b(en)m(y)32 b(deriv\023)-45
b(al\023)g(as\023)g(ara)31 b(v)m(onatk)m(oz\023)-45 b(o)34
b(t)m(\023)-43 b(etel)33 b(alap)5 b(j\023)-45 b(an)30
b(az)i(arsh)45 b(f)s(\177)-48 b(uggv)m(\023)-43 b(en)m(y)31
b(is)g(di\013erenci\023)-45 b(alhat\023)g(o,)30 b(\023)-43
b(es)812 3815 y(arsh)995 3778 y Fo(0)1018 3815 y Fl(x)25
b Fm(=)1393 3754 y(1)p 1201 3794 431 4 v 1201 3878 a(sh)1303
3851 y Fo(0)1326 3878 y Fm(\(arsh)15 b Fl(x)p Fm(\))1666
3815 y(=)1954 3754 y(1)p 1772 3794 409 4 v 1772 3878
a(c)m(h)h(\(arsh)f Fl(x)p Fm(\))2373 3815 y(\()p Fl(x)25
b Fk(2)g Fj(R)p Fm(\))p Fl(:)-253 4035 y Fm(Legy)m(en)39
b Fl(y)h Fm(:=)d(arsh)15 b Fl(x)p Fm(,)40 b(azaz)f(sh)15
b Fl(y)40 b Fm(=)d Fl(x)p Fm(.)63 b(A)37 b(n)m(\023)-43
b(egyzetes)41 b(\177)-45 b(osszef)s(\177)d(ugg)m(\023)-43
b(es)40 b(alap)5 b(j\023)-45 b(an)38 b(c)m(h)16 b Fl(y)40
b Fm(=)2857 3954 y Fb(p)p 2948 3954 346 4 v 81 x Fm(1)21
b(+)f(sh)3206 4008 y Fi(2)3245 4035 y Fl(y)41 b Fm(=)3439
3958 y Fk(p)p 3515 3958 248 4 v 77 x Fm(1)20 b(+)g Fl(x)3723
4008 y Fi(2)-253 4142 y Fm(\()p Fl(y)28 b Fk(2)d Fj(R)p
Fm(\),)31 b(ez)m(\023)-43 b(ert)959 4294 y(arsh)1141
4256 y Fo(0)1164 4294 y Fl(x)26 b Fm(=)1401 4232 y(1)p
1348 4273 152 4 v 1348 4356 a(c)m(h)15 b Fl(y)1534 4294
y Fm(=)1779 4232 y(1)p 1640 4273 324 4 v 1640 4291 a
Fk(p)p 1716 4291 248 4 v 76 x Fm(1)21 b(+)e Fl(x)1924
4341 y Fi(2)2156 4294 y Fm(\()p Fl(x)25 b Fk(2)g Fj(R)p
Fm(\))p Fl(:)p Fa(\004)-253 4626 y Ft(T)n(\023)-54 b(etel.)43
b Fh(Az)36 b Fs(arsh)f Fh(f)q(\177)-51 b(uggv)n(\023)k(eny)33
b(az)i Fs(ln)g Fh(f)q(\177)-51 b(uggv)n(\023)k(ennyel)23
b(\023)-40 b(\020gy)35 b(fejezhet})-50 b(o)34 b(ki:)950
4790 y Fs(arsh)17 b Fr(x)28 b Fs(=)g(ln\()p Fr(x)23 b
Fs(+)1628 4703 y Fp(p)p 1711 4703 264 4 v 87 x Fs(1)e(+)i
Fr(x)1935 4761 y Fi(2)1974 4790 y Fs(\))195 b(\()p Fr(x)28
b Fp(2)h Fn(R)p Fs(\))p Fr(:)-253 5130 y Fc(Bizon)m(y)-12
b(\023)-41 b(\020t)o(\023)-52 b(as.)45 b Fm(Legy)m(en)31
b Fl(x)26 b Fk(2)f Fj(R)j Fm(\023)-43 b(es)32 b Fl(y)c
Fm(:=)e(arsh)15 b Fl(x)p Fm(,)31 b(azaz)h Fl(x)26 b Fm(=)f(sh)15
b Fl(y)28 b Fm(=)2113 5069 y Fl(e)2155 5036 y Fq(y)2217
5069 y Fk(\000)20 b Fl(e)2350 5036 y Fo(\000)p Fq(y)p
2113 5109 334 4 v 2257 5193 a Fm(2)2456 5130 y(.)42 b(Bev)m(ezetv)m(e)
34 b(a)d Fl(t)26 b Fm(:=)g Fl(e)3245 5097 y Fq(y)3317
5130 y Fm(jel\177)-45 b(ol)m(\023)i(est)34 b Fl(t)p Fm(-re)-253
5285 y(a)d Fl(t)-144 5252 y Fi(2)-85 5285 y Fk(\000)20
b Fm(2)p Fl(tx)h Fk(\000)e Fm(1)26 b(=)f(0)31 b(m\023)-45
b(aso)s(dfok)s(\023)d(u)29 b(egy)m(enletet)34 b(k)-5
b(ap)5 b(juk.)40 b(Miv)m(el)32 b Fl(t)25 b(>)g Fm(0,)31
b(ez)m(\023)-43 b(ert)32 b Fl(t)25 b Fm(=)g Fl(e)2636
5252 y Fq(y)2703 5285 y Fm(=)g Fl(x)20 b Fm(+)2962 5208
y Fk(p)p 3038 5208 248 4 v 77 x Fl(x)3090 5259 y Fi(2)3150
5285 y Fm(+)f(1)q(,)30 b(azaz)897 5446 y Fl(y)e Fm(=)d(arsh)15
b Fl(x)25 b Fm(=)g(ln\()p Fl(x)20 b Fm(+)1696 5356 y
Fb(p)p 1787 5356 V 90 x Fl(x)1839 5420 y Fi(2)1899 5446
y Fm(+)g(1)182 b(\()p Fl(x)26 b Fk(2)e Fj(R)p Fm(\))p
Fl(:)p Fa(\004)-153 5716 y Fs(Az)33 b(arc)m(h)g(f)s(\177)-51
b(uggv)m(\023)-46 b(en)m(yre)33 b(v)m(onatk)m(oz\023)-49
b(o)33 b(anal\023)-49 b(og)32 b(\023)-49 b(all)-11 b(\023)-38
b(\020t\023)-49 b(asok)33 b(hasonl\023)-49 b(oan)33 b(igazolhat\023)-49
b(ok.)1736 6018 y Ff(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop -153 -22 a Ft(A)37 b(tangenship)s(erb)s
(olikusz-f)s(\177)-59 b(uggv)n(\023)-54 b(en)m(y)p -153
13 1626 4 v 103 90 1495 4 v 103 359 4 270 v 132 258 a
Fs(th)16 b Fr(x)28 b Fs(:=)465 191 y(sh)17 b Fr(x)p 464
235 167 4 v 464 327 a Fs(c)m(h)g Fr(x)669 258 y Fs(=)782
191 y Fr(e)827 155 y Fq(x)893 191 y Fp(\000)23 b Fr(e)1038
155 y Fo(\000)p Fq(x)p 782 235 355 4 v 783 327 a Fr(e)828
298 y Fq(x)894 327 y Fs(+)f Fr(e)1037 298 y Fo(\000)p
Fq(x)1244 258 y Fs(\()p Fr(x)28 b Fp(2)h Fn(R)p Fs(\))p
1594 359 4 270 v 103 362 1495 4 v -153 501 a(A)j(th)h(f)s(\177)-51
b(uggv)m(\023)-46 b(en)m(y)33 b(tula)5 b(jdons\023)-49
b(agai:)-5 609 y Fk(D)65 624 y Fi(th)161 609 y Fm(=)25
b Fj(R)p Fm(;)-5 736 y(p\023)-45 b(aratlan)31 b([th)15
b Fl(x)25 b Fm(=)g Fk(\000)p Fm(th)15 b(\()p Fk(\000)p
Fl(x)p Fm(\))31 b(\()p Fl(x)25 b Fk(2)g Fj(R)p Fm(\)];)-5
862 y(deriv\023)-45 b(alhat\023)g(o)32 b(az)f Fj(R)p
Fm(-en,)d(\023)-43 b(es)231 1027 y(th)317 991 y Fo(0)356
1027 y Fl(x)25 b Fm(=)613 966 y(1)p 539 1006 195 4 v
539 1097 a(c)m(h)627 1060 y Fi(2)682 1097 y Fl(x)769
1027 y(>)g Fm(0)91 b(\()p Fl(x)26 b Fk(2)f Fj(R)p Fm(\),)231
1179 y(th)317 1142 y Fo(0)356 1179 y Fm(0)g(=)g(1;)-5
1306 y Fk(")31 b Fm(az)g Fj(R)p Fm(-en;)-5 1433 y(k)m(on)m(v)m(ex)h(\()
p Fk(\0001)p Fl(;)15 b Fm(0\)-n,)32 b(k)m(onk\023)-45
b(av)31 b(\(0)p Fl(;)15 b Fm(+)p Fk(1)p Fm(\)-n;)-5 1560
y(lim)-5 1615 y Fo(\0001)152 1560 y Fm(th)25 b(=)g Fk(\000)p
Fm(1,)30 b(lim)531 1615 y Fi(+)p Fo(1)687 1560 y Fm(th)25
b(=)g(1;)-5 1726 y Fk(R)72 1741 y Fi(th)168 1726 y Fm(=)g(\()p
Fk(\000)p Fm(1)p Fl(;)15 b Fm(1\);)83 2410 y
 /PSfrag where{pop(szf)[[0()0.8 0]](x)[[1()0.6 0]](y)[[2()0.6 0]](e)[[3()0.6
0]](me)[[4()0.6 0]]5 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 83 2410
a @beginspecial 135 @llx 3 @lly 376 @urx 99 @ury 1842
@rwi @setspecial
%%BeginDocument: th.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 135 3 376 99
%%HiResBoundingBox: 135.563 3.1875 375.063 98.9375
%%Creator: (Mathematica 4.0 for Microsoft Windows)
%%CreationDate: (Tuesday, October 31, 2000) (8:32:36)
%%Title: Clipboard
%%DocumentNeededResources: font Times-Italic
%%+ font Helvetica
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 102.125 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
135.562500 98.937500 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		239.500000 def
/Mheight	95.750000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .4 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.452642 0.186449 0.165517 0.137931 [
[ 0 0 0 0 ]
[ 1 .4 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .4 L
0 .4 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
1 1 1 r
.001 w
[ ] 0 setdash
.02381 .16552 m
.06087 .16552 L
.10129 .16552 L
.13925 .16552 L
.17576 .16552 L
.21462 .16552 L
.25202 .16552 L
.29178 .16552 L
.33008 .16552 L
.36693 .16552 L
.40614 .16552 L
.44388 .16552 L
.48018 .16552 L
.51883 .16552 L
.55602 .16552 L
.59557 .16552 L
.63366 .16552 L
.67029 .16552 L
.70928 .16552 L
.74682 .16552 L
.78671 .16552 L
.82514 .16552 L
.86213 .16552 L
.90146 .16552 L
.93741 .16552 L
s
0 g
.02381 .16552 m
.93741 .16552 L
s
% Start of user PostScript
-2.3 0 2.6 0 MAarrowhead1
% End of user PostScript
.45264 0 m
.45264 .38621 L
s
% Start of user PostScript
0 -1.2 0 1.6 MAarrowhead1
% End of user PostScript
gsave
.97619 .17241 -65.75 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
68.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.37806 .37517 -66.25 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
69.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.004 w
.02381 .03033 m
.04112 .03088 L
.05936 .03159 L
.07943 .03253 L
.09813 .03361 L
.13314 .03626 L
.15193 .03813 L
.16902 .04015 L
.20576 .04582 L
.24111 .05344 L
.27871 .06456 L
.31492 .07885 L
.34973 .09628 L
.3868 .11874 L
.42248 .14339 L
.46041 .17126 L
.49695 .19769 L
.53209 .22097 L
.56949 .24217 L
.60549 .25861 L
.64375 .27199 L
.68062 .28144 L
.71609 .28802 L
.73408 .2906 L
.75382 .29296 L
.79015 .29626 L
.8081 .29749 L
.82735 .29858 L
.84557 .29943 L
.8654 .30019 L
.90012 .3012 L
s
.001 w
.2289 0 m
.24706 .01343 L
.26685 .02807 L
.28545 .04183 L
.30333 .05506 L
.32236 .06914 L
.34068 .08269 L
.36015 .0971 L
.37892 .11098 L
.39696 .12433 L
.41617 .13853 L
.43465 .15221 L
.45243 .16536 L
.47136 .17936 L
.48958 .19284 L
.50895 .20717 L
.5276 .22097 L
.54555 .23425 L
.56465 .24838 L
.58303 .26198 L
.60257 .27643 L
.62139 .29036 L
.63951 .30376 L
.65877 .31801 L
.67638 .33103 L
s
[ .01 .02 ] 0 setdash
.02381 .02759 m
.90012 .02759 L
s
.02381 .30345 m
.90012 .30345 L
s
gsave
.50858 .34483 -65.7813 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(e) show
68.563 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.67638 .34483 -69.625 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(szf) show
76.250 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.50858 .06897 -70.125 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(me) show
77.250 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

%%Trailer
%%EOF

%%EndDocument
 @endspecial 83 2410 a
 /End PSfrag
 83 2410 a 83 1720 a
 /Hide PSfrag
 83 1720 a
-786 1789 a Fs(PSfrag)32 b(replacemen)m(ts)p -786 1824
869 4 v 83 1828 a
 /Unhide PSfrag
 83 1828 a -36 1913 a
  {
 -36 1913 a -155
1925 a Fr(y)f Fs(=)c Fr(x)-36 1913 y
  } 0/Place PSfrag
 -36 1913 a 55 2039
a
  {
 55 2039 a 27 2061 a Fr(x)55 2039 y
  } 1/Place PSfrag
 55 2039 a 57 2146
a
  {
 57 2146 a 31 2158 a Fr(y)57 2146 y
  } 2/Place PSfrag
 57 2146 a 59 2261
a
  {
 59 2261 a 35 2293 a Fs(1)59 2261 y
  } 3/Place PSfrag
 59 2261 a 20 2373
a
  {
 20 2373 a -43 2401 a Fp(\000)p Fs(1)20 2373 y
  } 4/Place PSfrag
 20 2373
a 1854 2517 4 2609 v 1976 -22 a Ft(A)37 b(k)m(otangenship)s(erb)s
(olikusz-f)s(\177)-59 b(uggv)n(\023)-54 b(en)m(y)p 1976
13 1738 4 v 2149 90 1781 4 v 2149 360 4 271 v 2177 258
a Fs(cth)17 b Fr(x)28 b Fs(:=)2553 191 y(c)m(h)17 b Fr(x)p
2553 235 167 4 v 2554 327 a Fs(sh)g Fr(x)2757 258 y Fs(=)2872
191 y Fr(e)2917 155 y Fq(x)2983 191 y Fs(+)22 b Fr(e)3126
155 y Fo(\000)p Fq(x)p 2871 235 355 4 v 2871 327 a Fr(e)2916
298 y Fq(x)2982 327 y Fp(\000)h Fr(e)3127 298 y Fo(\000)p
Fq(x)3333 258 y Fs(\()p Fr(x)28 b Fp(2)g Fn(R)22 b Fp(n)g(f)p
Fs(0)p Fp(g)p Fs(\))p 3926 360 4 271 v 2149 363 1781
4 v 1976 502 a(A)33 b(cth)g(f)s(\177)-51 b(uggv)m(\023)-46
b(en)m(y)32 b(tula)5 b(jdons\023)-49 b(agai:)2124 609
y Fk(D)2194 624 y Fi(cth)2322 609 y Fm(=)25 b Fj(R)20
b Fk(n)g(f)p Fm(0)p Fk(g)p Fm(;)2124 736 y(p\023)-45
b(aratlan)31 b(;)2124 863 y(deriv\023)-45 b(alhat\023)g(o)32
b(az)f Fj(R)20 b Fk(n)g(f)p Fm(0)p Fk(g)p Fm(-n,)30 b(\023)-43
b(es)2361 1014 y(cth)2487 977 y Fo(0)2525 1014 y Fl(x)25
b Fm(=)g Fk(\000)2853 953 y Fm(1)p 2779 993 193 4 v 2779
1084 a(sh)2865 1047 y Fi(2)2920 1084 y Fl(x)3073 1014
y Fm(\()p Fl(x)g Fk(2)g Fj(R)20 b Fk(n)h(f)p Fm(0)p Fk(g)p
Fm(\);)2124 1179 y Fk(#)31 b Fm(\()p Fk(\0001)p Fl(;)15
b Fm(0\)-n,)32 b Fk(#)e Fm(\(0)p Fl(;)15 b Fm(+)p Fk(1)p
Fm(\)-n;)2124 1306 y(k)m(onk\023)-45 b(av)31 b(\()p Fk(\0001)p
Fl(;)15 b Fm(0\)-n,)32 b(k)m(on)m(v)m(ex)g(\(0)p Fl(;)15
b Fm(+)p Fk(1)p Fm(\)-n;)2124 1433 y(lim)2125 1488 y
Fo(\0001)2281 1433 y Fm(cth)25 b(=)g Fk(\000)p Fm(1,)31
b(lim)2700 1491 y Fi(0)p Fo(\000)p Fi(0)2857 1433 y Fm(cth)25
b(=)g Fk(\0001)p Fm(,)2124 1597 y(lim)2125 1652 y Fi(+)p
Fo(1)2281 1597 y Fm(cth)g(=)g(1,)31 b(lim)2630 1655 y
Fi(0+0)2786 1597 y Fm(cth)25 b(=)g(+)p Fk(1)p Fm(,)2124
1767 y Fk(R)2201 1782 y Fi(cth)2329 1767 y Fm(=)g(\()p
Fk(\0001)p Fl(;)15 b Fk(\000)p Fm(1\))21 b Fk([)f Fm(\(1)p
Fl(;)15 b Fm(+)p Fk(1)p Fm(\);)2507 2497 y
 /PSfrag where{pop(szf)[[0()0.4 0]](e)[[1()0.6 0]](x)[[2()0.6 0]](y)[[3()0.6
0]]4 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 2507 2497
a @beginspecial 137 @llx 3 @lly 377 @urx 152 @ury 1275
@rwi @setspecial
%%BeginDocument: cth.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 137 3 377 152
%%HiResBoundingBox: 137.188 3.1875 376.688 151.188
%%Creator: (Mathematica 5.0 for Microsoft Windows)
%%CreationDate: (Monday, December 1, 2003) (15:46:15)
%%Title: Clipboard
%%DocumentNeededResources: font Times-Italic
%%+ font Helvetica
%%+ font Times-Italic-Italic
%%+ font Courier
%%DocumentSuppliedResources: font Mathematica1
%%DocumentNeededFonts: Times-Italic
%%+ Helvetica
%%+ Times-Italic-Italic
%%+ Courier
%%DocumentSuppliedFonts: Mathematica1
%%DocumentFonts: Times-Italic
%%+ Helvetica
%%+ Times-Italic-Italic
%%+ Courier
%%+ Mathematica1
%%EndComments
0 154.375 translate 1 -1 scale
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def

/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/WindowsANSIEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
	/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/Zcaron/.notdef
	/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
	/tilde/trademark/scaron/guilsinglright/oe/.notdef/zcaron/Ydieresis
	/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
	/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
	/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/dotaccent
	/ogonek/onesuperior/ring/guillemotright/onequarter/onehalf/threequarters/questiondown
	/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
	/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
	/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
	/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
	/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
	/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
	/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
	/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding WindowsANSIEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def

gsave
0.000 0.000 0.000 setrgbcolor
1.000 setlinewidth
gsave
newpath
 137.188 151.188 moveto
 376.688 151.188 lineto
 376.688 3.188 lineto
 137.188 3.188 lineto
 137.188 151.188 lineto
closepath
clip newpath
gsave
newpath
 137.500 150.188 moveto
 375.313 150.188 lineto
 375.313 3.188 lineto
 137.500 3.188 lineto
 137.500 150.188 lineto
closepath
clip newpath
grestore
gsave
newpath
 137.500 150.188 moveto
 375.313 150.188 lineto
 375.313 3.188 lineto
 137.500 3.188 lineto
 137.500 150.188 lineto
closepath
clip newpath
grestore
gsave
newpath
 137.500 150.188 moveto
 375.313 150.188 lineto
 375.313 3.188 lineto
 137.500 3.188 lineto
 137.500 150.188 lineto
closepath
clip newpath
grestore
gsave
newpath
 137.500 150.188 moveto
 375.313 150.188 lineto
 375.313 3.188 lineto
 137.500 3.188 lineto
 137.500 150.188 lineto
closepath
clip newpath
grestore
gsave
newpath
 137.500 150.188 moveto
 375.313 150.188 lineto
 375.313 3.188 lineto
 137.500 3.188 lineto
 137.500 150.188 lineto
closepath
clip newpath
grestore
gsave
newpath
 137.500 150.188 moveto
 375.313 150.188 lineto
 375.313 3.188 lineto
 137.500 3.188 lineto
 137.500 150.188 lineto
closepath
clip newpath
grestore
gsave
newpath
 137.500 150.188 moveto
 375.313 150.188 lineto
 375.313 3.188 lineto
 137.500 3.188 lineto
 137.500 150.188 lineto
closepath
clip newpath
grestore
gsave
newpath
 137.500 150.188 moveto
 375.313 150.188 lineto
 375.313 3.188 lineto
 137.500 3.188 lineto
 137.500 150.188 lineto
closepath
clip newpath
grestore
gsave
newpath
 137.500 150.188 moveto
 375.313 150.188 lineto
 375.313 3.188 lineto
 137.500 3.188 lineto
 137.500 150.188 lineto
closepath
clip newpath
grestore
gsave
newpath
 137.500 150.188 moveto
 375.313 150.188 lineto
 375.313 3.188 lineto
 137.500 3.188 lineto
 137.500 150.188 lineto
closepath
clip newpath
%%BeginResource: font Mathematica1
%%BeginFont: Mathematica1
%!PS-AdobeFont-1.0: Mathematica1 001.000
%%CreationDate: 8/26/01 at 4:07 PM
%%VMusage: 1024 31527  
% Mathematica typeface design by Andre Kuzniarek, with Gregg Snyder and Stephen Wolfram. Copyright \(c\) 1996-2001 Wolfram Research, Inc. [http://www.wolfram.com]. All rights reserved. [Font version 2.00]
% ADL: 800 200 0
%%EndComments
FontDirectory/Mathematica1 known{/Mathematica1 findfont dup/UniqueID known{dup
/UniqueID get 5095641 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
20 dict begin
/FontInfo 16 dict dup begin
  /version (001.000) readonly def
  /FullName (Mathematica1) readonly def
  /FamilyName (Mathematica1) readonly def
  /Weight (Medium) readonly def
  /ItalicAngle 0 def
  /isFixedPitch false def
  /UnderlinePosition -133 def
  /UnderlineThickness 20 def
  /Notice (Mathematica typeface design by Andre Kuzniarek, with Gregg Snyder and Stephen Wolfram. Copyright \(c\) 1996-2001 Wolfram Research, Inc. [http://www.wolfram.com]. All rights reserved. [Font version 2.00]) readonly def
  /em 1000 def
  /ascent 800 def
  /descent 200 def
end readonly def
/FontName /Mathematica1 def
/Encoding 256 array
dup 0/NUL put
dup 1/Eth put
dup 2/eth put
dup 3/Lslash put
dup 4/lslash put
dup 5/Scaron put
dup 6/scaron put
dup 7/Yacute put
dup 8/yacute put
dup 9/HT put
dup 10/LF put
dup 11/Thorn put
dup 12/thorn put
dup 13/CR put
dup 14/Zcaron put
dup 15/zcaron put
dup 16/DLE put
dup 17/DC1 put
dup 18/DC2 put
dup 19/DC3 put
dup 20/DC4 put
dup 21/onehalf put
dup 22/onequarter put
dup 23/onesuperior put
dup 24/threequarters put
dup 25/threesuperior put
dup 26/twosuperior put
dup 27/brokenbar put
dup 28/minus put
dup 29/multiply put
dup 30/RS put
dup 31/US put
dup 32/Space put
dup 33/Exclamation put
dup 34/ForAll put
dup 35/NumberSign put
dup 36/Exists put
dup 37/Percent put
dup 38/Ampersand put
dup 39/SmallMember put
dup 40/LParen put
dup 41/RParen put
dup 42/Star put
dup 43/Plus put
dup 44/Comma put
dup 45/Minus put
dup 46/Period put
dup 47/Slash put
dup 48/Zero put
dup 49/One put
dup 50/Two put
dup 51/Three put
dup 52/Four put
dup 53/Five put
dup 54/Six put
dup 55/Seven put
dup 56/Eight put
dup 57/Nine put
dup 58/Colon put
dup 59/SemiColon put
dup 60/Less put
dup 61/Equal put
dup 62/Greater put
dup 63/Question put
dup 64/TildeFullEqual put
dup 65/CapAlpha put
dup 66/CapBeta put
dup 67/CapChi put
dup 68/CapDelta put
dup 69/CapEpsilon put
dup 70/CapPhi put
dup 71/CapGamma put
dup 72/CapEta put
dup 73/CapIota put
dup 74/CurlyTheta put
dup 75/CapKappa put
dup 76/CapLambda put
dup 77/CapMu put
dup 78/CapNu put
dup 79/CapOmicron put
dup 80/CapPi put
dup 81/CapTheta put
dup 82/CapRho put
dup 83/CapSigma put
dup 84/CapTau put
dup 85/CapUpsilon put
dup 86/FinalSigma put
dup 87/CapOmega put
dup 88/CapXi put
dup 89/CapPsi put
dup 90/CapZeta put
dup 91/LBracket put
dup 92/Therefore put
dup 93/RBracket put
dup 94/Perpendicular put
dup 95/Underbar put
dup 96/Hat put
dup 97/Alpha put
dup 98/Beta put
dup 99/Chi put
dup 100/Delta put
dup 101/Epsilon put
dup 102/Phi put
dup 103/Gamma put
dup 104/Eta put
dup 105/Iota put
dup 106/CurlyPhi put
dup 107/Kappa put
dup 108/Lambda put
dup 109/Mu put
dup 110/Nu put
dup 111/Omicron put
dup 112/Pi put
dup 113/Theta put
dup 114/Rho put
dup 115/Sigma put
dup 116/Tau put
dup 117/Upsilon put
dup 118/CurlyPi put
dup 119/Omega put
dup 120/Xi put
dup 121/Psi put
dup 122/Zeta put
dup 123/LBrace put
dup 124/VertBar put
dup 125/RBrace put
dup 126/Tilde put
dup 127/DEL put
dup 128/FractionBarExt put
dup 129/EscapeChar put
dup 130/SelectPlaceholder put
dup 131/Placeholder put
dup 132/Continuation put
dup 133/Skeleton put
dup 134/LSkeleton put
dup 135/RSkeleton put
dup 136/Spacer put
dup 137/Cross put
dup 138/DblEqual put
dup 139/Grave put
dup 140/Acute put
dup 141/DoubleAcute put
dup 142/OverTilde put
dup 143/OverBar put
dup 144/DblUpDownArrow put
dup 145/DblUpExtens1 put
dup 146/DblLongLArrow put
dup 147/DblExtens put
dup 148/DblLongRArrow put
dup 149/DblLRArrow2 put
dup 150/DblLongLRArrow put
dup 151/UpDownArrow put
dup 152/LongLArrow put
dup 153/LongRArrow put
dup 154/LongLRArrow put
dup 155/ColonEqual put
dup 156/Diamond2 put
dup 157/NotSquareSprsetEqual put
dup 158/AtSign put
dup 159/Solidmedsqr put
dup 160/OverDot put
dup 161/CurlyCapUpsilon put
dup 162/Prime put
dup 163/LessEqual put
dup 164/Fraction put
dup 165/Infinity put
dup 166/RuleDelayed put
dup 167/ClubSuit put
dup 168/DiamondSuit put
dup 169/HeartSuit put
dup 170/SpadeSuit put
dup 171/LRArrow put
dup 172/LArrow put
dup 173/UpArrow put
dup 174/RArrow put
dup 175/DownArrow put
dup 176/Degree put
dup 177/PlusMinus put
dup 178/DoublePrime put
dup 179/GreaterEqual put
dup 180/Multiply put
dup 181/Proportional put
dup 182/PartialDiff put
dup 183/Bullet put
dup 184/Divide put
dup 185/NotEqual put
dup 186/Equivalence put
dup 187/Approxequal put
dup 188/Ellipsis put
dup 189/ArrowVertEx put
dup 190/ArrowHorizEx put
dup 191/CarriageReturn put
dup 192/Aleph put
dup 193/IFraktur put
dup 194/RFraktur put
dup 195/Weierstrass put
dup 196/CircleMultiply put
dup 197/CirclePlus put
dup 198/EmptySet put
dup 199/Union put
dup 200/Intersection put
dup 201/ProperSuperset put
dup 202/NbSpace put
dup 203/NotSubset put
dup 204/ProperSubset put
dup 205/ReflexSubset put
dup 206/Element put
dup 207/NotElement put
dup 208/Angle put
dup 209/Gradient put
dup 210/RegTM put
dup 211/Copyright put
dup 212/TM put
dup 213/Product put
dup 214/Radical put
dup 215/DotMath put
dup 216/LogicalNot put
dup 217/Wedge put
dup 218/Vee put
dup 219/DblLRArrow put
dup 220/DblLArrow put
dup 221/DblUpArrow put
dup 222/DblRArrow put
dup 223/DblDownArrow put
dup 224/Lozenge put
dup 225/LAngle put
dup 226/Diffd put
dup 227/Expe put
dup 228/Imagi put
dup 229/Sum put
dup 230/LParenTop put
dup 231/LParenEx put
dup 232/LParenBot put
dup 233/LBracketTop put
dup 234/LBracketEx put
dup 235/LBracketBot put
dup 236/LBraceTop put
dup 237/LBraceMid put
dup 238/LBraceBot put
dup 239/BraceEx put
dup 240/Slot put
dup 241/RAngle put
dup 242/Intergral put
dup 243/IntegralTop put
dup 244/IntegralEx put
dup 245/IntegralBot put
dup 246/RParenTop put
dup 247/RParenEx put
dup 248/RParenBot put
dup 249/RBracketTop put
dup 250/RBracketEx put
dup 251/RBracketBot put
dup 252/RBraceTop put
dup 253/RBraceMid put
dup 254/RBraceBot put
dup 255/Wolf put
 readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/UniqueID 5095641 def
/FontBBox{-120 -220 1544 923}readonly def
currentdict end
currentfile eexec
D8061D93A8246509E76A3EC656E953B7C22E43117F5A3BC2421790057C314DAE3EFBFF49F45DA34B
424A961BE670A194E7E4BF0FF295DEE23134A14A7C08B6602621D885EE631B1D8D3003CF2093E039
4D77FCEFCA8BA8965D1783DCAD9EFE6C7E420CF7B898933309A89F84721ADE7F3AE4443C5EAE8155
759A9EB6F738F7BA81C192EE45DAD00F398FFD6904111BBD91BFEE328004F2A18BCCD98DCDB2CE23
961B00F204E50EA022D00CE2B68E653626D4BB5AFA334A0D657307416FAF7AA8C43ED4DC541F1B7B
B7500B3F423D9D369F8192FD00A59FD5E6ABC70F788FB70976CC1907DDC309F4B690AA2D2BF12CAE
C493958CC0E76CE9EB5FF8BD1F1650F659E5C123EE455B7D77C39952C212AF319BF19A91E36DE52F
0EF84B602704BD6C7C94E1B0E067210DB919F6231755A2CC5D5FE129279B43A2E2CCD27F56F00B05
C8AC10AB07FABBEFB3509088301FE78CAF8B440C5BA2FFE06BBFCD066046618F3B6AA2E4B17B296E
1F3F1560E19CBAD54E16E4B7A65622E468F6BDF97C50277E355D1DD8843D0A449A147FFBA071BA99
CF70D7576DC18B96FEAF8070BF25F3A3141F873241EF4A07F332306B56F1D5909A4F233A9DB3A08E
E43DF38DD6DB2D6DAB908967A907303EE1FA04F048FA6EBC531738C170B8B0F095FF3B05D14C2BDC
272F7EDA8926A77D9CDA49A90AE1387A51A24ECDB2E4E287B0F95A83AD2EC0310F9B6F396AC10479
835035FD5D4C84D91917FE8A8755C976504AB1A830ED516B5F325EA4ADFD115900D23039A2BC84EE
D21CC21E2BBE29A5E0CF28BE047CBD515DF7785F37DDD4474042B102A1F28193BB8567FF6FDEF811
25CE9A504BE5011C0010DCEBCF321824C9DA249D8DB11F79298F7B674CEDB6F33C111F8B0115E407
99E0FE1B6CE9F6B2A3EED1827A9CEB453D643FE5CE2540DCBCAF7B2EA2C8F0AE9434D4BAAEAB3488
FEC7541D57179BDEAA0BB6145EA783E73E70E0AA71A4FA58E81EB510E9FD2CF4ACFBF28E48CA313C
CF5ED2BE032B7C9A07ABBEC9CCD8D5AC9F775D36BECC252B9FE01B6AA79A70E22478904DADDA08BB
7CA3B66F3A83AEEBA37406127353790348AE5FBD144ABD8E1B32D1BCC70E2BC22A63E854D38317E6
BB97C52A6C9B0C6AB5C336CE2D417A714825DCD237F7486C33925A995CD8AD3B359176C4CA775FE2
2C6F8A7C7343F31F39D1B9A5A744973BF65D655DDB59E3495B28DBE2A877EBB32A22A4AB8EB13C67
02B239F6932E2DC8B4B88915923B1C2AFF2F876A31F765B91747D5A858BD632B0BE4F135AC484016
AE1BC01E44B6653A58EE1380B6DF24AEB73220A36FA8FDE9A152C16E049D2F247A9AA71CD2DF3D9E
653054FAF518BBC1EEB43200DB0BACA93FEA9445FA5F32A99926C4F1F2370B2E3E03CEFBEECE5D5C
DE299FE1641A9CE0C90E42E7C465DF8C19C153EA76C11791F8E112853E708CD0F6EFC22E44808A44
3686442645D643E7118D128BF34188FD313E53B8E951E605E96825738C4DC893D942C145C3E1153F
CDED16D1EE10374626F45781461FFC94C77D431BCF167FD29136A0B369631E139A59B06AC5281B3D
52470B38237B469C0E49CBE74C82A940F8AAD10E05C5DD2A8F3218C4BE40DCED0982770869190845
D2E8BA2A1A2F9CF16DDDE418B6E2013C3258FBE9AFCDACCD57B01C4FEF3526C06FD5BAB6F195C557
23A96FA3E5CDB2ADC9AA8989DF78F163F19E26F3B9EAF60D44B745FCA49B09D9CE5CC16D1E2C78C5
A28F14D3374956E9721C0542A01A731A3D5A771C7B51FB72960BB22C99BC8F216530AA86C1A0346B
3D986EF1DF68BCC46EC4C809C6D54FB9C50F225ABA2C96965F4DE77E2C5D131318231C6773F0976C
DBD016B803C38B8923822BDF160FB87BBE744D0953EDEBDE87394282B9950C89F58824D731355E8F
A3CE364F742E3337A983BD1219CE8787CFA6925B560001F6F78343647821D408B60965966C16C454
394D33268483F51984614FD9964CCE5F1AA4AB12144874A72D3FE97F4416ABE4213B4EDCA9ECF73A
937B562F978E059705E561A6D0C8B89B59B4CAB2248BFC4A6D3D98F89FF38A4D1C3E5A4570E2E2E8
D328772E11DEA2116C260B13328045139A819F5489A2C302F311898230CD26DD03E6CE3BE75EDB86
0D982FBC8E1E24D1F83E8CA64174495B2F32BDF0505FC96E9C65FDB0EB0C4ADA410F0A1C4BB4D551
93B1AA5EA1F988882A56413F77CF24FF6516CD5095077BA566116797895FD7EA616D10510957025A
1DA05064FD9176303A248C94CE2A9875C03C7D8755A1A8010B712B64BAD73BEA4195D51A328F076D
12C0E52E87D98A5269D157D544CD7B4E1CAAEA6BDD59F08D0C5FBB84A6B099BECF8BEB721A874BAA
1BD1F8CDB5ED5CD3B49A763EAA36D33837667A6643B83537EF5515DBF7659E28692E0ACEB48FD051
45534A443092E0A510B05B5B51B402CB3372A4E8BAF98A7FEB6D8BEF6B364A5EA0F3FDF301A44EE2
3485D4493E7B4C33E0E352202931188D156983C40F7A4B615B6F5281B33FB32A2E6A0F7AE84BEA2C
5C3635D7DA17371D608847EB402270B83293EC09E4B1D85996C1CC81196BE590EC9EF0F258364746
BC4763976FDDB3707D37AFCBDC0F4EB2B1502F137EBBB1541B992EAD43B5D64CCDF505FF2F127115
4857C69B689A11760979F6D2BB032CF0DCCBB33D2B6F6D6BB29A1D0E371AA5869A408225C0AFF523
CEFB08A7D3D17DF9064010363196CC569C436E720B1B4573CDAE1CD93A10FD2D4ACB14E47046B5B7
66B75B40BA97027FEC4218980B002FAB60A9F1F5A37861B9A63F696732F8127B2C6F036BF32311B8
FF08A489E88218092D57A99C8981EF8CBBD09DF49CC836B9C1968692D1FB551F47619F020289F1A3
D3898A96DC1C7D39A21B49C2D0DD9508CB8A8BD6A5EB40FF86F555FA32017B67AEC07BECD659E8C4
8DD1D43E8D1EE08A117479015F78BF20D3318224572D9C90884856E4307A8AFFC83EDD317B008484
3BBE8EB2A4E2D70077A639FE3637C3DCF87C67F1BE62E63CC67BCEF8EBD07E030524A53DD440F2A1
3A019B7AA89E155AAD1497974258A01DA45DE1D94BB9F925290FE9BDDA29EA3F2BF1E64DF7EBCFC4
23AB2C7310D9D87A5CA673EE95189135E1B134B431B231428FF2BF64C8F155CBDDAD17BCB524CF7E
ABD66B75705BFFB1DDB27B72D681D7AA19FAD0FF23EEF028B606DD20D58588AACB299A3CF38372A8
E7494A65227C1E4A231AC7843962B8A4A7BDD90F3F8B83277E696F3514139BB8DD207641B62286F0
0E32C7FAD7029DC0E092564C7CE1BC5240FCBFB00A06F075D9536F0326CFFBA958BA7A1A11AA047B
B14E7DE16761BB0FEF19ABE85154359807C339961B9695CDED59E489CA4D9BB75D86D9EDDF0502BC
0B4EC36B1D71FCD4E03881ECEC703E5DA23B3F5DB98CB8DAED81D5BA20B844A92A4B92FE5B082952
6837237C7F994786878404BE744D0953C676E52CB05FCE193E8827F977B31929E36E320E770A6F1E
972B84AFA21E01719759DF0132C5CF9692BAA487E86E8453C09FF97642600D1024ED5D6C7D5B387D
CB5E6147D20B4A14D7D485B5747D765C5A1CA40B9416DC4EF5DC08F43F0706B27B1C90E901556E1C
EFF304EA8DF8D727E4B7E7CEAD14E4FC7E76002DBC37B92BD0E58AF29DA7DA91E6F99DADF1A9CBDD
04648E2F5B811F2AF0729646B17D32D7EF25AD47E267EE53A61A7CD744C9ABFDB1EDB71C0705412B
15769188CA1601AF0395796FAC0E2139EF90FAA65D27AAEEEE319D2831A56CE82203523097D0574D
22742D17E519D95560B8445B5B29033BF3454B94F20C23EBE8B90DDF26D903F1D66CB39D3A64579D
39D136C537CCD9FF2D6ACE5F79DE696C7330C0C4EA179D7911B7B67858D86CEE0833AB1E105B1993
2A9BD572C41E78FB4A2A2421514DC2066E2F56101A9027F4BBA5D48E5DA9218E81CE46B95B50380F
560C67A5D547A8D32610AECECBB6F5A09DF44994F6DAC64F7399C07E182033BC1B9A32B69C41FDFC
7E1DCDDF273F045F154D727AFEE3CDB816CF2ECDB6733C579276353DD59C9D2AFA455935C1FCD0AB
7D57F9DD79FBCC7A45E5E5A501FF17EE1C5FF0823C6FDE29C60F85F6786940D8E3540E891B5BF7F5
D36C57AC3AD359BFAB12B215E7FC94B933386C250E6B236506FA3D151ABAD893A817772071C09144
6E5FB23A17591A4CECAA46DD46E3C41B4578F21D8894A59B72FAF6F88EE6E514FBD2FE69447D2B59
9A6AA8BC5C1FD5C25E50BFB5CE5DBF5AD5771BC42FCC3706B6E9F7E4FAAFF2E63ED1684C5A4C136D
609D03E31EBCF31E864AAA74D8DDBCA52F85CCF14AB739CC55617EFC964D6CC6988AA45245B19CE2
B63CB865DF1F1DA4A200A4A043C5CB706CD303EB31C32866ED92077AB11BF136D158840EAC67E7A1
1BC2BFDCD5894AF735D677E1AC98BF3F19F69AF75355F168632037F6EDEBF61BE5854057AD05972C
7DA8D37AE65D35738547A9D835C6351D8D732F8C0DC49D7605F00A6A6045559D3A0B0CC21DFDD75E
2FCF25522001741EBBEB5CC97DDBD9DDCE490FE3CB186C101940DD02CACB685ECCB8C1DEDCDD4156
F5F9F6B3CA53EC6E7E8A2F8159451CD5479D91BFBF91C6B32A1E0053017369330EAD2DDE323BCAC5
EEC91A595473F447355B1BDFB873D0B538BF54AFB8EAADE5309E1B74283218F59272E59619D66405
E74B5A9D6323CB76AF00FB27FD984F740601248C7206F59EF7FF4E95AF95327D12C47D2D34CBFF33
29F28236831D7F0FD9D633B940D8282E1F1D5D95616CD839C6B41A7195A22B7A320864E48943CE99
C68E3591A97689986A6536C3A1C37DA9838FF71A8C1A03094537C95D3585DF5AD9292874D8D05720
030133B02E2754DA24712B52D6D8871422C709532B09D147EC8ACD861FA5392A82A6C2981347E327
1986017B8315822B5FCB19A1B31BF6909E0D6490EC823434BFCE031045D20FFC675A73EBD7A39A50
44C3B40906186CCF6E8502CD7915F053BC8CF6BE9FDD9A0330AE943D5C9A11D60D43F5BBE8A045EF
CDB7D19C0053F4F082303442C35C432E0DA4408C5917D24A6658DB807BD754AF140CE84A34F79851
9323060D60F4EAC0E82D3E17042BB6729C69A8B8774904C6214C2EB016C528DC1428DB41075AA6C5
4E4D849901838C6B6DADF7B67CD0CBC6EE1B415B44654D89397274D4A6AD2BA69DD81567F5B802F2
684DD3516ECA0F6D66046EDA0B2B38F420A238D67D98676925ECBE6711D64DAE5DBE8AC5473A2EE9
97AE65F0715A2E5DB2C75F20D9939EF58692EDA3AEA81F25AEC888327CFA6CC13D496714E63A1A87
11FC50250D6D23FC7A8017038281F659A685ED7F1BB1ADBF8833ABC6DBEC0D96D08334E58C67E0F9
0046132F0D4FBCB9CDF52EE74561498B42701AB826A6DD77F46C14753748E1EC66F4BD3583FCB4F1
DC91050CF18B0D51BC366549261282779FC9694A7B987973C0D59F65CFF3CDB88D23952E46F5EEC1
BDA0DC354188C11B0FA191F5C11A45BB9093701B33B8E7AC1A8621793D5326E92CDD3A76FB9B67D6
860567B9CEE7B9F9056C6E9971F642DC0BCC1D2882B5BDF1B1CDCAA3FC61775A74E70CDFC128DE0F
9606091BB8E53905108EE77A1D3C506550FCFCAE454B020379BE3A7D6C62D162697AF1383F7BC8F2
34FD616324C1E56E3E440277862CAB2C02395D9937816117F71A6828344182E6B5AF2799E29A6611
9C0543E135300E44746EF2EBA57C4EABB1A15D8AC6D037F4BA2BE1EB4D1A7496F9711FC67E56D4D0
FDA4D810B5383A72ACA15872DE9F3A9890E33759CE4DA493691BCA47A92E42D950DF588C3574D6FC
72B5AF7DDE915E3F5925B3E97DEBE6A4208CE7337754045607679296C4EEEA3A3EF1915E85EB1A32
F1BBADB2904B09806631E20BBF5E57AF11BC784C75BF049B4BC7E479F1D4AE7754CBED7B11ED80A5
2DD0006FAE5CC23A7C234CF628B42F4104A490E7D59E8B1F2A1395D37641C478FF8CB9FB602B29FD
3E48D6087CAEE48B523887F27F69DB32BF80B760B030A6766F8F9B19DE70704DAF81D3DED2BF663D
89B5BD8AF253BB8FA59DF84A52FDED83D2737532B6D66AFB9EF0446ACD44BFAB797AB9FDB47F2E18
8F0A55887853772EBFD029B5FA0AFBAF10A88D464BD6F634C5839B230D583E36671A51DDB1EBF471
8ABB84D057729D514751B0EEF4F756B91DEDAD7D9AD529B3886008F1F32645F3A205F304B2A8D808
D37A38E389B8587E8D3654DC374568FCEBBA160395BE1D132B1ACB434164525FBF250A5AA30F3520
F0F2A75F9D1B7C6EAB0223C209A120D894D6ECA336B57B7F2AB0E2A94E6616D7539010C700311966
7B4A9EB3A812FEF4D100AB4C036401D21DDF8AEB393074638D154418D3A7AE51CD1F0C2D5CF4B475
3B582D5071F91E6D3AFBFB09EAABBEAB2A60A5D388D16232939B5483CF7D5C1C9D05DDC85B266F39
6F61E179AB9FAB644040014293EB53F2B50E8751F9D92D1DAE8DC89594905A39357C0098265FBD24
E407F9A22027E36D5608FAF15BD9E354228E3BA943EC30301ABB2CB105F3B6D57C001EBF8328A8CA
318A7B1B999AE8BF9E2FD530B669640116149B622EB3C0A8CCDE62449DE9D39E0F5E5E01CBBF4F5E
52B33A2BD60B52FA4A5CE98B7313FE4C3FA30FA07DE4516109C3EAEE97ABE430C505647DD8B3DBF2
BB4B3A806B14A9E0F629863F15D12A1CA62E8E055FA6ACABDE1926D3231CAC271C30A3F7AAC6084D
D88628B943052B618E4E39148600AC1EDB57B0835C291F73D29C51FCA3C5EFB1DB18A5CA47433B45
C57EB3CB28AEBC68E4171E6DE357793B0FD2A1F4E76180248017112674DAD7ACA6ECAAF209CA174A
5603CEA5CE528F20919443900636E2FC79C303EA7B467A3F001EA8CB849BCF28BF40A3364C08ABC9
B5D935CFEDA827A8C3FE2F6ABA54017D2AD0393A05AE21F7AE1F58AE1E992B5C889219DA157FA7EE
92E291DE2F9DFC244F2CF0FDCEFCACC487F0EA830985B687556D5AF53B81814DE9CE0C6C430DCBCE
51EBC6091B4E0227732E07DF20D59E9EED4D8A83761CED84CCE244BFD6A39103A2B48A684AEC9210
5C94495D54FD6690AF857E5A3915E6A15689F1816F75F1FC8D5769B240639B339EBE54BC6D84794D
50F4EBE892530351984C6F8BEBE097CD46F4FED7D46E32830A16F77C13F13D17003737482F02D1B6
F04C57B4C2B1929AA315B4BE1C7C9CB55F8981508546B67E4EBF84B6026C355C5E4E07CD98C95F07
56F6643FB1DD7D8C77C4AF4C4F23602DD3F61D1C46583071AC460E74084F7F7CF812BC53975CAAF8
B3C1160B5D6864AF08A1733FA893CE4248C8F8B46AEFCCF317DC726BC1E5F2445E462E0591BEAAEA
49AD8E4E2D3CF07F900EC46D596E9CDB3A8710A0B93CE5DA9D35E612596A6374F35AED0EF55DC46A
8E14A91163B87417259DE926BBC3FC5423FF0AE2AA6D740BFFD26981A57C8C1D97FB04A90A567296
B07437F94C8FFF4709213DD5D8862A777CF3F97723F43A4F913F4A30F7554ACDAE34713654E21731
C594C3718C0547FCDAF7BB1620B2D6BB19E65596A585290CC43F50B34A2FE6EB1E495ACFFB16DFEE
8784B66FCB9359600412969E2BDA330C421C68345A797C49728450A6CF41C926AE8EBBE80BD97863
593C3E8AB5415A8BA625957F242378948F5C7EA9C2641312E8E46955FE5C1A1824C71D3B0C9FD211
7CC965DA7C21D257587F291AB7C594459A11B977A278C74CF5E6598B0C75ABBB2FC1B3D167D7E31D
B519F4A0BDA650A3FE7F1A281DB9B69B57A23656BD820B22D0E30B07361FE7C90933E24A32B6DE2D
F240635D543315226E32487F264AFE83EFEAC74117321A82A92F4FC7B259F26DBE74C966B4CB3F4E
3499E30B9B326F72D73919D9FA9024AAC0B95B6751AD4CE569CC3DDFC399428DF1298FB1733FFCE6
240FB3BE3A2837E1A66E08B784CDD131B5A61423508000785CDC5610CE4DA1DD314131767C8857E3
3D9741EF3FD7B8D0AF0371CFFA3DCF74FF2D3B421AC0339EBC05FB4B61A2F46D6BD1144747AD148B
7968D7DF4D0F742AB39B0A04A88D66F5CF9876970879879872BFDA0C56C253DE5C72016B4990CEBB
2455DCDEC7465EE7C7E1C557B570E9F3EF3E31A22DC8AB9B17F34F48E135BE7820ACE383DB7C5B05
8A9DC855C6850E49AB7D7D00ED2D23C50AEE671B11752F0A682EFE179CECBFAB47B76676AC0E8FD1
0A47353D3AC3477A59B0F3CAF22849DE97AAC8B79935F7C57F3052DE7E13BA0FE7CEC4685C86E841
EA8C7D6734D0FEEFF538CC2AA1414EC9126637E169FBE4ECAFDFA29A08451B25954F0094710195E1
69E0A6004419E432E9319BE2AEC8D93407B25B758336946C6E30032657DD857BE9C0A05F487423D2
0C2772D4416D27FEB5CCC971DDEDFE9B8C2D7DF9DEC90D0868D5DD18850BE567A04D08310883D9B2
D50B817D0690F8550E238C1139C0A117B48199B1B4D489C9E52C58E0CA75E6C386ADD447D8AE52D1
D979FD52A50D82BBCB8867B5D49C19BDEC414929DB67A00AF7C6482A87E46BD11D8E4E52783E5845
FB2CC7439F99FF6552C7288354B436B1C361AB8C2932F77B14A50A7407FC0BCC29662D710248CA46
AC42A03FBBEF9C972783942F3721BD32BDA3273D1E353D9E013D4CFF630BFE4E7C2963FECFE350A2
860421D17D6ACA888FA26403726A0E16BD10638D8511A2C8A36C99E9B72A422038E1149BF88A7CA1
B2DB196333F3AD32D6FE28F18FE1ADA06FD25E4597936A924E71C188B9E8779BDBA928A182042C96
F6A14A6FAB5C1A819DB8E9374E32F77393734A65606809E90D188F749180A3E6CA7AD8044E168677
15FDFF350D70B14454B692715DC3AE2CAA561FB953B478E873EB19C41A8D83288451E4E910D5988F
33D83C5974DD0EE4DF2E6C849C500D0714038ECB1E9336D71D852889F2FBCA6769949699BE6BBF19
A9318CCD7C845D0EC7FF3CFD871328CF7B45E6BBBBD16094E8ABE4D3789DEAD2C930AC8D810C911C
03AF2BDA4EBA62810F19B4506592005ACFF16EB58E33D6A71EA4DAD28A2D7B10FF89ACAB4BCC0F96
E622EBA20347AE04C62A298257D1623977D185BB46B42CCDD733F72B37072B8DFAA5D7FF77E35618
3F6D25EE1D951F7EBFBEA8FA17A859B8545BDB212A6BFE9C3078C32124C4E5D4DA09404E40498F76
7B7164C13E12BF006EE8DE408070296EF0A08AF759206DB3C445BF49EAB18ECDE1FEDEFFAB653FDC
B13FA4649B35D12266FD42D0498331560E96F54D4238678F70233F56097E1944FC671D6BB1AB66CD
E0E9DC24349E44D67C36B3E3A00B07755749A597DF31C25F28D55779841BD3F6221BCDE389852DD4
590E075C1298B36181D9F64BDCB54A556C05A9EF661EA1CC7C7549A3E1CCF79B87A6E71C3ACDECC9
C4EFB05B643744407029258B8225DBF960DE529EEC262D1D3113F6CDDBCF4BDAB706BF085C0FF2EE
E8420CF755E46B053B774DF37C5683F8432EEC183C96176BFB24B3F478FACACBF1FCB73D83D4D857
2D0F15783C8AE95D7CE959D794FDE1D973867D8F30A301598BDB7F2824B2629D64B88F0FF4498B6F
3728CF8916EA884C5930677E7481F90C85ED41DD28AA00E714D3A4F2CC136E417A4C591C7944C409
70D2BCBE410A940937C3CAA118FA32317444B401968B8ECB2F0B3C8DAF6D4886C2015000A71FDAD4
066B82312A4CD1E49A9ACFA05C3E7CA5A5CB3FA713CA0AD9E66A34730A36612C72D1F803D4CB1501
9184FA2FDB3E5D067BC64B29299D5531565264B70FFFF86F5A5B03848E55D73337650208D21F35BB
D5C14748CBE17EB3A7E02BE53136DC69E8740C597CE28472CAEEB96EF2A5752CF17CFBB82F6C104F
2BBB50C216C49E8AB7E661207E1742B35392752051A1E409BEDCDA2654CB5155B770C8C5E4A2968A
A35CF1924D0C74A8D23AB811B7DCE60F1EBC1494A295C8D670E84B7B886A6064151065BD96F2D364
7BA049A444CF16EB6432CAFCC70FF2E8B354F55A192C94BF08D156856A6512403F5140DF4C8D254E
DA59B2B3ADEE19A35E9A61202B711193A7E7BA8EF427152157DA5A51084EA46510864E1CD7B4FD11
16E74D7BA769ABCFAC556BBA7CC528C18003A2AE059CC97C18263500667F6A9A8C421F2ABDD73EAD
82D9D08940DEE1688D4AA200ED80C3AFEF6A4979154D99478D4F4EB3738333E8581A755190D87BE3
09A319ED170A107512F056E4C619D4BB1615BA6C0680117610A26462F267B76F9DBC9A7A3AC08C9A
512A44697082A2718B62FD1D565010AC96E1006F958070AB7567A33E1FF7BD450681DF6BD4EBD265
CF12726A7EFDEFBB9BA1E596BC5C2940A4FC9DE60116C9082138F1C672977F4AA6B7986ADABBB2B0
651A7B0C06C4BD405C58B8C81BE075997E118E10FC008AD1F9ACF9F6AAC6C9E3F6DC7FCB838720E8
D0D9BB99F203EEA2566F18232711E832810F10DD4E2DE44A0A81603EB1162E1BDB60AA1E2D771EC2
E6E2C3B39508E5CA03A1E2A7F2860BC6F0B57240880DF54C325F4729EEFA1D2753D57F055CDFCA5C
E9C6630980C7121FC21E2F7223E6111C18FFDA0A0A7643A213DE9525AE138814C4183BF03A26A36F
EE9199821464C845A746945413629DC53F5A2B0D8CE9282B580ED662F2F07398D6A8B7093CFCC6F5
E0F5A7926D2862AD1CCACB84D85902038551EE3EAED02AC7754E3B65818C530A0252C049A68862DC
A459DDD937F7BA64DB16AC86885B68AF46422D7C4923070E20CBAAC9F14E43979C5D5AC4C9321016
7CCC52E7DA272146D68D8F61DB4D60063E74F6673B41ACB601DEEB1DF73517A8C5388F00E8A9D236
9C85DBFE4C1E9864AB52E09F465EE98C194151E66CB98E6981EFFCADBC48532E9795290CF745FDA9
CB7FD40BB77C148A8B90C0CA50176103E2ECCAA57030F7C0882F1E891F9EEBA077AA4992FAE38C75
5470A4C35454EBAB45271DD76E4DBB2D9147817F7D3FB800EA136D3F27C84B4D45ACEAD13D3C91EE
BD6836AC04F95E578D1B7B8CE5B718E42FD1BBE91EF9A7873F0C6DC59AD231D08CEB4AE312F83F1A
9310155D2C4F216A6FC72385C899B5390EBADE7CF7BEB028F73DD76EDEEF639E9EDE034ACB25BA57
8C7BEC3581FEE0B221F7340570489596FC60EC805405E0D2ACF0687A62A75358B3878972D4C039D9
07D868DD00C5F7F3342384C09B01F1926F7D37C2B862FC516361253CBBDAB354898B31B1FE58F773
61517F2C2E106708AB659D95CE3E9E7777B7327DE01AE2D1E0C84B9EE3887C094C149700CB095D5D
A5FEAF1AA9027AF257576A7370D79FF4DB98511AA27C5C083FA0CA60A3A5E66B8DA9A22FE5DD3DDF
C529BEA71E83881D8B010D140AD686DBEC9AF4B331086F6556B695CAB14BF24B5FE64382E6F9BC21
5E9EC40C0914B1E27BC25F43E6F555B551726A8D9CD590D5AD3732777EF3B00CBAA89F8E8E0E0347
7D45B00181A7B196FD4919F110C0F2C0F1B41231051AB5BC8F8025ED00C10F2C2F51E97B622A4E84
E6AADA59F896F83EFADE779B37FACC56BDCA1892A3BD965B65D51B55AC1D73ABCD16D0EADE55C0BD
3C1BE9FDB323E9FBC9835C63F757051E29E773D3491706DEEBAA0F1182F0E02D0CB701661B30770D
94E240E1358195781006E18CBFC2D83F229A89C3066E35CAE1384A0266D5A37824A089E855F11209
9F723AF03BC1C8B1C0BCFFDEBE3EF73A40BF83F5E038B63267DE5413B88D30155E62EDCFA35C0047
0178E5558CDA2B30C4EE2A9854C93E0E484D4363E3614E5BE829FAEAE51935386D20DBFC00B42952
7F56FB045EC4D97B3D649415045337AF44BCF4AD9B9F9BF3EA72151DB616FF8F6B13EF66516D9640
67460FF123C7EA525A97F1D04BDE9D3D495602620659F6E5DCF1AFC5360D1C371BDF9984C4A7B462
180A3CAA7098E0FB0BDCE694806BA466883BD28D77DB4CFB6635BB7DB45B4D83AAD4260A4CA0D411
0E251AE7476A95327BD6AC1AC88F85CCB705FBD09993B9E2990D51C37F1110F78B887C54E4EFDA80
4ADAE5D81477913B6938FE1B39913C6582021A1ACA834500D9D75C9942CE2375D0A2A73805751EC0
970D6FA62D4354337A43D85DEA6C6F3334F40221FC473DD79344D028FAC689645963B371A55CDA92
F6BC989F4F1880AC11D8A056DF7A0EE60471800126526488B95B785698D2AC488CC027D31190ECE2
54F80757DC9B4FF18171409C457F5FC58DD1D43E8D1EE08A6AA2F374B7C245B7A21287DC333BCB1E
EB498A2BD723EE6BB30B76E574773F70A61F1E163A25941531C049ADEDDB59AE75B7A6725D997752
10ED356DD93D0F0AD7EE6495F07869C570125125BC84946F6AA1152CA18FCAD3B68004A7F7AFC6E0
9EE6E1B365A4DA15DA95AB980A566DEC7394F385FE041B3B7F46D62424F4726B55DCB4BD3625CA68
1221CE01DAE78E24F8045EF21F85C13D27D1F0F1B589F936F62F699B93EF05930C6F5730B0AFDB7A
7A829F2ECBF0DD196ED66C7E4E4E7E05B565BB98385F017D01B1305856DB747C3634BF05DAB08836
029674ED3A4053CC3DC696F758F86970F94034B4F0DFEAA4DBDE449800DB040B55E7FC83E6B5584F
A00F7C70ED18524037CCB48A22A5A69506A825DED81D98FE93177DEEFD42B485013D4C4184CD690D
714530B56E355FB01BC92DD90A7AE8095748A872F79121A28E965E6149F37C9D5F4DF64574F605E1
B929174AE0CF533F77EBA0E10862BBAC46BEBF583B951BD0BFC5128B08CD998DE897033E7CA8B198
625D865701394543845CDB7A45BF82DD8B6319658E28B34FD319E38E650869742BD2672623ED9810
8DF14CE5C911AE0AF2035B4F9CC0D1D84176CF3AEBC4834E8BBF07B7720521C4E6C081A962FE29E0
700C4F4ECFE92C39BEDD64C3DDF52959A4102CC242C35F56139643F22613D675F970CFDF8C6A57BE
9D168C9CDF93915F66A5CB37DDB9B8B729F8131391F9D6EADC8BDD5C13D22A0EF967622F3F7C08DC
C422E3D41B3BDA6B4520C98FD08262303E042DF37B9911C1447F3DC8A854973323E1C380A02DACDF
8A53A0D1EDE9BF34A50E8B76C5AD5B15F8E25B2783BCF4B1247309E9B70CC951CF3D98C1A25E9CB7
11235352F3BA91FABA828F2D7D91F0FFC50852860C531C20A5FAAFBCE1197CA367F0F84DEB86A8FF
A9FF4C252EB2633AA2BDAB30F2094721F482CF926DA3299452177B79251B311AA60D4CC82F5A9F50
E942703877AF1C10CD92DCFD16CF19BC7314FDA5A85284BDE964DE2BEE782F4D52D17FD2084E0A95
59EBD5AADCC74A6DE64C1F799385F5EC2E2F5F869F78F7289A26B03A9FD906934C3A6BA4A7B36E7C
3B77A7581BE9CD62B49C34572A870053CBA85DCDB9FDDE407B29CB3D02AD1C752B54DBB995DF0F8F
CB117CF8500B97849275A4625EF9937AFD7C8751B9B021E778F7DE9A9B191BFC470823FB8EA919BA
DB8B68755DD83C6905B118FA18FAAE216E2494FDEE9C1125C3941092C592DEC7A5B0C763E7E0D3CF
DA02AF9FFCD234A01D75C661603820C37E9A681356A6DB424F5F991FACCFF78EAE3518C0747C35E0
8EDEA2E108CBBFFA0B2D3BFD612B5743AC95CC4A0580A6739BE4EDE6CB1E8B2F4CB5C6FA4572329A
06080E0085748067462F3EAEBCAD734DDA18BF206EAEFE9F882807694B80A63AF2F40625E98DF55F
BE08AEEEC2C1BFBC16F1BB4D391B17122EFB5FB539005A613EF5C9F154BD50F05862F813F2083CEA
149FEDC651191259BA4FAA658A42AF151B03A7B553AA79726A44AF9175A724E0D65CE84F41F3B7B0
E0B684656EA56B4E7E654946AEFABDABCC4F3876B3C3A67373F4133FA8498DCFEBDC27476FBB28C4
003FBFB063267FEAB2B2BB8DC647345803B2723DBA8905AB0741137C43768B434CE118954AE55DD6
61AAA1BB60B87ADE97D4197211A0C70CDD7855783B7C570FD742AE5A5940A3D90F9EFF687C4F1E4A
D3C4F5C3B9FF20B61C0076B9FF060EB99860F31C41B5AEC0D2C4DE626C6059678DFA35BAC5F2F171
A3BD00065AB2007EABA499E4E7F30EB994F8BA757FF9BB0C9A2E3E384BC1DD4B62036E2D70819AD0
A535816761800CFEA50681AFBF0057E69A0CDBB4BAAFB8B15F7727BE1169BDD4FAF692F9CEC12893
E4E4425DE4CB20F330951EB5A7FBB0FC10DE78A7F9B0EF6FA629CA13E8C2F616A1BD42B1E26E2A0B
533DEA701AB7BA93526E2439755FB9BD5CB076C3309E73807A5935AF6CDBBDABD5DD7B036324130B
8BC40163FA0999364553CFBE351509F8A5167F205E228ECD66EC9375D0E0713563AE75B6C23423AE
63EB67167F2F4512BEFFE96B90913E6920F1F8B7139F1CAC9E38482B6CD26576776A01103FDEB164
A176023370D08906E2EF27E1E8B6F6C27EC67A86EA36A6C82B681385F3A60AD53A8512E0880D7ACB
5567F2654731CCC1796C47E18DD6CCE30F65E27DDC5A3E56BFA0460DFC3F9FF1E98B7BDA9DDCC615
718D7C6CD8DC1270E70FDD4973B287396E2B85ADFCC83C71DBEBB97346E858CFDA78713C0EDEFEF6
B84984D719C4729C0A3F2A7422DFFBB2AA5FE61891D3D16CDC1BA4A84E7A74B0076FEBE0C2C74F4B
B9314E5246D7E67DE23466D47C8AA93AC4859B347D8CE31FCFB4D41137B51C41BF19D626A59D0999
FF2A4FA5FE6FA60E029494EF99C8B00700E6E752F4F9ED52F2AF5845563ED8AA5D4E19F82DC0F87E
255ADA53AC62E3D7BC788EAA135431DFF49F2D3ACB61798353B27409D149FD635690F8AD324804DE
A99D12B02F15D9C6DAA01BE2C1512BB8DBE86EB31D7034866C10558C008D69DAD8830745F2BEFC2F
FCD957D0FEC30BFEC54F3C440F3A99BFDD7C6D0D657402A064F2656694E5F5A5524CF4A7A2AD4625
5DE9D2E9916DB9DC2C39986A221C31F89A1884ADBF7DD62D4EBD47957E7A359F2ACFD38E073E8502
5F907941ED233EE3582AA955CEF67A8ECE6D8B301EF37B7D40ED84FA9DD604C74C8E870F9C26A2D4
DEC8F03563D29E1DFB974CA191D4696D877A468082951B02A88884B9B760961D9C37154F32D54512
4F0E4357B68547CAE9CDB571089752D7881613E7FD8DAA8CFB98CA9E930B48B78AE13523E43A3568
7B42DD2F0A99034ECA1DD782DA692EFF6AC99D6734DF1AED3616B198E6C242EA7A9954B7337ABA3D
13EBF06B95E16F19047AB0EDBAB6A8928D81003E593C1F134B0E2B8C250EA251B59CD04905F57016
1662514225C393C42BCC172DD23D8871908522CFA5CE113EC05F39E4583EBDEB5DA425E4627A4A2B
D5C511F9C9C155BC81D0EFAFB0D0F2E96BD49A5C942933336EDF9AE0CDCBB159761DFC50F6180FB5
024D2E5C2A20233AFF282FD3B1AAE9B65D2989BB8176AA8C7A1F58E43A9AF3A6D0168CADB6930706
C4F974282D4A23F71B0A41C75086DC1C45CB98ED68ED0E4FC62807EDEF13C6C85741B11FA957D791
D92B750F3B7BDFCA7E148149E55EDED66700483C4D5BFC3973580F7199FD99CE6B358B508FFF5DF1
78A5E495977D851B0B06DC7F6B38388D5C94BC8934584D8EE2F4E0CCD3332A737BC066F042B14931
57BE93622E346FC6B293B8DA0D3EED02508AD2183454FD4D5D21235268834B257EA8B06117F67589
3E0505E64709FDE03F2D5C82B163C29629EEBF5D408547AC363758D8D134AD7B9A55AD9C7D90B67E
6DF3AAE6867759D2A75993265118BF6C5A261C6D80EF039A0163BCF8E6B40E643D1BF87BD2592BFD
6A41EFDF9CFC2E6DDCA83FEC28B5EEEA2E363C20AFB4A13B5EEB2CA3BAEB2CA6F4824AF1A59E4CBD
884CA4C62852A095E4B13CD018669AF3898DFC4840C874B97408C811E431163887E5BB8CEAC12FA4
A1EC50E8305137437441AE0FDF8FA4DFFFC77C05FCCC41696E40889A02DC4B1267D5B892647D6AFB
BA549F737543652D3C3A051E36BDB692DD7EA0D8964EEC27BCAE8EF5FA853C54D67A8ABEF7B01FB5
AA473DF48CFBD3D697C9B55C852773A35B9A7C97908DB701AB66DCFB274A824B60E275E1CB341147
36B26E50EFB1DF01F01688E09E096533E95B3AF5D09D7823DED38487C58B4F10D6AC76EB48731CED
78AB098C452AC83CCEDFE4E8E4AEB4A93A715306A096F262BFDE5036F38A3B733B1A0134904A3EE0
8A9F7C2723FB5D0535C5B57CB80C29E292A49AF936DAC66CDE5C01640490109E679FBDC13F892438
D70CAFB12909FD2ABFEAB23ABF6D129F5628B36FA00548ACCC39C8312030DBB87364DA44FACF3818
D4C8ACFE3302B1487D5CFED16E17B05CE9889219C13C9DEA28C9BAE5D788578C309CB7781244E30B
7DFFFAF5A9F594B8781F849EB20B1F3A346C2D697CFFEA6AB4134DD46C86BD0F89AB3EE9DBB2F87E
988D906C21A43E5ADE58BFE82D4D4009A39EA3D1E779FC374FF21B86BE48AA4A33186DFA0F97BBB3
218CE963643EF2A35788D613DFF934139B3EEA36377E67A713D20BD3DF04720AB49834E3FCD78908
1FB726CF642A5B87D5D23609661F7D694EA0256F3EA0DBAB7C2CF79CF89CA0FC9D25281EE0FC16B0
D089DC5B156462343A375F1EA2682A53F70A1F239D58080F4F884DBFFA68CC6D63365A8CC308DC5C
BC2387BF3D3107C95FF4DDC3A902B31C3F414355748B10518EBE00C92682CFA413FD071A16B8D129
4021B0ECC5025E33F6116C89C7B983C6BFC31C5C8D7FB5E5E81D3AC500123CC05B3C8DE01357E192
0DCFD172EB4B488CEB9E1ED5FA1D235C96FAD22B319239FDBA08ECA2C5C1192B4D7A797ECE135228
6BBF1E59AB3B54B8886E67A82AD971DFD1EB21CC5E3512CA922F9B870A48E6DC94F94181E422D274
2D3A14FCB3939FC8C1D62CAF79033D6EF4DCC93751BDABE588BF5D97B52AFC5084C5BC17246FF977
7AA4D738BB9B15E534ABFD68848B879A9840EEF4774734F0BACED5E7B6177DFD430E0497E36D1077
7654F351348BCEAAA18C3B362B2791A006782C25C9D544CF1594EA623BB4C782C6AABCA95F9CBB1A
8C86318834E1430376406D2B6CD5AB09644361B83AFF66C96CF549C2D309F7439254C6C3A5B210E8
23F83647FF420BE66901C317349C1B305014EE7E9F90DDA917E3F853F1A8AF3DF1528A81C50B76A0
F02E933229C2743BFA639003025697612BFD8575DCEA0BA5FFF805EEB4D9FBFA8D2014BC239E9D5C
4C87E36D1C83E010B92F43C06733976BC84AAF1C05C0A0CF45CA7746ED7E1DF5A12F2401C0FFBEAB
EFA199A7299E4BE5089C2CD83E7838F163F6284FC299B213513F803E93ABD8D759595DBF513D68BF
96031B9FB95A945B7C9153B0B315436C850FA5F1415AA2C9565F6FA39E9F5C5FB265CEEEA8C98E4D
00A72CE7F9F6677DCA7E58C1A8C111A9C6C44781867AA5FC71F36486AEE73FB81C03BF4EC728E43D
75564244AACA3D66B6D36DFD38332AD05F150D4972FD475FD087E13C9312D5A17A83411B45740153
81CB568CF85BD66428FF9EA2C07E7BF8D0AF4469AA367DAC0230650036240634AB81766E832EBA8A
2D8BFA402DA804D264757E74B3465EE21A1EA1C92929444DAB2EC83050AD169F257B77D3F4B9BA61
B11361F5DA6DD2DD933E101B64F9DC82945A2D421807F09F3E587D4B13BE0FDD6D7133CE890C3AC7
1D0880418880362E27635986795E2E8426A0A7D7E8E5C41317209D957B53B6CB9E4EE7C3EEAF3315
E006B7FD90E7A58FAE5289AE513D7751201459BE029563B58D967AD24E90DE5E96357D37E86CAEB1
6059CD8593F92617AF636C7D32E2B074A40B6A1C40828313C8DF1BCBB002DF276D424519EEE2F234
FF9B9B27126996834BEFB6E05A7BFE958B4AFC810E8B77F0EDDCD43E81549154F81E282276A7133C
23650ACB159EFEA53ABABAE1C1CCEF5642898A5605A285205DB40DF6C768029D8CAF85C520AA66CE
5BF1E0A0520CC94917FCC3118953403A1B16312096DBD56883F03E78A14315A5F97345E13C363C06
3A01D49492349D60A9114A77BB9FD48FC0C3AC76D190204DC69C3ED4A265B8148F2C5F2E147A504E
4F373637C065FB894446031F78C4BDEA68088681E0C5099CAB1D13833FA87AB96E511013A9B3D806
E71EF6E0A1442C91FC2A1795A13145ACBBF5D18880695EF11832ACD328BDE6E0A7308B12759D12C8
6B558CDA038590787704BC1BF49EE8C788C41594332624D56082ED8627EC110233CA328D2A0BEDAE
3511719EDAA726F338D324D1577593948A8B9F0300F27FD4420638C6972EEE2D6248B87643275DB7
69F72E8F86803184035F6A539A7CDF43A79886ECF110ECD7053FC04EB5E51B3C7625B3BF95C0F5EC
044FB7226281BC723988AC2498ACC0489DF0BFD1DA82D04FE3ACF6B63EB269BA9489F8D5D07DA9A3
AD04BA924B99B9C1EA64AFE7BB2886513EA6730462D4FB5DD82659C7DB7687F4CD8E006581A15EA7
715E274C9B89F66F1ACE9C2AE7698FCF7479A04F2208DEBA6DE801A6D184A8A9AF6BC1B0E37CEE3B
323DC4EF93EAA8219F946DB9F4D9C133C6CE0FCC6884F9C2F3A816C4ABEF44DD6256E7BC4574600E
1D825080660BF6858B415648258399839118F3C11410C1C29B3C208A3B54AD5D7484708DCFBCA04C
849F2AAB79E4D96328D990C63DE05DC8E804DDAE255F94FC3D56270BAFF6F86190796F91BFA018C4
FE4FAEC3F1ABE8ADE43D0DA18E710BC1F419F77DEBAACD3BE011BB93E111B18CCEDA8EB0352934F9
690F3E73D71655191F150BC3788677D1FE46070FDB354BCCAC8C179009553A7D67C87518131A4D8B
4FFF85FB9485C9F30F4CD31EECBC4A44CC267F6C57AA05A11C6FCC09B5CCC83F189F6A32F8EA56F2
2D20DA4D4008F08EFB1487675CCAE22BC9494441682F4E46839F0F4D2D16AD58AD0886C60C925DB9
C7D9AA1A7FF41C94B6289E1B72382789006F40B99B78B05ED1FB1F715CE4C0A1078AAC02EFBE6306
F53F5F7E73DAD249995DAEBF17E5F55082CC6885A54F93F1A935E0389FE54E8B1B6C5ED19D483620
A697873D5F18CE9A48E3C2C1C871FD4739A78782D8112602DDF8D4FC497C459067A6B118AA998740
6C8DE97C2F09CB9D388D341EAEC0A5BB4BBBED92BE59B273C77F3D6965418669BFCE0C43D5C86275
D8E658BE1893DA8E698DC858CA459711969B2CBF4CE294071EA572496575CC35CAF57ED49C2FF1AC
CC21E19D189B7C2A1ABB1AEAD7185675413C224CC4C0E1AF4EB76BA9F44148A95D8609838B967784
2391DECB30BB0FEB92CC890F224FD2E9E9D34466D6091443CB69E845D4419F9A04664706FC8D2D15
9002422367F39CA1B1CB1A6C32A65F46230CA2376C3E5125CDFD367514E087E59873EEE569B7F376
227DB126060F063662F118C7BD01946BD04172147B601BABA952A01E0AD31AB1147D48FC2C3F52BB
75D9618E6F03F1F1EA393AF0E8474025F451616C4ED236ED831E14F40BEF5B86806B73ED64AFE7B1
2A3C1F5036BB9AE79862EDAF13BDFFF06C94939AFDA1A749364BEE73449520111CF56181527F9568
F3189652FA7FFDF4BA1086DC5992C6E0282B6F88D7CB73F485F8A27A77453C151B0BA40E294653A9
73298EBECE8132B440ED4B4437283356B79CADA8198512A45044A7AF04CD02CD4DF7F47D5D1E7FE9
52C346B01D03D1F69904D1AB5E8C433B0615E88CF4D01B3C96361F82B5CF7CB4D92FF3971E44F0C3
317D3C5B0BC8DF4BCD4DC63474D0E0B5BEFF3177E2722D4AD4AC4B4AB6269EE948BBAB6019ECF2F5
846A3D215F6C0D999D489215D4328875DE21F2CA243CF184280B229ECA4B8A9C5290973503AE5883
03C67DDECC577F12B41F0D4DA266772867F9D93E1863BF76C6AEA5DE3FC6567EECE93D96F717E39E
DF536ABDFEC14DF6748DC90A2CDF6066246DF69D2745D2944123AB3A6ADCFBE7C74EA8E8D712AE86
F76B3059178E78FB2FBE8D1F25831C70F58FB6B5922B371A27501E7463E01C844A2226CBA263B570
4E5C4D3E50FE31435437E1ED39E6E3BF47B4E2C4588274F044B3294E7B2BFE302E76EFA3CB74108D
A6CFBBBF383F5C456128ADB5E667E1F7ECB4C3E00AB8937769E5A2830520E9FC0A1DA1662F881ECC
DD7967647B5841D8FDE1DF7C9F5475523F236005EEC0DF307BFCEF379355C30A83EDC96D6086E224
388DC7B5E951B819347AC5A1F9FBE7EF1907726EE7E972AA1DDECBF7F72658C20FDE99FEE686D7E5
01A7759DEF55169938F34978A6BD4DB49E494883F67E868A9AB177FA8E6F81157A95A03B4D9DB572
EC1CFF33B450BC13E00830BBA20AFF928CCE04B4F79F3795DB54A4A8B5A2F3CB323194990050CBBB
C7CD32103E0911160FF4DFF135A77DD0CC15867B994CC88E1EC10E3A097D329DBB90FBB62981FF61
C2521F9AB4B9393C6764E5B4361D0FBB1938456CE437142F0AAD9341588BD15EA0F6EDDACF12A62E
C025F3294AB1AC45719C5EFEE94067390D579AED4D1D36041D358CF1A24446176DCC808CE2D6CE02
7A2C2F6E517A5ADAC722EE94A1710BF61254DB4693B30225C12B9C4F856E1D24075327017D6B288B
B52EDE713B3710778A565EFF6C89656BE3C5F590F6ECA600390C1BFDE9B0EEBC2E4FBB9E0E2F405B
39738F7969F64E8228494B298C3FFF4C7DED00B0EEC336B7EFEAA892C4A80CE9ABAAB4318FB34348
93AAE6A90FF00B892D1DEE254DACDB268A6308E91FB628A98989956958C9634896B878CF93F4E0AB
A0170C1B7BE2A0C4A0D514D7BBBC4CA114349D4D4985E96DB7E2ABB752C7828A9E36D9B0B4551DCD
D878C06C3C68D2C214EC8121F6675D8D03545606B582B09B76B6D8608DFCED5C4A721F7008FC2014
1D877353E8BA5DEB1CB61F7C956D4A9F8CFFC8C4FF81B2660AE4BE45F7A63141BAEDEA05C43CAC2F
A04163ACECAEF90F61E0473E5CBF1F1994076B6A72CB5C33B17DD57E2632F7C6DEF7837F8A939055
CF357795865D86C7745DE54C6079C791850B20C0C7349472FB6018521DD5924ED1505A1B8C8F9CF4
C892CB40795C4ADBA3CC11C8A52A1DCFA8FD334D7F3C344CB4057E80A4B66AF6A97799F8DE817CDD
0202870BBF42E76C9BABD2D9B66D10F1A68388AF1A511887FFC50EC7D07581D4C4FC3F6C4F7EFCA9
4799D74132B5EA25DF0C9557902C7EF1E04E612D9E40DBA459513E584C3A3EE5614ACEBA165E07A7
CA3394969C2CF1FFF28B1C7DA85451270DF0FB71DE22A03FC2F17531FD59B12B55DEA7F5F56B0DF9
34C96E26124342571BD04FAE6A12C6EB0E21F06275605FABE91C6EDCF55B298BC4CC52891DD90360
AA5FDC150004BAE65225FFC42D13026F9C6FE343D7CE2F52229B4846F6E23BB2BBDB6DCF60F07A74
8F19F74A1168DC5C67BEF840A3C68CA7A4D8CE7F94610F4CEE989459D0CDF1B194C63A2B82479746
03A89150C4C6AC67AE3A1341F9516887C6BA254F81C5B552C527765A52ED5C4FC45D575F606E465F
7C2EDD2F5927319BE737D48099C333BBA84486F5F8CC0B32052DB6E57DC55A68019788DEABF8D649
A531C1880D07E425D55D4DD4F3966B2FBD2A0B55E5C429051DCF0E3B9CB1DE6A5B3DA05DDBBDD3CC
1C81877AED2BD272FC7A10707C07DAA54FD6CD37E15C247E3100A1A0C527727B73D45C8E02798C44
1864A2D1D30FAF94121F0CADA24753221C85DD5B43E5F00FCAF73A1E531D9453307581C6FA28BB5C
54D93F149D3871D2E017E6E7FFF7B0BEC71B83AD12AF353CD13311D3A6F16C51938986C9B6A24EAA
06B8BE6DF27A5090B3B120D1D1E064C6C1745536C6B0AE5C899C3DCA91BC38B7E900D9614F291B9D
BAA85AFBBBB57D58C3E1FA8713CCA1BF4EED469773EB4B9605125C08A8F7E998E37BD893F3533232
ECDF47D26E8B2A0437220FAA760DC8E90FCBEF59AF6C1C55FE1A28A4C98E2A67DD5A7E55BD4FE272
15533A56561F0D80989BFE15B321976CDEF26FD6530EF7A368A7239CC55D7AE2B8F0E980DF63CFE6
F562F3ADD0AB906B60682BA447CE4A86E6D5538E13C6847791D8A16F5BA29E5840847A7E33AFF57E
BBEC1A5B329A461FD0E858DE5163A2120BA12839C3A216C44F364452A2D6401EB549791012C4B65F
4FEECA2B73B2D88CA49B44493802B01A23321470A2593A8F8ADE3F88D87247851561372137E11D10
11A733C671C71D33EC939B05060C73697EE577A8F2BAE08309585887E5F314BCC642BA2715B51E0B
4D093F6B11CD37BD9728EE90A0C92D15BD1105637052F89B417F6F36340588601C9C2BE9526D01B2
E88EEAFA300E38B0EB5E2B54341533B31DA1193588974DC054FFBDF374960D28F0C8C1AB8505CF5C
64988DB86E17213EF0D9D6D52ADB1BCEBCD02B5E16F0866D21D7C0FE108D551E695CEAFBB83AADC7
362727C47BF24C482EAD6F122F1F35923DE5D6A248BB36433D044F73C944E6CE4D9FBDF0417ED53C
8F56B6D389519E7A539D6BE9444A4747957FEABCFFDCA5FA54BFF46F637B3A3299988929CDE008E9
E3C4CCA97054A822C4AAD01ECF9861AF6238E6643358B0EA141B0E161C6ABCB45F38740B344D4112
9D4E898DAEA8F2065263D68D97966FA24BF88E61BD86CF2C7BFD1F058FCF04AEB88F3A30C9D446C6
3611112CCF30F163C103D6C7C5AF946ADD33B50A58FCD8EC612268F7E119BDF387104F22E4C2CAE2
DAC407F206186F12D93BA87711FB05E6E96F17DE333305196FA7C33DC06255828744B590FA0E67CC
E4B0375276FC7AB9B324978B15FC228DAC17F955C7B3D441C540192145FBD002EE20FBDF6F397F95
336C0A056609E28430E123A432EE91594E20A8D9E5774FE8768C84CC040A706D8D3590BBC9AFE373
4A5536162846B6B7BB7B248924F1DAFD768B9546BD2A2CFA1203D6A3FF45C8EBDE2355F01744484C
DA9FC337CF7D9D54106407F54FEEA81B77BFEBEE088F344CA2E537644B615D8D6B6A79D03F6CBD9B
573FBA87EB00410B5251A29007CFB60E711F642C19847F58333B48F66B6758E4ABE524A4671B0635
C491341B3CDEE650CB9F774A5B6FB92AA70FEC7D9A057084214D81EA5A36A7F8EBE9922A70F2B102
121736E0BFB178A08ADC0A58E2A9DB347FB9B0BE707C038CC19A5519C3FA9AAEF660653086191E59
320D0E696218CE1E8EA7DB5FB3318EEC98C130F3F1C45D0D2401223421FF99BD6E1546873C6F12C6
F45D2E1C3EE41634F5A415FC8338A18EF2299EFCECEE00F9025E79610168548BF2A52623A479EEAE
CC55BE5172B0CF07F9B04E2B2AC08A2BC839DFBA9680F2BB2E438519BF3B434C71B4AD9E64262C76
9F6C1AD174FCFF3F41B5BD7652AB296C543F323F0A16E88C6D1FD3025C33794551DCAED303B57A87
CD1E7FA46E16ED357CE0FEBAAD2678A4D84E4D6B1635F412465C0F3E7246407BDDF934F0E2E0F5D3
EFE318D7D63A7B6BD0CD5556B6DA811D521408EF336CCE2D2B6777AA472A9EE0DB9FE0D6914059FE
25EFF5D7E3D2A6EB96B23669118B9EFFEE5B7FB8F1EEEA355998BB48430156F14766FD77605BBF80
CDEF19879E8F8C07B6998AF145B0AED86FA94A952F2F49D2891D41AB0184EFA8616B139E640A3A9B
D808BDF79E283B0CC4686935D0D96630D590A5F4A7C71C05E110BF3CDB5150D8CAC418AB25419BCF
DD5EF0A2015305561CA26494E267BA89892AD21E0BFF44D48E330694A1CE12183B9A7E4E25D78EA3
498EDF9A22DD7718ABD06DE2C28D7762F609A1E9A5C40A878FB8AB33A60383152A119B9FA077B109
90AF19C261CE43AFC116593C30BC27EE4D8CBCA0C0298BB84327FDBDD93F073B1E06F71933C0323A
6E7FD2AABA783E9BC995C4AED621434B82B34424B768B4427EE65228E612581B0B8A7AAC3149788D
FDD106A6AB93E01771802AD93B63EC386B057690E5C34A409421E532C6614EC61A0197C13EAEE438
35ED9BB38CF811E39CF8F154684E3D8B12E3B673152B82DD9B15A2A68A6163D2CCD72D3117F7C24C
F1575671832ECC4AC6B912882C0231050D60ACDC7D6F36C6BB4E32B6019B32D1DA08C7ACFC1DF451
3A338FACC16D297C56C6138FB02FC7FB5BF7B9DE4C61B63C6B37B0F9CB42E6FF86693BAE1CEBB60C
9C15CB6222F547E0D0776BC5545A73A2ED3C7799F0CA3C2D5EE17849DFB15C6ECF7C2846AD10870A
00E0810F35A57770EEE9D49D05B54500DF164A02FFC324CCFDB5F828AF7307DDFBBE647E98909C73
A3CC6BFB360042823C678EE6ACA0D658C12776F2A573656073E4F40505F5CB4A3D340B034B0FBC29
C3B6B055D23F0BD47E44B441D430B8703883AF8EBA79081D528AF5646340A27291472B8E1F19C8BB
B4AD17C7EA1FCFCC7B52E6EBAE0BC8204AA52C08B3A63B2F07FBFF20092139143A24130191C41D2D
69077D71FC204C5FD41275DCEBEF7E5701BFF6C0A4217F6F60C2E37697C7F1C35D2451B040BA0D28
0C9D23AAEF592BFFB436165C314C3CB75223D15694B6EF312CBCE8035A1A9172365FCCD119CD5DCC
569B84C6BBC5AC9CAB6942096034523671156FAE2012F6A24A001DCB2F35A8A031A2366CA98F1E52
944B58FBF1852710CEE0116BD2C7D68DB956B15FB6AAA147155E9F179E67357F231F8252D728AF12
49DAFCF6AB4EBC8637E1BA10D27555D2FAAC9EEE5E51C8BBC793ECC6011C4FEDDF7116E719147927
0BC11D5EDD9215A4E8087A6A16A591BF7ADFDB69C4A03361C0DD078017DC5851BBF60E06A86C6C0B
E08087C99F4F9002ED5206534913353AE16C4F358BC1564A442CAE506A107D1FBC0B9ED99AFC6633
209BEDBBB681CCE475645E92155285C00FD6985216CCE60064946F94778F7AA85ED87F5762C20FE9
DC007954281BD6FCA8554D2A0CA5B76A3ED42EE5F44F3B276E574F64B20E1AD489753903ECD20B4B
EC88ABD1E1CF5D06AA1815AB771E350EB6D04078EC04616B977CDA8CE88C483DDEE9F28D58366D3C
224C41D19E550B5ECB9775F569C2D391F61C4667A9BD11C69A88473AA7884B823F762195CC403823
690A32087893C29C63100A5935842F6B612C95EC9B5F07459608786310C8AE65DBBDCFED21B43191
874E20D08F12E1384DCE1A990CA5F07DE36BD012DC9EC558FE7CC44494F48CA3BCBF1F1F11BB98BA
EBBF8691F8590F84AD849923E656860EFC0EC27496FE6D6C185791E3261027DEEE4C57032547F94E
7D593F7885526AAF054BB850C02E863D831ECFEE61A781B89867139889A362F95F48A837ADB955C9
939F609D2EBBD56775151D2EA4B09D38FC1D824A952EE7E52849260DE61F07333076CF887A3AC2F4
CD088C29E47715C5242E2366CB493B2FEB38C19FC159EC50EAE88409CF0A30C0A6823C45D0532C2A
72E45A17916F6CEEB475C4D4A19372AE271326697CCCAFBB43D92C25A052797186FE8314FB41FD94
2A4B24548866BAC19A83BCD2E6979FB3C7B70B075DCDAB3EF6B6181A00A98AE73B6D968EE2DDEF07
503A92E4FE1E0B67A90A2F351D600DF960101A15808AA99B3C680A8F50D5CBBC96D98A3A2AD5F14C
43857F4CB9DF9372FE74B5D6CA9CD801667399E778B56EF702A56F0F393137B20BF11BCFF9DFC0F0
4E67649D07A2A5F4C42C9A929231D5BACFB6B53210E9FE311642D8BAA7358E6A7370B6CE921765B3
68A354B42C8877E59227146409DA83E407657BEB475329F228CDFDD11BC73123234649AEF0E2E9DA
76C12AF91713828368FB778905A6B7150258695D4D9DF6111E1B28A9462002D7C476FE44A9B13F32
9FF84930D213787932A1BA01EA608ABE7054FFDAAE2176EB960005E5407D7C1D39AEF8EAD8683A50
D93398C584312EE4A12C07E9D55AE9981D7EF57D66499CA93EA653EDDA1BECB494662E54CD7ED8A3
0B2A8522CAB12B2751F7E9B3B66CA0B5C8905E0F3A51F68C96E9C02F10FE515FD6133D3ED298D15E
8B1649F3D13341BDADDA7FCB838720E8D0D9DD92D0A241A0CD8E25D7B313DDAA2F25B543BB0E7965
402ED0F24AD146E49919ABD9604ECFEA5A7A49E58664DCEFDC893F5D722CF24A44D26369F5D86569
9632141348086A80AE528EDAFFF9D9986D5665DBCD375DF221D5EF1757D79361E5A5BCBE333B6C9C
1CF46794A7C7C776477023BB298C970F6DFF9AE6C7ADDA8CEBE73B07117BFED6CED2A36548081C79
BDA9A70C8FC5FA16D0EFD3E9F869DD5DBDF6E70CDA4217935FEFE577B64DA1DDBADB9A092B9D1E3C
E1FD3B6E0117DDED155313A5DB7D8742C3409FC18B9743F09ADEC49BFF2FDBBEF9D5FA7110266287
7C65E3A1421BA56E258A49D76C436C97AE2116F772CA5EEA5726BF17AD5D5CE37DC5F45235730E90
A1A1E3087132C820EB9E0E311500F2CA193C72E2ACCB4D77ADFA34E268B014FFAB5DD1BE7187251A
A69B7BB3A517796BACEFB9ACE0114FAAEFB0D9BCA028A52F5037291232A04C2353B9663BFCBEC2D9
30CB007954B8C6396003214262AA9CA9FA876B4191313FD1831D664863C4A19946AEB8F4E21C468B
9C94B8CAA407A74AF418DFB60D46BEE5029C884950D3BE8A58023DA864E9AB34005337D335B0B35A
91DDEB53A54C3233150E27225B0800C841E489E9EA6C12F5D95112BB723C3E88AAEDA3A942D06242
2CD80B04DDF024ED79224E166086C5770EB10C389D0BF0327B2F753358D9BD552C04EA52BA154EEE
5A84C51FBBFC79055AD0F1243E489F82FD3D1A3D2CCB24A02DB3F306767564A2451DA405BAFFED98
20241A82C6F4F6E1D2A36FD954540EF3C091247120F5E1B362D1EBCBF80951A3158B1547E7A0CCFE
40C03F992BAD00496C32BBE9B0A06EE9554EA3FAA247A7399A37D05329CADB006F679B58F2E5969B
13A5516A9F6949505A64B7B3FE5E748B9B9662C05E6C5CB79D64FD72C54F557ADE72880B3F9D8718
58D5EA3FEF2BD3FCFD670794AEA6144D13782BA89648C98E7CF5160089DB9798E49BE2DEBC2669C1
0C42AE1AD7C1FF4921EF465300977E057C0AEE61579460F56E51B6EAFC1F7F41D669ADE9610EE777
055F927444F971121CD76A55A273CEBB481B89D6B78D0066ECE31BE3EEF65CE9FD22D22EFD6E3ED4
536E6439782AD53550CEF1A903125F228A3E2F1AA3342B0551C59924149358F8E941969125F6E54C
8B2C068F57FE0DF91912CD71BE9492768191F4F6B70BA45C72409D4AC6E9619E8A34398E6A66E984
55F1793D8A2C0DF30EABE2B19679318AE09014262DFBB9AED5D637653FBA1C10821908ED6E088910
AA033E2E0798A630966D29F84845A9C937C27A268CAB8BA1AE9B32E12B52EE4B64BE5388AD32035C
7F98904F052B31D7C4819E27BCBC597E8503A5614E0DC2BBE5C51922980E3F492B61BEEB169C3EB6
AB9F1DA82EA6BCFBCC16199923C8399B0495EE9A9E1749DAD9FB289FF3FCCF34F55DF7D94F91EF31
B3B4C8074C567C4FAB337A337BCC2F459075244F665B079C159AAB83781E465F5259D41313183EC5
F5F53BFB4797942F93EAD6CBF9255F9B4DD0748A3BC6BF36ACBE0127AF68EA6566B65430D0595FD2
A7A2FF74055BF2E70BFFF2B79131F1871CEDEFB495FF914B88770654F9E5556AF535E1B9AF812004
99288AA39D1388ACCB5B11B13596B550F2746B2A83B076F4F606F7580156E54FBF6976AA4CFC9581
0A7FAC41A1635FDCFD6F7CD6BF738190D7F9FEAAB8C0B7CE38DD1459E2465C3B75625C8BAFE3B60A
F66ED183965AB9681A8174C44311D8EE36E468A8FFE2035B7C5AB6A372FE37FF627F4697C0D19F7C
8A1E356F829BBF2B8F4A95A49F85CA16ADDCA5C0817D6A4F7C4EAEE908DA13E0C89C9AEFF6D1D7B5
BCD1BBF672B46C4960720CD1C74E70C78784CBFA8930576AD4067D406A0FCE9248DCE6D610D7EF0E
97F3F9CEA1D08DDA90DFF0C484DD32265FD13A2571513F361DE3061F2EA76886112AC7589B290220
E34610277CF81535CD628CA688CA812275D7B9909757DD519F1FC89FE4D0AFE5FDB999323A470C6A
A0D9BA9CC92BAC24514E7CB3A3EAD2A70271EA8B02B2DDFEC6CE803F1B761D9BB7099FFCBF918D8E
B602946FB0DC14F0FD1289037B15A4A96A4605BBE53BCEA9112BF9746F3BDDC06CCCD808C62F2B41
D4F508EEFB03AD22E2E154888DC63C6BEC6A21D1851A5C82397FA49BD163BA8A72527827E4B6F50F
585325219FAA9B3A2CE14A0134C19DAE50373A0F9E6DDC8205467242D11A3989D17730C8169964B9
CC9549BE20A84FD9137DD9C9F7DEBAC3A41345DFEB0AEDCD7ED408A909000FE8D9CAC85D93052256
7A2C9312769DC85F902D4A5F5766EA3C561549F1F2B4C5269276946809ECA26B6F51DB4CBDA9E668
BE1023D8962C0DBCACD5BBC9E5F61C459B825036E1322737C0F196C0DF93DA76011DF2CA06F7B383
8C672A802EA24A474ACF7A51F2DE867ECAF5674B1053CD5419F5FAC20584A3F7565D7CE584CD395B
1968B622FE3C68DAD2F0E33274DFDF03B5A8EA047B077DA1316DF487C91ECEA84E9B417EA25EC9CF
1F1CEDD7A1C2CB0D51A58BD8F9772FAED8D553141ADAB148AFDA200479CD04C0FFD1478EBC618303
5437A5BC1AEE3218E9B27D21656EB9F31BD4E7D3186C89DF251207E8B67265585083111BC1AFD4D6
A2773629147A29CBB4BBC3935B83392487858E0D18FFC96E57C83C4C6744C8E0DBF001DFD64B660C
CC8064907AA4BECC12376A1EB55EDF655CBBB4744C1A6166590B9572073A2AB577EF446B80567241
389F990AE6C90B286EB48454166BBF264422FF2A387FA0B413F2295B6B188A64927DF702C232CCAE
59A2CCD1D109840A464BAC74A45B865A6667C901D86F771C4A36421308551F532497990BC15DA648
6E322566C210C517DAADDBC24DACB39CA41611B9F961E4696D1FEC46E71C608DFDEEF19ECDD88724
24E1BEF7176B0AFA4888BDB4C56C8690AFD03428F32740DFBC4BE22B7583DC47BBA42DF4E83C14AA
29F4E79397BBDCD2EC43338BA1F0D2CA9DA6E64A065FCB0073ACD0D86E46EEBF1454C9C172C6BAA5
0F37FA19756B05405763387237794E9FF74E6749BF6CE5EE9145413950D342DBE5B0EFDE57163127
2A8D060E935547E1FB0FB1FD60400FF856D027671CCAECFF7E215BE61E8A77E9BF5C72C2C1E4501A
A11B2F8574BD823574EC9598D579A9C5C525867F4BAAAA78DDA0E5BD7AC832DEA41328A507874A85
90B7F133E743471D4FA27DFAC39C6F99E233C913183B2A039CBEB5CB3BF8825A92D83D266246D5B3
CC7B11469E611E260C6ED16D17C9693B13B78E3F0DE2F0ABBE73FD6AE1ED25F57B4894254FFDB332
0E65ADA53669B95CA28BB4BD166507E9D8F12727E46D2B9593186C090764FE8A95F1594291FD551C
A96E4CBE1D6FD42852B2B65E7F10C4F17707F930DD934E2A2ACBDFA40E04EABC1E54632D67AB7D5C
00DC103A3D11DCF78B6771D98ABD5CCA0B253283C67B0863C80D1A78FE6D5422568207509FDB1946
92706C7A211B29955F6354092C9732DB2ABA8CDAF407FF25B40BF9D73317D5985E19E6C12B6AB5F5
DD59328905F822E1EBEB87C4E386EF20CEB7EAF842700F09BDC50D7AE6442D1C93804D56FE194785
968373A154E1F426BF76692CE3E4474360ACB9FEBD3191B8EE909E7C224EF90EEF36CD660AC9A642
4DB5BB20B8835D365D35A442ECB2444F30466C3323001A087639B73848E3EE275406CFFB495ECDB4
52F2A357F45D2D32BB22CAF9F9C2C44741A5341B29BB6C4322287A2A3891E1E853B976E17DD9306F
D98BDE8A0C97ABDCC7C708BD1BF49B524CD0DCECB40DDC557E9C90A1EDDEE57BBABC4C338F08A625
E03C1C1A20DEA709051EB1A3264D7002D6DD2BB7B622AF93C7DF54F49EFA5FBA58F115A049A91875
A2476C19F9133D0BE1B07C8102746163CEA0A98F9B62EA59C9CED7AD808DD52DDF8687933AE52A7D
9D7081150A812801D3FA78F90C4933E5DF09C991325324DEC6ED364ADF73DFC7B78953B51FBA2F81
F264C2A94139289CEBF7ECD6D8FEE9E579BE231FE1ABBCC07B4BF1884CABDCEBFC56610A5E2B7510
37FE804511FB5443F7B21290E38855F6DE5EE38960E02481DC57F83CFCB87C8FF1CB196CDC19B2B4
6C7C72B64D7D45C678851ED7E2860DE7DB772BE7B33C84ADF7E6F9B2063D1263CDF55E6220753ACD
67C4701EBDC0799AF47AC58A0CCE796384A50DE6A814DD994B372630E64E5FDFF57393522F689DF7
81C44599B21AB1C214D4ACF94F07CFEE79C628C85378B96D9007ACD4225E14DAD8C70984DC596DF1
96BC814E7346217C94F172FA40B3DFC73C30E6E530DDE4A91F6A5166AE19EAA3D2CC3D9D6917BFD3
1EFAC19C236463AF8D7FB7D9B3A4D6FB6D962C59B296E988561957A3C3D11F33ACF69F5768A2DA30
462BA9AFE67D3C41A1E8368099361F50D4F6368963A48C75F1590804E7918A02EB9DA5F60F49828C
95AC60E9D86DEB7699C35037669C02D408269D6BF481EC745E4EC630F68FF5168BE5E0BDF875EEC1
5EB9CAA9CBED1CE2A0EB4CE97C14E10114087DCBE5DE1DB6A070CBC6B68EE141B7D62ED320F7B74C
07D9762E0F5C8AF0779D38B7677ED65B5DD2F83ED06F041B5701228EFEAA0FFC031E44D6D68B274A
45FF9EB62FDA007CDC98B86831E9A668098364B421E1FE2A45D85824612A521777C6177316F0C6DB
D9847A2F61326E74A3114EAC3ABAEE456156DF125E4EDAD6BDB66E7DA6370C90ADC4AF4EC1958170
C32D5AAF3B45BF749EE1DFAD8A5D0C03973B7C1589EAE4E67F6C87213C721E4A33466F3F54253545
5014417CFFC9AF461CF695F5E1D7A37E4C7680A5624AA11EEA65C59BB38A96734E4A4A238C636638
9EB8083D5AD753FA7F74EDF10054315EDD53DE61D48846F70AA9272626E23BA3DAB7CCEE819B0A88
9CE775AA7F5205C95A19AAF475729D2C0BCAD9AB5459380A5F034C108A64B80621820D779582A198
14058DFDCC6C2D6461AC6F98C64AABA53A2EF77CEF612EA766FE15498F56F54106D70D0F8DD4134C
8C64B282E79A96F15D4BBE0297885ACF775BA5009006315637D60AD86D25A3CA6AC5BF5B4DB95B1A
672A8C589D89101809D838236560F7690E329784C1D335203BFED3A258CD79467D16B6DA06A282BC
4B9669986CB50C54DADE3D5B20FD5CD9FDDE60AF4B5D8D9C50E77CF50DF3B36F37F381FE7E28A719
91C8199D18258C09BD0440F5E258A5D2E22C6CFBFDC5F91228992E86532F4C0A50067BCB2D4387B2
9FEFB8043D7BC44A322FD3629D7D92B6EEBA21B035DAC884110BDC6B22CF59B08C195BBA1C682E5F
8CF32F479937D329FE8EC6E9A3A3AA63AE95EEB766E0EACEEAD4DCF46617888AE687009112732A7A
8FA8419A4652075EDDF83E291613B66BA793D3858CEA093C79B89B0C93E11CAAB86AD1980C401713
0B6A02545DE484FDA6E4DFBCEBBC848751B2A8821CB3F7AC96D2EA9B83B575AB60CECA41EA567EE0
8ADAC8F1060255057527485D6B12A26D2E7EF6892865FD65FEF28F8B46249C4F19341089D59DAF82
582CAD1A3B53C763A0E57134A57C4A24AB4FD358592ADB01BE8F1D9FAE9CA97A3BC3A0E2939913E0
62960CC1D29ECEF9E61BAC20E92F13C49078E7F1562C9D7C01C2B300ECD6ADCAC9AA0C1F1BA30401
0573F79D158C66D91A8D987C5239C9D4FEED1DC5C9586C4129C33E7C737C624EE9BD1EDE38E9F72A
78DC19E144B5AABF3B0FB72216815E371A5D6452684965CB7208B87CE5A27E444820E03F80AD2DF4
E280D25D9BDE41E719BB2C939E25B7965DB162CA8665CBFE65DFDC7992A508D54FE4EE8454C11482
7186A280D3D9EDF397640A809E3646675AB6621B9CDF42808E2F19859AC975CF70F41D2B3D22F8E0
C180126F4A12122B207A150BC8E1819962DAEBB821DE59B7EEF8FF9219474597AF859E353B4B713F
5F1350F4049DCE99627492E396038B10A2F8E82AB679F65BE14A166E4502921BA44CCFE04E5DD3FE
B04BA47C3F7A3E7DBF7D55328AD1E96092C73EDB16C3325537295DF768E2633D01304EA0B01379AA
DAFE6CCA2AB3E246768C5AC841A458A2F69141A9A9D716D129B26643F1BBC95D8CD0ED44148F7C6A
F370201E454F4AFF7C11A8080508FEDE242343E7ADDD5A8AAF079C50765A79BD25FBBDC59EDF980F
FE0B60435692C49D20AC22F8BD1FCA3F3D8200CA26D61A30212558B54671E63BC09776A3AE7A906F
CA63281F080A00500C42C02B8F82357A3EBF572CFC4BEBA3FE86537DDDF23A861C240A31778A131E
F638C1DBB7E87A45487C092D23FD9FB2C162C3253636ED263B141178FCA9F2D5BE2D81F99B2872C4
B3C08749CE18C9C00E75DA6B3E4C6A6DD79EBA731618EF5B5E767BB40429D8FEEC6ABFE9975746FB
3A82A03A07B7D0DA8BAECFD1F72AFE17EB0C0CF100A2D48F4449A42C482BB1D64C19F8FEA73F5BA1
8FC9BFEE3F640C39C081669A9B0EE3FF6B2BDC0A726301EF0E2259E65BE59275C76E7A3F1C76C3A3
3AD0E2F79198DCA39C482B4E1196238DBA937692CF319436830BBF441C0A8A04161DC0814B5DF049
83099439EF421B6D37D351D4A988A8DFE93D796B2E8B2564C602F79E6162F56F933196A0DCE91051
600BAFFD9D439A91F17C20CD6A9104B553D823A0317E3C8344E9F0B2560AD583BF876AE307892500
2177AF61BDBD745CEC2B2A7931D27423D2667584AE0D6CAA2B281EB9271ADE86C493791AC9A2265B
8324F764D20DE65F6267439F1574DB02C600E771D3C743D420FA6F8BF01A977B91AF035E0D5412AB
0B85D6ED3ED9D0345ED434F9B95FD911A9D3828CD162686E6ECCD2B6A5B1104F0E6838AAC7FB3FC7
09F08F8E82B4BFCB55D8984771F9F4D339EE7FF391448C7807A436A78B6A487D3A5A86F314B302FA
C5BE1C1DB9844F975619D615D1C7A20EC2B144797E0648CF5C044C8DD1699EEA3AC9D7E3BAA54A85
11A932623D5ED3F0A9C3028CA439AC395F58DEAF1C0354A169D9AC7F380900D9828C3ECBB975F6FE
6BD79EA4BEA9B71F3A9B1D2EAF8F1E475B4FB99758192EBCDA21B47EA33F57C58E904DA260C801AE
CF457C84592B81CFA96C10E448D705D24871F3D1AD1FE004406C8070A54FA3747788C5B55E9462E6
F51378BF3F848360542CAD2D5FF9EDAC84C164DFEC115A2F3D873760EAE58CC8F361B37E6CE076EF
325A1C54DFF84DB95DB7DB5B56C48ED15C5426E6153D8A94B1A35B22EAB1D7B871097DF12C093BA5
538957AB7D0AB2E39A2D1AECB91F0A693B8F6A00601929B6C55AAE8A227CAB6404FEBCC8BC4EEEE0
ADD4CFD7DEC225170A0063457918B9875AD7F022A8F9932ADE316E4126EAB75C1D0B2B9F44E85F1C
54755D1301345665EA630C8E885A8D9AB069DEA2CC6D12E4A0BF6E80C3AE12BC7ABE507422A5D92B
65F70B4A472DD945EBB960880EC4C34E4C206C260FDF86A997D7D399A0219A51E6F8BC1189EC0ED0
B8686F0243BFAFD829979747442AB1DA8282F10F4C37C4E6C88D231460DA3BF34C23A4755E2F8F21
F6D138C86B6091CB3BCE5ED170242C4CC87C010FE63DA9A2ECBDD85311DA8572AD67E40F744D2EC9
6607701D9790574F051C859EF29291AFA301C809E0A5513DF9A7FC2DB1776DBD4A2CB622BD17811B
C0E584A8D89D4BEB17C2D0AA8BF31CD7E2B36C0E1888409788E30EAC2E46AFA1CFE457D3A19C28C5
80669CB82CF36BF40DFAFED78F99A5D5DF189CE293413FFBA9E8D2457986C68483242AD767D5F026
1CE303153C35D5DEB1789448088B51C48A9B8E903BBC69ED7FB0129CCE33A0337198F11DBA94FDAE
AD74BBC5E519F559094E15B03AF3EFA89DC38B4278C68D2AEEEBE4B28B351D7B72F52D94480D8CBC
06544645F20800B8284A4E7C8FAD59D0AA8EC8EC0551912CBC62694A5DD15C469BBE614FB187C084
838D676E5A1CC8DFA8676758EB7D53FD2BA8F1C434F4F70AED8F2CE27EED2F6A82E20E30EACF9BF0
CE28B4BF7D556815A887D777B7D75F60D2C410AA2D378B7BFAA6C3A5BF0A5EF80D3E35A0CF393A5E
BC27A895D712C6F004F1A03F9FCF493973F33E6FB106407DFD992AB0E9E36EF395663A6EEFFD71BB
2DAD9DFE6AA4685F307B8FD69BB2F74E672666414A71FA479B37D3DEF6AEAF80FA14821C65F7ABBE
5CC6DD49002216E23B3D22C282F3DE0077EA81017E79D8C3BDB61EC031CFB13FA981120A6C518F4B
4C39C9DD5AC6EDA29ABA527C9948BC3162EF65E8251C9D4E3494C6A51A41D489F8BC89250128EBD7
0EFD01B9F03C40B6E0384364F2571F7D969016A959E4243D7AB728F0F030B8E2FB456D8E47A85898
313B0E91C68C7A8A7226603427AC6DCB5C69924FD026E90CB0EE89AC42D874BB15AFC981079E9DC7
1271C3E461265AF327D4AAB4AEFAB6A9DC3F84DCE7C7868D4719006344B9055C8BA952A2250B8041
E5EF519BB788201124BE90AECAC2293A310D9565E1EA4AEB99F7ED7106649169E8EBF3DCB210706A
F2FA65158D3059DFBD7AB5B00DBB06B016F73FEDB3AE1C1CC03BC2D94B143BFBD759338EB181B1F6
841F7B539D8D126FC5B31B244A3A00ABBB121A98F73314D1F1683F513C3CCC9A0C2180824ACE5D45
E454062CE1217F7AFBDC60A6022B0134EDA6C5D787DE8A5925BEB374F64D612329B9AC17B6EC03F8
56CFEE502C1FC3AAC7B6F251E8DE4147DCB1580185C406F38E6B729307EADFF6D7A0E824C9830093
F0C4FECEEFC7FF839306FEFEB780FFBD8879F22AFDADCA4C0767B8EEAE5DB869D7BD91355F0255E1
CAC68A81A276967F233624DE0D2082B89E2C2D1DB0F8BE0B2BD7051C4DE9B1564AA6CBA03E50386F
D685943D1EDDF5BE0EB34418C48E5EA645CBA552A0444B254E82E9E84A5B7BD0064D5EA87B1716C1
4EF7FD14E2187FCE16FF6ECBC0A6588B30B4329626F024BDBA65457028668BC6750A4DD668D017CC
EF35CD9CF45EC73885FC91B8AD78920919B4747A710D25BB850B558C5CCF7170C20012DD0F2874A6
699DF53EDC6C75716A5B6B06C98F4904BAD22B18C77B3EEF32DE3F45A8AC12383DA16DF6F06CD923
D344CFC2253ECF97A52F2DC6A22539231E29A324F851265BA82BE566E42167247CEBD914EBE42EAB
E189E74FE1FF17ADA8A5F47DC9866CF86694DEE28EED333B0A8AE380557820E3F1D32B05AE27FFE1
68267FADD310C4EE550F71704EF71F4C669952F30E485AF37561884066C0E3425C748BBAC77CC7A9
87EC336B8BEBA44358BEA4ECFEA32494A8006E9852C4BFCB1C0F00ACC247F1F8E3F3B34539C67638
64527F9F885132DCACBFCB1DC80EE3B2A711145DDA1D3B5F83144E2CD698D43A02B0DEB706C78D75
A24FA39B9374E1155969FAD7D5FB477F4C3C7440DBFE1BD1DC877360E8690A6D3A64EF0A1313A520
C49320295302227CE5625E134EA442A537505D206EE46E7E218BDA38F7B6BA124ACA0E949725CEEB
961EF8B0727E3A78287E61E65A84AC14D1014A213259A48F04C634C1F04C73B4110D0DB491250CCD
7DAE323CC8BD29BEF605DD92AA5480009DEAD1256E5C9FFB18362D63B022C2A378D15ADE2C6AE603
1DF385CF090226F0AF889464584A9EA63B884453DE231058C5661C4F7DCF7505D7B1E48C78AA5799
8FF39084FFF1CD18CB2989D867F2E085B291FE52367B4E8667E5CDA4F41DDBC7129DA5BDC39549E0
8B67D9C9E4C332D91FE261728521245CBF51870F24C42F5814F393719A9E126C5693C0E776E4D8F3
0F0288537B8E9A7C5DA4F931FC83F96A1950B1DF26C0448B646D3BF42C0429E2BD0164703FC71833
19DDEA75CE65D9DFFE8369787FE664306D843421C2C0C3A5B210E823F8366161A96CA88D95FD6486
5F9E5B0D53DCEE4A98AC10A8FF1BC34A46DB6016E973C9FA298D3F58228E3D9FCCCF9632556CE2E7
F9C81E05FDB0FC1071E69A4C158E742D0B8939CA3DE33A4BE8D01D679C81C6BA9CF396A6768CA626
05D796AA5C323E3A6208F2DA5000FC4462ED81AD0044D9959E40E4764562ADA76E33EC63271966F1
7A13AD376A54FFA40FA247896A22C1C4A4CE51094CA1892A0B9904EB762839AAE1EDB5A0A5A69343
CCA45F88F61926B23E6C85688862B1D10F1ED827FCCE2A427E49D960DBEE0D39EDE08D2565C6F5AD
66CA83DAC1467C38F742132F715DA7E9757A5D067FDB4A8859D148473F302BF6ECB9B7EA5C0DF851
8F58D4D076625B92BC8201028064950D70CD40492DA83B98FFD79BD3DCD9CEE95178B6DEA9AB10B3
4C61A74B49C3697CF714F56A9B1E366B04500C9A67704AF6F721851EA4566B96E220E7B526873F94
E6013EA8C489639D291167BCAEFB661C96C27DC7BCD5B317C1F101CD8DF2FB29F6162B5ECE903C0D
5570C8C6325F05218850E4A5B5F94C7CE334BADDFC5DB98EF5333B4A92129F41D046D0F5EB6F342C
F362BC8E45511FCF328E2CE2D4C579516307AEC400BA207071C887F5185AF536A6827307D7698095
E8A6F8C19812A11C32AD207FBC353172C8DF626C5C05CD24C171B3C8DAB270A74AC48E35F0A8849C
E0934B93D56C93599F5235EC441B5232257C4C6767C7B5A35830010E60E56AFBE9199B42E725A216
C49D45A3C554767DF192F04D1A192D5CE196831EB7A56201A4A96CD44DD084729774334F698E1902
614405347A37A4C753C0211D7F24D5265CF033E3C4D30E61886CF781D2AC30385E6021A892AB116D
1F5505635BF5C915D0300ACA8AC32CAA0F3639550C4AEB390DA7B86E53B6BB0E4819626757BA9986
BCA4B4B18F6BF3706577A3BE146F2585025D5A36EB14E587C5469EEEB622D31FD32EBFA812B9CCDC
CFF7D17D00D9F21BF8871661F20E89A25A4543068EC509D0DF7DEA2A24FF68957943BE0FC7BD319D
92A575E12E6FB8112D72A100FEF3EE85972304BBE07FC1026CCC068E8A414F641116E51F76009C5A
F9E664BCCF93C943CFF2115235BB3290F935AA3FAB4F2E73FCDB9FA5E1866EFE278FFE7EA9DD6F89
38CD5E5F4F31F6C659AF7EFF5B291AFB86521678B42C99275024EDAD04E5929D201A36F4A6C4DCD7
2E349D6B9A1F90B123DEDE3DA50EDF929F9285747CD504C8F4A73D522F312D623BD65A35419C0729
30976129B2D99B32D1DEDD81D64F7879CEDDFF04BBBF1286E07BCE651E2DEC190DFB9D25F3C1EEC8
D7277752BB7CCC313A0FEEBF0EFFA2A189861AD4EA13AD4FDBD5160DC273F12525815F0D693C1413
AFE4FBE09BCBD71E16C33E6CF8D18732447FFDCC2E4AF9E270D725C1D262D96E72538CA3309BCAF2
35A3FAFAB27D265C583E6F6F062B555C97DFD89AC46E6154670ADCA13FD99F7A4B9B8BB224D43764
8CC9DB76E177F562862C912D8CBC248A4C628FF2D0C9688611CED3DFB89064B988F16655633B7CC7
AFAE34B2937528EA0814ED245D6B0D2AEF87A5B63E2BD7E4F7D9CFE372C295A0891F97C3855C97EC
C03C7C2A231704BED419612255F8B2C9262D48CB4FB46D63CC9697A210FA9D7BFC3BAB7E46172D3F
52A4AF9C4114BC72A5C7CBA042FA633AFD5E404F29408D4485837E55E6F9702F04C7AB410C351039
6A78C8672F8EAD53BB9CBCED63FB9E72E7238CC88FB4E7C48C3DE3E4B80E277B952727916A4127A2
5CC1413C390F4DAFD5253B07BC96DAE8CF4DA08330DEE580CBC1E12B75A661819E96B018D47A8B71
B6BFAFC5E3CBFE68E5193417B6E730E6A2820838D22049BE6BB64B74AA13779D46519965ED80D5FC
30B0A6F73D26DEBD8150B3D27B3F135F608D59BB1632AD9C2E11177FAF54CBD1C4E58D58C395BAE8
AD7C7AEEB0E1C3F0C0B7A5E7142E9A1DCCC8B4EF56C319D4A4F750857D2FD180F871772B9CC69FB9
B222F83C3ACCB66125AF6848B2EFDCE3D2284FA5844641FB32F701FBF32F1D2F2E2233B66E36CCD1
49FCB3FCDB6EA04367D11624717D73D9128EA7D9AABB8658BE9E9986E532
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark{restore}if

%%EndFont
%%EndResource
grestore
gsave
newpath
 137.500 150.188 moveto
 375.313 150.188 lineto
 375.313 3.188 lineto
 137.500 3.188 lineto
 137.500 150.188 lineto
closepath
clip newpath
grestore
/pp_save save def /showpage {} def

gsave
/MacintoshRomanEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
	/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
	/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
	/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
	/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
	/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
	/.notdef/plusminus/.notdef/.notdef/yen/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/ordfeminine/ring/.notdef/ae/oslash
	/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft
	/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
	/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef
	/ydieresis/Ydieresis/.notdef/currency/guilsinglleft/guilsinglright/.notdef/.notdef
	/daggerdbl/dotaccent/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
	/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
	/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
	/macron/.notdef/.notdef/.notdef/ogonek/.notdef/.notdef/.notdef
] def
/WindowsANSIEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
	/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/Zcaron/.notdef
	/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
	/tilde/trademark/scaron/guilsinglright/oe/.notdef/zcaron/Ydieresis
	/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
	/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
	/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/dotaccent
	/ogonek/onesuperior/ring/guillemotright/onequarter/onehalf/threequarters/questiondown
	/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
	/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
	/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
	/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
	/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
	/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
	/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
	/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def
/Mnodistort true def
1.000000 1.000000 scale
137.187500 151.187500 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		239.500000 def
/Mheight	148.000000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.452642 0.186449 0.309017 0.0792351 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
1 1 1 r
.001 w
[ ] 0 setdash
.02381 .30902 m
.02494 .30902 L
.02596 .30902 L
.02715 .30902 L
.02827 .30902 L
.0293 .30902 L
.03026 .30902 L
.03131 .30902 L
.03242 .30902 L
.03354 .30902 L
.03474 .30902 L
.03587 .30902 L
.03691 .30902 L
.03812 .30902 L
.03881 .30902 L
.03944 .30902 L
.04061 .30902 L
.04185 .30902 L
.04248 .30902 L
.04314 .30902 L
.04432 .30902 L
.04498 .30902 L
.04559 .30902 L
.04627 .30902 L
.04699 .30902 L
.04761 .30902 L
.04829 .30902 L
.04952 .30902 L
.05072 .30902 L
.05183 .30902 L
.0529 .30902 L
.05391 .30902 L
.05502 .30902 L
.05621 .30902 L
.0574 .30902 L
.05864 .30902 L
.05971 .30902 L
.06087 .30902 L
.06155 .30902 L
.06218 .30902 L
.06287 .30902 L
.0636 .30902 L
.06483 .30902 L
.06552 .30902 L
.06618 .30902 L
.06739 .30902 L
.0685 .30902 L
.06911 .30902 L
.06978 .30902 L
.07099 .30902 L
Mistroke
.07173 .30902 L
.07242 .30902 L
.07304 .30902 L
.07371 .30902 L
.07445 .30902 L
.07522 .30902 L
.07588 .30902 L
.07661 .30902 L
.07729 .30902 L
.07791 .30902 L
.07862 .30902 L
.0793 .30902 L
.0805 .30902 L
.08118 .30902 L
.08181 .30902 L
.08293 .30902 L
.08413 .30902 L
.08527 .30902 L
.08631 .30902 L
.08746 .30902 L
.08872 .30902 L
.08936 .30902 L
.09004 .30902 L
.09126 .30902 L
.09194 .30902 L
.09256 .30902 L
.09325 .30902 L
.09397 .30902 L
.09518 .30902 L
.09587 .30902 L
.09652 .30902 L
.09772 .30902 L
.09882 .30902 L
.10009 .30902 L
.10129 .30902 L
.10238 .30902 L
.10356 .30902 L
.10467 .30902 L
.10568 .30902 L
.10681 .30902 L
.10805 .30902 L
.10867 .30902 L
.10934 .30902 L
.11054 .30902 L
.1112 .30902 L
.11181 .30902 L
.11247 .30902 L
.11318 .30902 L
.11437 .30902 L
.11505 .30902 L
Mistroke
.11568 .30902 L
.11686 .30902 L
.11794 .30902 L
.11918 .30902 L
.12037 .30902 L
.12148 .30902 L
.12249 .30902 L
.12365 .30902 L
.12475 .30902 L
.12577 .30902 L
.1267 .30902 L
.12773 .30902 L
.12881 .30902 L
.12991 .30902 L
.13109 .30902 L
.1322 .30902 L
.13321 .30902 L
.13439 .30902 L
.13506 .30902 L
.13568 .30902 L
.13682 .30902 L
.13803 .30902 L
.13912 .30902 L
.14032 .30902 L
.14156 .30902 L
.14272 .30902 L
.14381 .30902 L
.1448 .30902 L
.14595 .30902 L
.14703 .30902 L
.1482 .30902 L
.14945 .30902 L
.15051 .30902 L
.15168 .30902 L
.15294 .30902 L
.15364 .30902 L
.15428 .30902 L
.15554 .30902 L
.15672 .30902 L
.15783 .30902 L
.15883 .30902 L
.15999 .30902 L
.16108 .30902 L
.16209 .30902 L
.16302 .30902 L
.16404 .30902 L
.16512 .30902 L
.16621 .30902 L
.16737 .30902 L
.16848 .30902 L
Mistroke
.16948 .30902 L
.17066 .30902 L
.17132 .30902 L
.17194 .30902 L
.17307 .30902 L
.17426 .30902 L
.17542 .30902 L
.17668 .30902 L
.17787 .30902 L
.17897 .30902 L
.18007 .30902 L
.18106 .30902 L
.1822 .30902 L
.18328 .30902 L
.18446 .30902 L
.18571 .30902 L
.18678 .30902 L
.18795 .30902 L
.18921 .30902 L
.18991 .30902 L
.19056 .30902 L
.19181 .30902 L
.19299 .30902 L
.194 .30902 L
.19511 .30902 L
.19627 .30902 L
.19736 .30902 L
.19837 .30902 L
.1993 .30902 L
.20032 .30902 L
.2014 .30902 L
.20249 .30902 L
.20366 .30902 L
.20476 .30902 L
.20576 .30902 L
.20694 .30902 L
.20761 .30902 L
.20822 .30902 L
.20935 .30902 L
.21054 .30902 L
.2117 .30902 L
.21297 .30902 L
.21416 .30902 L
.21527 .30902 L
.21637 .30902 L
.21736 .30902 L
.21851 .30902 L
.21959 .30902 L
.22077 .30902 L
.22202 .30902 L
Mistroke
.22309 .30902 L
.22426 .30902 L
.22552 .30902 L
.22623 .30902 L
.22688 .30902 L
.22813 .30902 L
.22931 .30902 L
.23032 .30902 L
.23143 .30902 L
.2326 .30902 L
.23369 .30902 L
.2347 .30902 L
.23563 .30902 L
.23665 .30902 L
.23773 .30902 L
.23883 .30902 L
.23999 .30902 L
.2411 .30902 L
.2421 .30902 L
.24328 .30902 L
.24395 .30902 L
.24456 .30902 L
.24568 .30902 L
.24688 .30902 L
.24804 .30902 L
.24931 .30902 L
.25051 .30902 L
.25162 .30902 L
.25262 .30902 L
.25372 .30902 L
.25487 .30902 L
.25595 .30902 L
.25714 .30902 L
.25839 .30902 L
.25946 .30902 L
.26063 .30902 L
.26189 .30902 L
.2626 .30902 L
.26325 .30902 L
.2645 .30902 L
.26568 .30902 L
.2667 .30902 L
.26781 .30902 L
.26897 .30902 L
.27007 .30902 L
.27108 .30902 L
.27201 .30902 L
.27309 .30902 L
.27411 .30902 L
.27521 .30902 L
Mistroke
.27638 .30902 L
.27748 .30902 L
.27849 .30902 L
.27967 .30902 L
.28033 .30902 L
.28094 .30902 L
.28207 .30902 L
.28326 .30902 L
.28443 .30902 L
.28509 .30902 L
.2857 .30902 L
.28683 .30902 L
.28802 .30902 L
.28908 .30902 L
.29008 .30902 L
.29117 .30902 L
.29235 .30902 L
.29354 .30902 L
.29421 .30902 L
.29483 .30902 L
.29609 .30902 L
.2968 .30902 L
.29744 .30902 L
.29859 .30902 L
.29984 .30902 L
.30102 .30902 L
.3021 .30902 L
.30312 .30902 L
.30421 .30902 L
.30523 .30902 L
.30617 .30902 L
.30727 .30902 L
.30847 .30902 L
.3096 .30902 L
.31065 .30902 L
.31183 .30902 L
.31295 .30902 L
.31395 .30902 L
.31503 .30902 L
.31621 .30902 L
.31746 .30902 L
.31852 .30902 L
.31969 .30902 L
.32095 .30902 L
.32211 .30902 L
.32272 .30902 L
.32339 .30902 L
.32408 .30902 L
.32474 .30902 L
.32594 .30902 L
Mistroke
.32704 .30902 L
.3283 .30902 L
.32951 .30902 L
.33058 .30902 L
.33173 .30902 L
.3328 .30902 L
.33378 .30902 L
.33494 .30902 L
.33619 .30902 L
.33736 .30902 L
.33845 .30902 L
.33961 .30902 L
.34085 .30902 L
.34203 .30902 L
.3431 .30902 L
.34436 .30902 L
.34507 .30902 L
.34572 .30902 L
.34693 .30902 L
.34754 .30902 L
.34821 .30902 L
.34886 .30902 L
.34954 .30902 L
.35077 .30902 L
.35145 .30902 L
.35209 .30902 L
.35278 .30902 L
.35353 .30902 L
.35418 .30902 L
.35488 .30902 L
.35554 .30902 L
.35615 .30902 L
.3573 .30902 L
.35853 .30902 L
.35969 .30902 L
.36095 .30902 L
.36214 .30902 L
.36325 .30902 L
.36435 .30902 L
.36534 .30902 L
.36649 .30902 L
.36757 .30902 L
.36875 .30902 L
.37 .30902 L
.37107 .30902 L
.37224 .30902 L
.3735 .30902 L
.37421 .30902 L
.37485 .30902 L
.3761 .30902 L
Mistroke
.37729 .30902 L
.3783 .30902 L
.37941 .30902 L
.38057 .30902 L
.38166 .30902 L
.38267 .30902 L
.38361 .30902 L
.38463 .30902 L
.3857 .30902 L
.3868 .30902 L
.38797 .30902 L
.38907 .30902 L
.39007 .30902 L
.39125 .30902 L
.39192 .30902 L
.39253 .30902 L
.39366 .30902 L
.39485 .30902 L
.39601 .30902 L
.39728 .30902 L
.39848 .30902 L
.39959 .30902 L
.40069 .30902 L
.40168 .30902 L
.40283 .30902 L
.40391 .30902 L
.4051 .30902 L
.40635 .30902 L
.40742 .30902 L
.40859 .30902 L
.40986 .30902 L
.41056 .30902 L
.41121 .30902 L
.41246 .30902 L
.41365 .30902 L
.41466 .30902 L
.41577 .30902 L
.41694 .30902 L
.41803 .30902 L
.41904 .30902 L
.41998 .30902 L
.42105 .30902 L
.42207 .30902 L
.42317 .30902 L
.42434 .30902 L
.42544 .30902 L
.42645 .30902 L
.42763 .30902 L
.42829 .30902 L
.4289 .30902 L
Mistroke
.43003 .30902 L
.43122 .30902 L
.43239 .30902 L
.43305 .30902 L
.43366 .30902 L
.43478 .30902 L
.43597 .30902 L
.43704 .30902 L
.43803 .30902 L
.43913 .30902 L
.44031 .30902 L
.44149 .30902 L
.44216 .30902 L
.44279 .30902 L
.44405 .30902 L
.44475 .30902 L
.44539 .30902 L
.44654 .30902 L
.44779 .30902 L
.44897 .30902 L
.45005 .30902 L
.45107 .30902 L
.45216 .30902 L
.45318 .30902 L
.45412 .30902 L
.45522 .30902 L
.45642 .30902 L
.45755 .30902 L
.4586 .30902 L
.45978 .30902 L
.46089 .30902 L
.4619 .30902 L
.46298 .30902 L
.46416 .30902 L
.46541 .30902 L
.46647 .30902 L
.46764 .30902 L
.4689 .30902 L
.47006 .30902 L
.47066 .30902 L
.47133 .30902 L
.47203 .30902 L
.47268 .30902 L
.47388 .30902 L
.47498 .30902 L
.47619 .30902 L
.47745 .30902 L
.47852 .30902 L
.47967 .30902 L
.48074 .30902 L
Mistroke
.48172 .30902 L
.48288 .30902 L
.48412 .30902 L
.4853 .30902 L
.48639 .30902 L
.48755 .30902 L
.48879 .30902 L
.48997 .30902 L
.49104 .30902 L
.49229 .30902 L
.493 .30902 L
.49366 .30902 L
.49487 .30902 L
.49547 .30902 L
.49615 .30902 L
.4968 .30902 L
.49748 .30902 L
.49871 .30902 L
.49939 .30902 L
.50002 .30902 L
.50072 .30902 L
.50147 .30902 L
.50211 .30902 L
.50281 .30902 L
.50347 .30902 L
.50408 .30902 L
.50524 .30902 L
.50646 .30902 L
.50762 .30902 L
.50888 .30902 L
.51008 .30902 L
.51118 .30902 L
.51228 .30902 L
.51327 .30902 L
.51442 .30902 L
.5155 .30902 L
.51668 .30902 L
.51793 .30902 L
.519 .30902 L
.52017 .30902 L
.52143 .30902 L
.52213 .30902 L
.52278 .30902 L
.52403 .30902 L
.52521 .30902 L
.52622 .30902 L
.52733 .30902 L
.52849 .30902 L
.52958 .30902 L
.5306 .30902 L
Mistroke
.53153 .30902 L
.53255 .30902 L
.53363 .30902 L
.53472 .30902 L
.53589 .30902 L
.53699 .30902 L
.538 .30902 L
.53918 .30902 L
.53984 .30902 L
.54045 .30902 L
.54158 .30902 L
.54277 .30902 L
.54394 .30902 L
.5452 .30902 L
.5464 .30902 L
.54751 .30902 L
.54861 .30902 L
.5496 .30902 L
.55075 .30902 L
.55183 .30902 L
.55302 .30902 L
.55427 .30902 L
.55534 .30902 L
.55651 .30902 L
.55777 .30902 L
.55848 .30902 L
.55912 .30902 L
.56038 .30902 L
.56156 .30902 L
.56257 .30902 L
.56369 .30902 L
.56485 .30902 L
.56594 .30902 L
.56696 .30902 L
.56789 .30902 L
.56896 .30902 L
.56998 .30902 L
.57108 .30902 L
.57225 .30902 L
.57336 .30902 L
.57436 .30902 L
.57554 .30902 L
.5762 .30902 L
.57682 .30902 L
.57794 .30902 L
.57913 .30902 L
.5803 .30902 L
.58096 .30902 L
.58157 .30902 L
.58269 .30902 L
Mistroke
.58388 .30902 L
.58494 .30902 L
.58594 .30902 L
.58704 .30902 L
.58822 .30902 L
.5894 .30902 L
.59007 .30902 L
.59069 .30902 L
.59195 .30902 L
.59266 .30902 L
.5933 .30902 L
.59445 .30902 L
.59569 .30902 L
.59687 .30902 L
.59796 .30902 L
.59897 .30902 L
.60006 .30902 L
.60108 .30902 L
.60202 .30902 L
.60312 .30902 L
.60432 .30902 L
.60545 .30902 L
.6065 .30902 L
.60768 .30902 L
.6088 .30902 L
.6098 .30902 L
.61088 .30902 L
.61206 .30902 L
.61331 .30902 L
.61437 .30902 L
.61554 .30902 L
.6168 .30902 L
.61796 .30902 L
.61856 .30902 L
.61923 .30902 L
.61993 .30902 L
.62058 .30902 L
.62178 .30902 L
.62288 .30902 L
.62408 .30902 L
.62535 .30902 L
.62642 .30902 L
.62756 .30902 L
.62864 .30902 L
.62962 .30902 L
.63077 .30902 L
.63202 .30902 L
.6332 .30902 L
.63428 .30902 L
.63544 .30902 L
Mistroke
.63668 .30902 L
.63786 .30902 L
.63893 .30902 L
.64018 .30902 L
.64089 .30902 L
.64155 .30902 L
.64275 .30902 L
.64336 .30902 L
.64404 .30902 L
.64468 .30902 L
.64537 .30902 L
.64659 .30902 L
.64728 .30902 L
.64791 .30902 L
.64861 .30902 L
.64935 .30902 L
.65 .30902 L
.6507 .30902 L
.65136 .30902 L
.65197 .30902 L
.65313 .30902 L
.65435 .30902 L
.65551 .30902 L
.65677 .30902 L
.65796 .30902 L
.65907 .30902 L
.66016 .30902 L
.66116 .30902 L
.6623 .30902 L
.66338 .30902 L
.66456 .30902 L
.66581 .30902 L
.66688 .30902 L
.66805 .30902 L
.66931 .30902 L
.67001 .30902 L
.67066 .30902 L
.67191 .30902 L
.67309 .30902 L
.6741 .30902 L
.67521 .30902 L
.67637 .30902 L
.67746 .30902 L
.67848 .30902 L
.67941 .30902 L
.68043 .30902 L
.6815 .30902 L
.6826 .30902 L
.68377 .30902 L
.68487 .30902 L
Mistroke
.68587 .30902 L
.68705 .30902 L
.68772 .30902 L
.68833 .30902 L
.68946 .30902 L
.69065 .30902 L
.69181 .30902 L
.69308 .30902 L
.69427 .30902 L
.69538 .30902 L
.69648 .30902 L
.69748 .30902 L
.69862 .30902 L
.6997 .30902 L
.70089 .30902 L
.70214 .30902 L
.70321 .30902 L
.70438 .30902 L
.70564 .30902 L
.70635 .30902 L
.70699 .30902 L
.70825 .30902 L
.70943 .30902 L
.71044 .30902 L
.71155 .30902 L
.71272 .30902 L
.71381 .30902 L
.71482 .30902 L
.71575 .30902 L
.71678 .30902 L
.71785 .30902 L
.71895 .30902 L
.72012 .30902 L
.72122 .30902 L
.72222 .30902 L
.7234 .30902 L
.72407 .30902 L
.72468 .30902 L
.72581 .30902 L
.727 .30902 L
.72816 .30902 L
.72882 .30902 L
.72943 .30902 L
.73055 .30902 L
.73174 .30902 L
.73281 .30902 L
.7338 .30902 L
.7349 .30902 L
.73608 .30902 L
.73726 .30902 L
Mistroke
.73793 .30902 L
.73855 .30902 L
.73981 .30902 L
.74051 .30902 L
.74115 .30902 L
.7423 .30902 L
.74355 .30902 L
.74473 .30902 L
.74581 .30902 L
.74683 .30902 L
.74791 .30902 L
.74894 .30902 L
.74988 .30902 L
.75098 .30902 L
.75217 .30902 L
.7533 .30902 L
.75435 .30902 L
.75553 .30902 L
.75665 .30902 L
.75765 .30902 L
.75873 .30902 L
.75991 .30902 L
.76116 .30902 L
.76223 .30902 L
.7634 .30902 L
.76465 .30902 L
.76581 .30902 L
.76641 .30902 L
.76708 .30902 L
.76778 .30902 L
.76843 .30902 L
.76963 .30902 L
.77072 .30902 L
.77193 .30902 L
.7732 .30902 L
.77427 .30902 L
.77541 .30902 L
.77648 .30902 L
.77746 .30902 L
.77861 .30902 L
.77986 .30902 L
.78104 .30902 L
.78213 .30902 L
.78328 .30902 L
.78453 .30902 L
.7857 .30902 L
.78677 .30902 L
.78803 .30902 L
.78873 .30902 L
.78939 .30902 L
Mistroke
.7906 .30902 L
.79127 .30902 L
.79188 .30902 L
.79253 .30902 L
.79321 .30902 L
.79443 .30902 L
.79512 .30902 L
.79575 .30902 L
.79645 .30902 L
.7972 .30902 L
.79784 .30902 L
.79854 .30902 L
.7992 .30902 L
.79981 .30902 L
.80097 .30902 L
.8022 .30902 L
.80335 .30902 L
.80461 .30902 L
.8058 .30902 L
.80691 .30902 L
.808 .30902 L
.80899 .30902 L
.81014 .30902 L
.81122 .30902 L
.8124 .30902 L
.81365 .30902 L
.81471 .30902 L
.81588 .30902 L
.81714 .30902 L
.81785 .30902 L
.81849 .30902 L
.81974 .30902 L
.82093 .30902 L
.82193 .30902 L
.82304 .30902 L
.8242 .30902 L
.82529 .30902 L
.82631 .30902 L
.82724 .30902 L
.82826 .30902 L
.82933 .30902 L
.83043 .30902 L
.8316 .30902 L
.8327 .30902 L
.8337 .30902 L
.83488 .30902 L
.83555 .30902 L
.83616 .30902 L
.83729 .30902 L
.83848 .30902 L
Mistroke
.83964 .30902 L
.84091 .30902 L
.8421 .30902 L
.84321 .30902 L
.84431 .30902 L
.8453 .30902 L
.84645 .30902 L
.84753 .30902 L
.84871 .30902 L
.84996 .30902 L
.85103 .30902 L
.8522 .30902 L
.85346 .30902 L
.85417 .30902 L
.85481 .30902 L
.85607 .30902 L
.85725 .30902 L
.85826 .30902 L
.85937 .30902 L
.86054 .30902 L
.86163 .30902 L
.86264 .30902 L
.86357 .30902 L
.86459 .30902 L
.86567 .30902 L
.86677 .30902 L
.86793 .30902 L
.86904 .30902 L
.87004 .30902 L
.87122 .30902 L
.87189 .30902 L
.8725 .30902 L
.87362 .30902 L
.87482 .30902 L
.87598 .30902 L
.87664 .30902 L
.87725 .30902 L
.87837 .30902 L
.87956 .30902 L
.88062 .30902 L
.88162 .30902 L
.88271 .30902 L
.88389 .30902 L
.88507 .30902 L
.88574 .30902 L
.88636 .30902 L
.88762 .30902 L
.88832 .30902 L
.88897 .30902 L
.89011 .30902 L
Mistroke
.89136 .30902 L
.89254 .30902 L
.89362 .30902 L
.89463 .30902 L
.89572 .30902 L
.89675 .30902 L
.89769 .30902 L
.89878 .30902 L
.89998 .30902 L
.90111 .30902 L
.90216 .30902 L
.90334 .30902 L
.90445 .30902 L
.90545 .30902 L
.90654 .30902 L
.90772 .30902 L
.90897 .30902 L
.91003 .30902 L
.9112 .30902 L
.91205 .30902 L
.91283 .30902 L
.91369 .30902 L
.9146 .30902 L
.91539 .30902 L
.91613 .30902 L
.91694 .30902 L
.91782 .30902 L
.91855 .30902 L
.91935 .30902 L
.92019 .30902 L
.92097 .30902 L
.9217 .30902 L
.92236 .30902 L
.92313 .30902 L
.92385 .30902 L
.92464 .30902 L
.9255 .30902 L
.9264 .30902 L
.92724 .30902 L
.92802 .30902 L
.92874 .30902 L
.92957 .30902 L
.93036 .30902 L
.93121 .30902 L
.93211 .30902 L
.93296 .30902 L
.93373 .30902 L
.93464 .30902 L
.93563 .30902 L
.93656 .30902 L
Mistroke
.93741 .30902 L
Mfstroke
0 g
.02381 .30902 m
.93741 .30902 L
s
% Start of user PostScript
-2.3 0 2.6 0 MAarrowhead1
% End of user PostScript
.45264 0 m
.45264 .61803 L
s
% Start of user PostScript
0 -4. 0 4. MAarrowhead1
% End of user PostScript
gsave
.97619 .31298 -65.75 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.75 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
68.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.39671 .61011 -66.25 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.75 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
69.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.004 w
.50155 .61803 m
.50163 .61751 L
.51148 .56837 L
.52061 .53591 L
.5304 .5099 L
.54034 .48972 L
.54975 .47466 L
.56768 .45333 L
.57694 .44498 L
.58677 .43754 L
.60443 .42695 L
.62324 .41853 L
.64134 .41237 L
.66059 .40733 L
.67913 .40356 L
.69696 .40068 L
.71594 .39825 L
.73421 .39638 L
.75363 .39479 L
.77233 .39356 L
.79033 .3926 L
.80948 .39178 L
.82791 .39113 L
.84564 .39063 L
.86451 .39019 L
.88268 .38984 L
.90012 .38957 L
s
.02381 .22817 m
.04113 .22784 L
.06002 .2274 L
.07776 .22689 L
.09482 .22629 L
.11298 .22552 L
.13046 .22462 L
.14904 .22343 L
.16695 .22202 L
.18417 .22036 L
.20249 .21816 L
.22013 .21552 L
.23709 .21236 L
.25515 .20813 L
.27254 .20294 L
.29102 .19579 L
.30882 .18669 L
.32594 .175 L
.3355 .16673 L
.34416 .1578 L
.36171 .13388 L
.37034 .11802 L
.37967 .09633 L
.38861 .06931 L
.39805 .03071 L
.4023 .00846 L
s
.4023 .00846 m
.40365 0 L
s
.001 w
[ .01 .02 ] 0 setdash
.02381 .22978 m
.90012 .22978 L
s
.02381 .38825 m
.90012 .38825 L
s
gsave
.48993 .41202 -65.7813 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 21.3125 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
68.563 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.48993 .20601 -69.0313 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 21.3125 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Mathematica1
%%IncludeFont: Mathematica1
/Mathematica1 findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
69.500 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
75.063 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd

%%PSTrailer
grestore

pp_save restore

grestore
grestore
end
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2507 2497 a
 /End PSfrag
 2507 2497 a 2507 1966 a
 /Hide PSfrag
 2507
1966 a 1697 2029 a Fm(PSfrag)30 b(replacemen)m(ts)p 1697
2061 811 4 v 2507 2065 a
 /Unhide PSfrag
 2507 2065 a 2397 2145 a
  {
 2397
2145 a 2286 2156 a Fl(y)e Fm(=)d Fl(x)2397 2145 y
  } 0/Place PSfrag
 2397
2145 a 2484 2252 a
  {
 2484 2252 a 2461 2281 a Fm(1)2484
2252 y
  } 1/Place PSfrag
 2484 2252 a 2481 2369 a
  {
 2481 2369 a 2455 2389
a Fl(x)2481 2369 y
  } 2/Place PSfrag
 2481 2369 a 2483 2468 a
  {
 2483 2468
a 2459 2479 a Fl(y)2483 2468 y
  } 3/Place PSfrag
 2483 2468 a -153 2676
a Ft(Az)36 b(\023)-55 b(area)38 b(tangenship)s(erb)s(olikusz-f)s(\177)
-59 b(uggv)n(\023)-54 b(en)m(y)p -153 2711 1919 4 v -153
2833 a Fs(Miv)m(el)34 b(a)e(th)h(f)s(\177)-51 b(uggv)m(\023)-46
b(en)m(y)33 b(szigor)s(\023)-51 b(uan)32 b(monoton)g(n\177)-49
b(ov})g(o)-153 2950 y Fn(R)p Fs(-en,)32 b(ez)m(\023)-46
b(ert)34 b(in)m(v)m(ert\023)-49 b(alhat\023)g(o.)44 b(Legy)m(en)p
552 3042 597 4 v 552 3177 4 136 v 580 3152 a(arth)h(:=)27
b(th)1026 3109 y Fo(\000)p Fi(1)p 1146 3177 V 552 3180
597 4 v -153 3329 a Fs(A)32 b(arth)h(f)s(\177)-51 b(uggv)m(\023)-46
b(en)m(y)32 b(tula)5 b(jdons\023)-49 b(agai:)-5 3437
y Fk(D)65 3452 y Fi(arth)224 3437 y Fm(=)25 b Fk(R)397
3452 y Fi(th)493 3437 y Fm(=)g(\()p Fk(\000)p Fm(1)p
Fl(;)15 b Fm(1\),)93 b Fk(R)1055 3452 y Fi(arth)1214
3437 y Fm(=)25 b Fk(D)1380 3452 y Fi(th)1476 3437 y Fm(=)g
Fj(R)p Fm(;)-5 3564 y(p\023)-45 b(aratlan;)-5 3691 y(deriv\023)g
(alhat\023)g(o)32 b(\()p Fk(\000)p Fm(1)p Fl(;)15 b Fm(1\)-en,)29
b(\023)-43 b(es)231 3861 y(arth)398 3824 y Fo(0)437 3861
y Fl(x)25 b Fm(=)721 3800 y(1)p 620 3840 248 4 v 620
3923 a(1)20 b Fk(\000)g Fl(x)828 3897 y Fi(2)969 3861
y Fm(\()p Fl(x)25 b Fk(2)g Fm(\()p Fk(\000)p Fm(1)p Fl(;)15
b Fm(1\)\),)231 4013 y(arth)398 3976 y Fo(0)437 4013
y Fm(0)25 b(=)g(1;)-5 4140 y Fk(")31 b Fm(az)g Fj(R)p
Fm(-en;)-5 4267 y(k)m(onk\023)-45 b(av)31 b(\()p Fk(\000)p
Fm(1)p Fl(;)15 b Fm(0\)-n,)32 b(k)m(on)m(v)m(ex)g(\(0)p
Fl(;)15 b Fm(1\)-en,)22 4393 y(lim)-5 4451 y Fo(\000)p
Fi(1+0)206 4393 y Fm(arth)25 b(=)g Fk(\0001)p Fm(,)60
b(lim)742 4451 y Fi(1)p Fo(\000)p Fi(0)898 4393 y Fm(arth)25
b(=)g(+)p Fk(1)p Fm(,)-5 4615 y(arth)15 b Fl(x)25 b Fm(=)360
4553 y(1)p 360 4594 46 4 v 360 4677 a(2)436 4615 y Fk(\001)20
b Fm(ln)582 4553 y(1)h(+)f Fl(x)p 582 4594 209 4 v 582
4677 a Fm(1)h Fk(\000)f Fl(x)861 4615 y Fm(\()p Fl(x)26
b Fk(2)f Fm(\()p Fk(\000)p Fm(1)p Fl(;)15 b Fm(1\)\);)437
5722 y
 /PSfrag where{pop(szf)[[0()0.8 0]](x)[[1()0.6 0]](y)[[2()0.6 0]](e)[[3()0.6
0]](me)[[4()0.6 0]]5 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 437 5722 a @beginspecial 135 @llx 3 @lly 376 @urx
291 @ury 992 @rwi @setspecial
%%BeginDocument: arth.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 135 3 376 291
%%HiResBoundingBox: 135.563 3.1875 375.063 290.625
%%Creator: (Mathematica 4.0 for Microsoft Windows)
%%CreationDate: (Tuesday, October 31, 2000) (8:55:23)
%%Title: Clipboard
%%DocumentNeededResources: font Times-Italic
%%+ font Helvetica
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 293.813 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
135.562500 290.625000 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		239.500000 def
/Mheight	287.437500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: 1.2 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.436508 0.31746 0.6 0.2 [
[ 0 0 0 0 ]
[ 1 1.2 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1.2 L
0 1.2 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
1 1 1 r
.001 w
[ ] 0 setdash
.02381 .6 m
.05729 .6 L
.09381 .6 L
.12811 .6 L
.16109 .6 L
.1962 .6 L
.22999 .6 L
.26591 .6 L
.30051 .6 L
.33381 .6 L
.36922 .6 L
.40333 .6 L
.43612 .6 L
.47104 .6 L
.50464 .6 L
.54037 .6 L
.57478 .6 L
.60788 .6 L
.64311 .6 L
.67702 .6 L
.71306 .6 L
.74778 .6 L
.78119 .6 L
.81673 .6 L
.84921 .6 L
s
0 g
.02381 .6 m
.84921 .6 L
s
% Start of user PostScript
-1.3 0 1.3 0 MAarrowhead1
% End of user PostScript
.43651 0 m
.43651 1.2 L
s
% Start of user PostScript
0 -3. 0 3. MAarrowhead1
% End of user PostScript
gsave
.88222 .61 -65.75 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
68.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.5 1.17 -66.25 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
69.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.004 w
.12222 .07067 m
.1237 .10921 L
.12529 .13876 L
.12815 .17691 L
.13154 .20918 L
.13464 .23178 L
.14136 .26875 L
.14772 .29487 L
.16106 .33528 L
.17553 .36736 L
.2025 .41117 L
.22847 .44309 L
.25345 .46851 L
.28004 .49203 L
.30562 .51233 L
.33283 .5322 L
.35904 .55019 L
.38425 .56677 L
.41107 .58394 L
.4369 .60025 L
.46434 .61758 L
.49079 .63454 L
.51623 .65132 L
.54329 .67 L
.56935 .68917 L
.59442 .70917 L
.6211 .73293 L
.64678 .7594 L
.67407 .79383 L
.68773 .81501 L
.70037 .83838 L
.71264 .86646 L
.71891 .88397 L
.72567 .90651 L
.73237 .93464 L
.73531 .94973 L
.73852 .96914 L
.74136 .98992 L
.7444 1.01796 L
.74608 1.03752 L
.7476 1.05925 L
.74914 1.08707 L
.75058 1.12293 L
.75079 1.12933 L
s
.001 w
.05556 .36 m
.08646 .37947 L
.12017 .40071 L
.15183 .42065 L
.18227 .43983 L
.21468 .46025 L
.24588 .4799 L
.27903 .50079 L
.31098 .52091 L
.34171 .54028 L
.3744 .56087 L
.40588 .58071 L
.43615 .59977 L
.46838 .62008 L
.4994 .63962 L
.53238 .6604 L
.56414 .68041 L
.5947 .69966 L
.62721 .72014 L
.65852 .73987 L
.69178 .76082 L
.72384 .78102 L
.75468 .80045 L
.78748 .82111 L
.81746 .84 L
s
[ .01 .02 ] 0 setdash
.11905 0 m
.11905 1.2 L
s
.75397 0 m
.75397 1.2 L
s
gsave
.69048 .54 -65.7813 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(e) show
68.563 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .86 -69.625 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(szf) show
76.250 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.15079 .54 -70.125 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(me) show
77.250 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

%%Trailer
%%EOF

%%EndDocument
 @endspecial 437 5722 a
 /End PSfrag
 437 5722 a 437 5032 a
 /Hide PSfrag
 437 5032
a -432 5101 a Fs(PSfrag)33 b(replacemen)m(ts)p -432 5136
869 4 v 437 5140 a
 /Unhide PSfrag
 437 5140 a 318 5226 a
  {
 318 5226 a 199
5238 a Fr(y)e Fs(=)d Fr(x)318 5226 y
  } 0/Place PSfrag
 318 5226 a 409 5351
a
  {
 409 5351 a 381 5373 a Fr(x)409 5351 y
  } 1/Place PSfrag
 409 5351 a 411
5458 a
  {
 411 5458 a 385 5470 a Fr(y)411 5458 y
  } 2/Place PSfrag
 411 5458
a 413 5573 a
  {
 413 5573 a 389 5605 a Fs(1)413 5573 y
  } 3/Place PSfrag
 413
5573 a 374 5685 a
  {
 374 5685 a 311 5713 a Fp(\000)p Fs(1)374
5685 y
  } 4/Place PSfrag
 374 5685 a 1854 5742 4 3136 v 1976 2676 a Ft(Az)36
b(\023)-55 b(area)38 b(k)m(otangenship)s(erb)s(olikusz-f)s(\177)-59
b(uggv)n(\023)-54 b(en)m(y)p 1976 2711 2031 4 v 1976
2833 a Fs(A)33 b(cth)g(f)s(\177)-51 b(uggv)m(\023)-46
b(en)m(y)32 b(in)m(v)m(ert\023)-49 b(alhat\023)g(o.)1976
2950 y(Legy)m(en)p 2697 3042 684 4 v 2697 3177 4 136
v 2725 3152 a(arcth)45 b(:=)28 b(cth)3258 3109 y Fo(\000)p
Fi(1)p 3377 3177 V 2697 3180 684 4 v 1976 3329 a Fs(A)33
b(arcth)f(f)s(\177)-51 b(uggv)m(\023)-46 b(en)m(y)33
b(tula)5 b(jdons\023)-49 b(agai:)2124 3437 y Fk(D)2194
3452 y Fi(arcth)2385 3437 y Fm(=)25 b Fk(R)2558 3452
y Fi(cth)2660 3437 y Fm(,)61 b Fk(R)2823 3452 y Fi(arcth)3013
3437 y Fm(=)25 b Fk(D)3179 3452 y Fi(cth)3281 3437 y
Fm(;)2124 3564 y(p\023)-45 b(aratlan;)2124 3691 y(deriv\023)g
(alhat\023)g(o,)30 b(\023)-43 b(es)2361 3856 y(arcth)2568
3819 y Fo(0)2606 3856 y Fl(x)25 b Fm(=)2891 3794 y(1)p
2789 3835 248 4 v 2789 3918 a(1)c Fk(\000)f Fl(x)2998
3892 y Fi(2)3138 3856 y Fm(\()p Fk(j)p Fl(x)p Fk(j)26
b Fl(>)f Fm(1\);)2124 4021 y Fk(#)31 b Fm(\()p Fk(\0001)p
Fl(;)15 b Fk(\000)p Fm(1\)-en,)32 b Fk(#)e Fm(\(1)p Fl(;)15
b Fm(+)p Fk(1)p Fm(\)-en;)2124 4148 y(k)m(onk\023)-45
b(av)31 b(\()p Fk(\0001)p Fl(;)15 b Fk(\000)p Fm(1\)-en,)32
b(k)m(on)m(v)m(ex)g(\(1)p Fl(;)15 b Fm(+)p Fk(1)p Fm(\)-n;)2124
4275 y(lim)2125 4330 y Fo(\0001)2281 4275 y Fm(arcth)25
b(=)g(0,)89 b(lim)2741 4333 y Fo(\000)p Fi(1)p Fo(\000)p
Fi(0)2951 4275 y Fm(arcth)26 b(=)f Fk(\0001)p Fm(,)2124
4439 y(lim)2125 4494 y Fi(+)p Fo(1)2281 4439 y Fm(arcth)g(=)g(0,)62
b(lim)2741 4497 y Fi(1+0)2897 4439 y Fm(arth)25 b(=)g(+)p
Fk(1)p Fm(,)2124 4660 y(arcth)16 b Fl(x)25 b Fm(=)2530
4599 y(1)p 2530 4640 46 4 v 2530 4723 a(2)2606 4660 y
Fk(\001)20 b Fm(ln)2752 4599 y Fl(x)g Fm(+)g(1)p 2752
4640 209 4 v 2752 4723 a Fl(x)g Fk(\000)g Fm(1)3031 4660
y(\()p Fk(j)p Fl(x)p Fk(j)26 b Fl(>)f Fm(1\);)2271 5703
y
 /PSfrag where{pop(szf)[[0()0.4 0]](x)[[1()0.6 0]](y)[[2()0.6 0]](e)[[3()0.6
0]](me)[[4()0.6 0]]5 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 2271 5703 a @beginspecial 91 @llx 3 @lly 322 @urx 142
@ury 1842 @rwi @setspecial
%%BeginDocument: arcth.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 91 3 322 142
%%HiResBoundingBox: 91.5625 3.1875 321.938 141.375
%%Creator: (Mathematica 4.0 for Microsoft Windows)
%%CreationDate: (Tuesday, October 31, 2000) (9:42:17)
%%Title: Clipboard
%%DocumentNeededResources: font Times-Italic
%%+ font Helvetica
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Times-Italic
%%+ Helvetica
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 144.563 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
91.562500 141.375000 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	138.187500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .6 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.481685 0.0817635 0.3 0.1 [
[ 0 0 0 0 ]
[ 1 .6 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .6 L
0 .6 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.015 0 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
1 1 1 r
.001 w
[ ] 0 setdash
.02381 .3 m
.06096 .3 L
.10147 .3 L
.13952 .3 L
.17612 .3 L
.21507 .3 L
.25256 .3 L
.29241 .3 L
.33081 .3 L
.36774 .3 L
.40704 .3 L
.44487 .3 L
.48125 .3 L
.51999 .3 L
.55727 .3 L
.59691 .3 L
.63509 .3 L
.67182 .3 L
.7109 .3 L
.74852 .3 L
.78851 .3 L
.82703 .3 L
.8641 .3 L
.90353 .3 L
.93956 .3 L
s
0 g
.02381 .3 m
.93956 .3 L
s
% Start of user PostScript
-5.6 0 5.6 0 MAarrowhead1
% End of user PostScript
.48168 0 m
.48168 .6 L
s
% Start of user PostScript
0 -4. 0 3. MAarrowhead1
% End of user PostScript
gsave
.97619 .305 -65.75 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
68.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.45716 .585 -66.25 -11.875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.75 translate 1 -1 scale
63.000 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.188 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
69.500 15.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.004 w
.56427 .56516 m
.56471 .54365 L
.56511 .5299 L
.56558 .51771 L
.56602 .50845 L
.5668 .49539 L
.56765 .48436 L
.56958 .46605 L
.57135 .45383 L
.57498 .43599 L
.57681 .42915 L
.57883 .42269 L
.58278 .41235 L
.58703 .40357 L
.59471 .39148 L
.60267 .38213 L
.61024 .37514 L
.62464 .36504 L
.63996 .35717 L
.65471 .35134 L
.67038 .3464 L
.68548 .34251 L
.70001 .33937 L
.71546 .33652 L
.73034 .33415 L
.74465 .33216 L
.75989 .33028 L
.77455 .32868 L
.79014 .32716 L
.80516 .32584 L
.81961 .32469 L
.83498 .32357 L
.84978 .32259 L
.864 .32172 L
.87915 .32087 L
.89374 .32011 L
.90924 .31936 L
.92321 .31873 L
s
.02381 .28195 m
.03903 .28131 L
.05564 .28057 L
.07123 .27981 L
.08623 .27902 L
.10219 .27811 L
.11756 .27716 L
.13389 .27604 L
.14962 .27486 L
.16476 .2736 L
.18086 .27212 L
.19637 .27052 L
.21128 .26879 L
.22716 .2667 L
.24243 .26439 L
.25868 .26155 L
.27433 .25831 L
.28938 .2546 L
.30539 .24979 L
.32081 .24396 L
.3372 .23585 L
.34542 .23068 L
.35299 .22497 L
.36084 .21771 L
.36818 .20916 L
.3756 .19779 L
.37953 .19004 L
.38374 .17963 L
.38752 .16739 L
.38965 .15856 L
.39163 .14844 L
.39335 .1373 L
.39525 .12078 L
.39621 .10961 L
.39671 .1025 L
.39724 .09367 L
.3977 .0843 L
.39821 .07144 L
.39867 .05583 L
.3991 .03484 L
s
.001 w
[ .01 .02 ] 0 setdash
.56345 0 m
.56345 .6 L
s
.39992 0 m
.39992 .6 L
s
gsave
.59615 .27 -65.7813 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(e) show
68.563 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.43263 .27 -70.125 -10.6563 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 21.3125 translate 1 -1 scale
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(me) show
77.250 14.188 moveto
%%IncludeResource: font Helvetica
%%IncludeFont: Helvetica
/Helvetica findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2271 5703 a
 /End PSfrag
 2271 5703 a 2271 5014 a
 /Hide PSfrag
 2271
5014 a 1402 5083 a Fs(PSfrag)33 b(replacemen)m(ts)p 1402
5118 869 4 v 2271 5122 a
 /Unhide PSfrag
 2271 5122 a 2152 5207 a
  {
 2152
5207 a 2033 5219 a Fr(y)e Fs(=)d Fr(x)2152 5207 y
  } 0/Place PSfrag
 2152
5207 a 2243 5333 a
  {
 2243 5333 a 2215 5355 a Fr(x)2243
5333 y
  } 1/Place PSfrag
 2243 5333 a 2245 5440 a
  {
 2245 5440 a 2219 5452
a Fr(y)2245 5440 y
  } 2/Place PSfrag
 2245 5440 a 2247 5555 a
  {
 2247 5555
a 2223 5587 a Fs(1)2247 5555 y
  } 3/Place PSfrag
 2247 5555 a 2208 5667
a
  {
 2208 5667 a 2145 5695 a Fp(\000)p Fs(1)2208 5667 y
  } 4/Place PSfrag

2208 5667 a 1736 6018 a Ff(3)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

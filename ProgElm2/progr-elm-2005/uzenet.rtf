{\rtf1\ansi\ansicpg1250\uc1 \deff0\deflang1033\deflangfe1038{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}
{\f16\froman\fcharset238\fprq2 Times New Roman CE;}{\f17\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f19\froman\fcharset161\fprq2 Times New Roman Greek;}{\f20\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f21\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f64\froman\fcharset238\fprq2 Tms Rmn CE;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\widctlpar\adjustright \cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}}{\info{\title \'dczenet alap\'fa modellek}{\author x y}{\operator RE}{\creatim\yr2002\mo3\dy18\hr16\min54}{\revtim\yr2002\mo3\dy18\hr16\min54}{\version2}{\edmins0}
{\nofpages13}{\nofwords2725}{\nofchars15538}{\*\company  }{\nofcharsws19081}{\vern89}}\paperw11907\paperh16834\margl1798\margr1798\margt1441\margb1441 
\widowctrl\ftnbj\aenddoc\noextrasprl\prcolbl\cvmme\sprsspbf\brkfrm\swpbdr\lytprtmet\hyphcaps0\formshade\fracwidth\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \binfsxn1\binsxn1\linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl 
{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \qc\widctlpar\adjustright \cgrid {\b\i\fs36 \'dczenet alap\'fa modellek
\par }\pard \qj\widctlpar\adjustright {\fs36 
\par }\pard \qj\widctlpar\adjustright {\tab Az \'fczenet alap\'fa redszerek eset\'e9n a folyamatok k\'f6z\'f6tti kommunik\'e1ci\'f3 eszk\'f6ze az \'fczenet az osztott v\'e1ltoz\'f3k helyett. Egyik folyanat elk\'fcld egy \'fczenetet a m\'e1sik sz\'e1m\'e1
ra, ami v\'e1r erre az \'fczenetre (SEND a message - WAIT for a message).
\par }\pard \qj\widctlpar\adjustright {A konkurens programoz\'e1si nyelvek tervez\'f5i sz\'e1m\'e1ra fontos k\'e9rd\'e9sek a k\'f6vetkez\'f5k:
\par \tab - milyen legyen az \'fczenetk\'fcld\'e9s m\'f3dja;
\par \tab - hogyan azonos\'edtsa a rendszer az \'fczenetet k\'fcld\'f5 ill. fogad\'f3 folyamatokat.
\par }{\i Az \'fczenetk\'fcld\'e9s m\'f3dja lehet:}{
\par \tab - aszinkron: a folyamat elk\'fcldi az \'fczenetet a partner postal\'e1d\'e1j\'e1ba \'e9s folytatja \tab feladat\'e1t (k\'f6znapi anal\'f3gia a lev\'e9lfelad\'e1s);
\par \tab - szinkron (egyszer\'fb randev\'fa): a folyamat csak akkor k\'fcldi el a partnernek az \tab \'fczenetet, ha az \'e9ppen fogadni tudja (k\'f6znapi anal\'f3gia telex \'fczenet);
\par \tab - t\'e1voli felh\'edv\'e1s, remote invocation (kiterjesztett randev\'fa): a folyamat elk\'fcldi \tab szinkron m\'f3don az \'fczenet\'e9t \'e9s v\'e1laszt is v\'e1r (k\'f6znapi anal\'f3gia a \tab telefonbesz\'e9lget\'e9s).
\par }{\i A foyamatok azonos\'edt\'e1sa:
\par \tab }{- a folyamatok megnevez\'e9se lehet k\'f6zvetlen, vagy k\'f6zvetett;
\par \tab - a folyamatok megnevez\'e9si s\'e9m\'e1ja lehet szimmetrikus, vagy aszimmetrikus.
\par  A legegyszer\'fbbb p\'e9ld\'e1ul az, ha k\'f6zvetlen\'fcl megnevezz\'fck a folyamatokat \'e9s a s\'e9ma szimmetrikus:
\par \tab \tab SEND message TO ProcessName
\par \tab \tab WAIT message FROM ProcessName.
\par Aszimmetrikus \'fczenetk\'fcld\'e9s s\'e9m\'e1ja p\'e9ld\'e1ul a k\'f6vetkez\'f5 lehet:
\par \tab \tab SEND message TO ProcessName
\par \tab \tab WAIT message.
\par Ez ut\'f3bbi s\'e9ma k\'fcl\'f6n\'f6sen el\'f5ny\'f6s lehet abban az esetben, amikor a folyamatok k\'f6z\'f6tt client/server kapcsolat l\'e9tezik. Ebben az esetben a client folyamatnak meg kell neveznie a server folyamatot, ha \'fczenetet akar elk\'fc
ldeni neki, de a server folyamatnak nem kell megneveznie a client folyamatot, mivel b\'e1rmelyik client folyamat k\'fcldhet neki \'fczenetet.
\par Ha a folyamatok k\'f6zvetlen megnevez\'e9s\'e9re nincs m\'f3d, akkor a k\'f6zvetett megnevez\'e9st alkalmazhatjuk, p\'e9ld\'e1ul lev\'e9ll\'e1d\'e1t vagy logikai csatorna neveket haszn\'e1lunk:
\par \tab \tab SEND message TO mailbox
\par \tab \tab WAIT message FROM mailbox.
\par 
\par }{\i Kommunik\'e1ci\'f3 (logikai) csatorn\'e1kon kereszt\'fcl:
\par }{A logikai csatorn\'e1kat szinkron \'fczenetv\'e1lt\'e1s megval\'f3s\'edt\'e1s\'e1ra az Occam nyelvben (1984) \'e9s aCSP nyelvben (Hoare, 1985) is alkalmazt\'e1k p\'e9ld\'e1ul. Ebben az esetben a folyamatok n\'e9vvel azonos\'edtott csatorn\'e1
kon szinkron m\'f3don kommunik\'e1lnak. A megfelel\'f5 utas\'edt\'e1sok szintaxisa:
\par \tab ch ! e \tab \tab (* k\'fcldd el az e kifejez\'e9s \'e9rt\'e9k\'e9t a ch csatorn\'e1n kereszt\'fcl *)\tab \tab \tab \tab (* szinkron m\'f3don *)
\par \tab ch ? v\tab \tab (* olvass be szinkron m\'f3don egy \'e9rt\'e9ket a ch csatorn\'e1r\'f3l \'e9s *) \tab \tab \tab (* add \'e9rt\'e9k\'fcl a v v\'e1ltoz\'f3nak*)
\par 
\par }{\i 
\par }\pard \qj\widctlpar\adjustright {\i 
\par A Pascal-FC nyelv csatorna modellje:
\par }\pard \qj\widctlpar\adjustright {A Pascal nyelv er\'f5sen t\'edpusos nyelv. \'cdgy egy \'e9rt\'e9kad\'e1s csak akkor leg\'e1lis, ha mind a kifejez\'e9snek, mind a v\'e1ltoz\'f3nak ugyanaz a t\'edpusa. Ez \'e9rv\'e9nyes a Pascal-FC nyelvre is \'e9s annak 
\'fczenetkezel\'f5 eszk\'f6zeire. Az \'fczenetet k\'f6zvet\'edt\'f5 csatorn\'e1kat a program elej\'e9n deklar\'e1lni kell, meg kell adni t\'edpusukat.
\par P\'e9ld\'e1ul.
\par \tab }{\b var \tab }{link : }{\b channel of }{integer;
\par 
\par \tab }{\b type \tab }{packet =
\par \tab \tab }{\b record 
\par \tab \tab \tab }{(* valamilyen alkalmas strukt\'fara *)
\par \tab \tab }{\b end;
\par \tab var \tab }{network : }{\b channel of }{packet;
\par 
\par A ford\'edtoprogram ellen\'f5rzi, hogy minden csatorn\'e1t korrekt\'fcl haszn\'e1lunk-e a programban. Egy csatorn\'e1n egy egyszer\'fb vagy egy strukt\'far\'e1lt adat k\'fcldhet\'f5 \'e1t szinkron m\'f3don egyetlen send \'e9s receive m\'fbveletp\'e1rral.

\par P\'e9lda.
\par \tab }{\b program }{sketch;
\par \tab }{\b type }{IntChan = }{\b channel of }{integer;
\par \tab }{\b var \tab }{ch1 : IntChans;
\par \tab \tab }{\b process }{P;
\par \tab \tab }{\b var \tab }{item : integer;
\par \tab \tab }{\b begin
\par \tab \tab \tab repeat
\par \tab \tab \tab \tab ...
\par \tab \tab \tab \tab }{ch1 ? item;
\par \tab \tab \tab \tab ...
\par \tab \tab \tab }{\b forever
\par \tab \tab end;
\par 
\par }{\tab \tab }{\b process }{Q;
\par \tab \tab }{\b begin
\par \tab \tab \tab repeat
\par \tab \tab \tab \tab ...
\par \tab \tab \tab \tab }{ch1 ! 42;
\par \tab \tab \tab \tab ...
\par \tab \tab \tab }{\b forever
\par \tab \tab end;
\par 
\par }{\tab }{\b begin
\par \tab \tab cobegin
\par \tab \tab \tab }{P;Q}{\b 
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab coend
\par }\pard \qj\widctlpar\adjustright {\b \tab end.
\par 
\par }{A fenti konkurens program mindk\'e9t folyamata egy v\'e9gtelen ciklus. A Q folyamat v\'e9gtelen sokszor \'e1tk\'fcldi a 42 eg\'e9sz \'e9rt\'e9ket a P folyamatnak szinkron m\'f3don.
\par 
\par 
\par }{\i A pr\'edmsz\'e1m szita egy realiz\'e1ci\'f3ja.
\par }{A feladat ismert a szakirodalomb\'f3l. Egy folyamat gener\'e1lja sorban a term\'e9szetes sz\'e1mokat 2-t\'f5l kezdve \'e9s a sz\'fbr\'f5 folyamatok ezeket a sz\'e1mokat feldolgozva meghat\'e1rozz\'e1k, hogy ezek k\'f6z\'fcl melyek a pr\'edmsz\'e1
mok. A folyamatok topogr\'e1fi\'e1ja a k\'f6vetkez\'f5:
\par 
\par 
\par        }{\pard\plain \qj\widctlpar\adjustright \cgrid {\object\objemb\rsltmerge\objw7280\objh2320{\*\objclass MSDraw}{\*\objdata 0105000002000000070000004d534472617700000000000000000080090000
08002532fc0f010009000003a304000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a00000026060f00a9004d72456402009f0000009d000100160016007c0298010000000000000100030000000000ffffff0000000000ffffff000100
000100000001000000000001000000000000010c0053797374656d000300a700ff00f00103010601030050000300e100ff00f10103100000000000ffffff00c0c0c00080808000ff00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e0000002606
0f0012004d72456403000800000048011801a70cb804050000000b0218014801050000000c02a0035f0b030000001e000400000003010800050000000102ffffff000500000009020000000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f001200ffff
ffff00000800000048011801a70cb8040e00000026060f0012004d72456403000800000050012001a002e00107000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001b04e401a4021c014c010e00000026060f0012004d7245640300080000006003
2001b004e001070000001b04e401b4041c015c030e00000026060f0012004d72456403000800000070052001c006e001070000001b04e401c4061c016c050e00000026060f0012004d72456403000800000030092001800ae001070000001b04e401840a1c012c090e00000026060f0012004d724564030008000000400b
2001900ce001070000001b04e401940c1c013c0b0e00000026060f0012004d72456403000800000060030003800ac003070000001b04c403840afc025c030b00000026060f000c004d72456401000200000000000800000025030200a0028001600380010b00000026060f000c004d724564010002000000000008000000
25030200b0048001700580010b00000026060f000c004d72456401000200000000000800000025030200c0068001200780010b00000026060f000c004d7245640100020000000000080000002503020070088001300980010b00000026060f000c004d72456401000200000000000800000025030200800a8001400b8001
0b00000026060f000c004d724564010002000000000008000000250302002004e001200400030b00000026060f000c004d724564010002000000000008000000250302000006e001000600030b00000026060f000c004d72456401000200000000000800000025030200c009e001c00900030b00000026060f000c004d72
456401000200000000000800000025030200f006c003f006b0040b00000026060f000c004d7245640100020000000000080000002503020030035001600380010b00000026060f000c004d72456401000200000000000800000025030200600380013003b0010b00000026060f000c004d72456401000200000000000800
00002503020040055001700580010b00000026060f000c004d72456401000200000000000800000025030200700580014005b0010b00000026060f000c004d72456401000200000000000800000025030200f0068001200780010b00000026060f000c004d72456401000200000000000800000025030200f00650012007
80010b00000026060f000c004d7245640100020000000000080000002503020020078001f006b0010b00000026060f000c004d7245640100020000000000080000002503020000095001300980010b00000026060f000c004d72456401000200000000000800000025030200300980010009b0010b00000026060f000c00
4d72456401000200000000000800000025030200100b5001400b80010b00000026060f000c004d72456401000200000000000800000025030200400b8001100bb0010b00000026060f000c004d72456401000200000000000800000025030200f003d002200400030b00000026060f000c004d7245640100020000000000
0800000025030200200400035004d0020b00000026060f000c004d724564010002000000000008000000250302000006d002000600030b00000026060f000c004d72456401000200000000000800000025030200d005d002000600030b00000026060f000c004d7245640100020000000000080000002503020000060003
3006d0020b00000026060f000c004d724564010002000000000008000000250302009009d002c00900030b00000026060f000c004d72456401000200000000000800000025030200c0090003f009d0020b00000026060f000c004d72456401000200000000000800000025030200c0068004f006b0040b00000026060f00
0c004d72456401000200000000000800000025030200f006b00420078004040000002e011800040000000201010016000000fb02b0ff00000000000090010000000000000012482d54696d6573204e657720526f6d616e00375d040000002d0102000b000000320ab0015001070000006e756d626572730010000000fb02
a0ff0000000000009001000000000000002053797374656d0008040000002d01030004000000f00102000b000000320ab00190030800000066696c74657220310b000000320ab001a0050800000066696c74657220320b000000320ab00160090800000066696c746572204e16000000fb02b0ff00000000000090010000
000000000012482d54696d6573204e657720526f6d616e00375d040000002d01020004000000f00103000b000000320ab001400b08000000636f6e73756d657216000000fb02a0ff00000000000090010000000000000012482d54696d6573204e657720526f6d616e00035d040000002d01030004000000f00102000b00
0000320a90036006070000006f757470726f630010000000fb02a0ff0000000000009001000000000000002053797374656d0008040000002d01020004000000f001030009000000320ab001b007030000002e2e2e000a00000026060f000a00ffffffff01000000000010000000fb021000070000000000bc0200000000
0102022253797374656d0006040000002d01030004000000f001020008000000fa02050000000000ffffff00040000002d01020004000000f001010007000000fc020100000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000131212122116161a211f12210b0b
0707120f15120b0b1209070b0cb8fff0b3100c3f06b8fff8b3100c3f0cb8fff0b10b743b034801050000050000000d0000004d45544146494c4550494354002632000004f0ffff5009000008002632fc0f0000
010009000003a304000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a00000026060f00a9004d72456402009f0000009d000100160016007c0298010000000000000100030000000000ffffff0000000000ffffff000100000100000001
000000000001000000000000010c0053797374656d000300a700ff00f00103010601030050000300e100ff00f10103100000000000ffffff00c0c0c00080808000ff00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d72
456403000800000048011801a70cb804050000000b0218014801050000000c02a0035f0b030000001e000400000003010800050000000102ffffff000500000009020000000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f001200ffffffff00000800
000048011801a70cb8040e00000026060f0012004d72456403000800000050012001a002e00107000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001b04e401a4021c014c010e00000026060f0012004d72456403000800000060032001b004e001
070000001b04e401b4041c015c030e00000026060f0012004d72456403000800000070052001c006e001070000001b04e401c4061c016c050e00000026060f0012004d72456403000800000030092001800ae001070000001b04e401840a1c012c090e00000026060f0012004d724564030008000000400b2001900ce001
070000001b04e401940c1c013c0b0e00000026060f0012004d72456403000800000060030003800ac003070000001b04c403840afc025c030b00000026060f000c004d72456401000200000000000800000025030200a0028001600380010b00000026060f000c004d72456401000200000000000800000025030200b004
8001700580010b00000026060f000c004d72456401000200000000000800000025030200c0068001200780010b00000026060f000c004d7245640100020000000000080000002503020070088001300980010b00000026060f000c004d72456401000200000000000800000025030200800a8001400b80010b0000002606
0f000c004d724564010002000000000008000000250302002004e001200400030b00000026060f000c004d724564010002000000000008000000250302000006e001000600030b00000026060f000c004d72456401000200000000000800000025030200c009e001c00900030b00000026060f000c004d72456401000200
000000000800000025030200f006c003f006b0040b00000026060f000c004d7245640100020000000000080000002503020030035001600380010b00000026060f000c004d72456401000200000000000800000025030200600380013003b0010b00000026060f000c004d72456401000200000000000800000025030200
40055001700580010b00000026060f000c004d72456401000200000000000800000025030200700580014005b0010b00000026060f000c004d72456401000200000000000800000025030200f0068001200780010b00000026060f000c004d72456401000200000000000800000025030200f0065001200780010b000000
26060f000c004d7245640100020000000000080000002503020020078001f006b0010b00000026060f000c004d7245640100020000000000080000002503020000095001300980010b00000026060f000c004d72456401000200000000000800000025030200300980010009b0010b00000026060f000c004d7245640100
0200000000000800000025030200100b5001400b80010b00000026060f000c004d72456401000200000000000800000025030200400b8001100bb0010b00000026060f000c004d72456401000200000000000800000025030200f003d002200400030b00000026060f000c004d7245640100020000000000080000002503
0200200400035004d0020b00000026060f000c004d724564010002000000000008000000250302000006d002000600030b00000026060f000c004d72456401000200000000000800000025030200d005d002000600030b00000026060f000c004d72456401000200000000000800000025030200000600033006d0020b00
000026060f000c004d724564010002000000000008000000250302009009d002c00900030b00000026060f000c004d72456401000200000000000800000025030200c0090003f009d0020b00000026060f000c004d72456401000200000000000800000025030200c0068004f006b0040b00000026060f000c004d724564
01000200000000000800000025030200f006b00420078004040000002e011800040000000201010016000000fb02b0ff00000000000090010000000000000012482d54696d6573204e657720526f6d616e00375d040000002d0102000b000000320ab0015001070000006e756d626572730010000000fb02a0ff00000000
00009001000000000000002053797374656d0008040000002d01030004000000f00102000b000000320ab00190030800000066696c74657220310b000000320ab001a0050800000066696c74657220320b000000320ab00160090800000066696c746572204e16000000fb02b0ff00000000000090010000000000000012
482d54696d6573204e657720526f6d616e00375d040000002d01020004000000f00103000b000000320ab001400b08000000636f6e73756d657216000000fb02a0ff00000000000090010000000000000012482d54696d6573204e657720526f6d616e00035d040000002d01030004000000f00102000b000000320a9003
6006070000006f757470726f630010000000fb02a0ff0000000000009001000000000000002053797374656d0008040000002d01020004000000f001030009000000320ab001b007030000002e2e2e000a00000026060f000a00ffffffff01000000000010000000fb021000070000000000bc0200000000010202225379
7374656d0006040000002d01030004000000f001020008000000fa02050000000000ffffff00040000002d01020004000000f001010007000000fc020100000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff0300000000000000}{\result {
{\pict\wmetafile8\picw12837\pich4092\picwgoal7279\pichgoal2320 
010009000003a304000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a00000026060f00a9004d72456402009f0000009d000100160016007c0298010000000000000100030000000000ffffff0000000000ffffff00010000010000000100
0000000001000000000000010c0053797374656d000300a700ff00f00103010601030050000300e100ff00f10103100000000000ffffff00c0c0c00080808000ff00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d724564
03000800000048011801a70cb804050000000b0218014801050000000c02a0035f0b030000001e000400000003010800050000000102ffffff000500000009020000000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f001200ffffffff00000800000048
011801a70cb8040e00000026060f0012004d72456403000800000050012001a002e00107000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001b04e401a4021c014c010e00000026060f0012004d72456403000800000060032001b004e00107000000
1b04e401b4041c015c030e00000026060f0012004d72456403000800000070052001c006e001070000001b04e401c4061c016c050e00000026060f0012004d72456403000800000030092001800ae001070000001b04e401840a1c012c090e00000026060f0012004d724564030008000000400b2001900ce001070000001b
04e401940c1c013c0b0e00000026060f0012004d72456403000800000060030003800ac003070000001b04c403840afc025c030b00000026060f000c004d72456401000200000000000800000025030200a0028001600380010b00000026060f000c004d72456401000200000000000800000025030200b004800170058001
0b00000026060f000c004d72456401000200000000000800000025030200c0068001200780010b00000026060f000c004d7245640100020000000000080000002503020070088001300980010b00000026060f000c004d72456401000200000000000800000025030200800a8001400b80010b00000026060f000c004d7245
64010002000000000008000000250302002004e001200400030b00000026060f000c004d724564010002000000000008000000250302000006e001000600030b00000026060f000c004d72456401000200000000000800000025030200c009e001c00900030b00000026060f000c004d724564010002000000000008000000
25030200f006c003f006b0040b00000026060f000c004d7245640100020000000000080000002503020030035001600380010b00000026060f000c004d72456401000200000000000800000025030200600380013003b0010b00000026060f000c004d7245640100020000000000080000002503020040055001700580010b
00000026060f000c004d72456401000200000000000800000025030200700580014005b0010b00000026060f000c004d72456401000200000000000800000025030200f0068001200780010b00000026060f000c004d72456401000200000000000800000025030200f0065001200780010b00000026060f000c004d724564
0100020000000000080000002503020020078001f006b0010b00000026060f000c004d7245640100020000000000080000002503020000095001300980010b00000026060f000c004d72456401000200000000000800000025030200300980010009b0010b00000026060f000c004d72456401000200000000000800000025
030200100b5001400b80010b00000026060f000c004d72456401000200000000000800000025030200400b8001100bb0010b00000026060f000c004d72456401000200000000000800000025030200f003d002200400030b00000026060f000c004d72456401000200000000000800000025030200200400035004d0020b00
000026060f000c004d724564010002000000000008000000250302000006d002000600030b00000026060f000c004d72456401000200000000000800000025030200d005d002000600030b00000026060f000c004d72456401000200000000000800000025030200000600033006d0020b00000026060f000c004d72456401
0002000000000008000000250302009009d002c00900030b00000026060f000c004d72456401000200000000000800000025030200c0090003f009d0020b00000026060f000c004d72456401000200000000000800000025030200c0068004f006b0040b00000026060f000c004d7245640100020000000000080000002503
0200f006b00420078004040000002e011800040000000201010016000000fb02b0ff00000000000090010000000000000012482d54696d6573204e657720526f6d616e00375d040000002d0102000b000000320ab0015001070000006e756d626572730010000000fb02a0ff00000000000090010000000000000020537973
74656d0008040000002d01030004000000f00102000b000000320ab00190030800000066696c74657220310b000000320ab001a0050800000066696c74657220320b000000320ab00160090800000066696c746572204e16000000fb02b0ff00000000000090010000000000000012482d54696d6573204e657720526f6d61
6e00375d040000002d01020004000000f00103000b000000320ab001400b08000000636f6e73756d657216000000fb02a0ff00000000000090010000000000000012482d54696d6573204e657720526f6d616e00035d040000002d01030004000000f00102000b000000320a90036006070000006f757470726f6300100000
00fb02a0ff0000000000009001000000000000002053797374656d0008040000002d01020004000000f001030009000000320ab001b007030000002e2e2e000a00000026060f000a00ffffffff01000000000010000000fb021000070000000000bc02000000000102022253797374656d0006040000002d01030004000000
f001020008000000fa02050000000000ffffff00040000002d01020004000000f001010007000000fc020100000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff030000000000131212122116161a211f12210b0b0707120f15120b0b1209070b}}}}}{
\par 
\par 
\par A consumer folyamat fogadja a N -n\'e9l nagyobb sz\'e1mokat, az outproc folyamat pedig a sz\'fbr\'f5 folyamatokt\'f3l kapja meg a pr\'edmsz\'e1mokat.
\par \tab }{\b program }{primes;
\par \tab }{\b const }{N = 10;
\par 
\par \tab }{\b type }{\tab chan = }{\b channel of }{integer;
\par \tab \tab chans = }{\b array}{[1..N] }{\b of }{chan;
\par \tab }{\b var \tab }{pipeline : chans;
\par \tab \tab output : chans;
\par \tab \tab I : integer;
\par 
\par \tab }{\b process }{numbers(}{\b var }{out : chan);
\par \tab \tab (* produces a string of integers *)
\par \tab }{\b var \tab }{I : integer;
\par \tab }{\b begin 
\par \tab \tab }{I := 2;}{\b 
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab repeat
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab \tab }{out ! I
\par \tab \tab \tab I := I + 1}{\b 
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab forever
\par }\pard \qj\widctlpar\adjustright {\b \tab end;}{
\par 
\par \tab }{\b process }{consumer(}{\b var }{into : chan);
\par \tab \tab (* consumes all integers passing through the sieve *)
\par \tab }{\b var \tab }{I : integer;
\par \tab }{\b begin 
\par \tab \tab repeat
\par }{\tab \tab \tab into ? I
\par }{\b \tab \tab forever
\par \tab end;}{
\par \tab }{\b process outproc}{(}{\b var }{outs : chans);
\par \tab \tab (* generates output for the program *)
\par \tab }{\b var \tab }{I, Num : integer;
\par \tab }{\b begin 
\par \tab \tab for }{I := 1}{\b  to }{N}{\b  do
\par }{\tab \tab }{\b begin
\par \tab \tab \tab }{outs[I] ? num;
\par \tab \tab \tab writeln(num)
\par }{\b \tab \tab end
\par \tab end;
\par }{
\par \tab }{\b process type }{elements(}{\b var }{left, right, down : chan);
\par \tab \tab (* implements one filter item *)
\par \tab }{\b var \tab }{p, q : integer;
\par \tab }{\b begin 
\par \tab \tab }{left ? p;
\par \tab \tab down ! p;
\par }{\b \tab \tab repeat
\par }{\tab \tab \tab left ? q
\par \tab \tab \tab }{\b if }{(q }{\b mod }{p <> 0) }{\b then }{right ! q
\par }{\b \tab \tab forever
\par \tab end;
\par 
\par \tab var }{filters : }{\b array}{[1..N] }{\b of }{elements;
\par \tab 
\par \tab }{\b begin
\par \tab \tab cobegin
\par \tab \tab \tab }{numbers(pipeline[0]);
\par \tab \tab \tab consumer(pipeline[N]);
\par \tab \tab \tab }{\b for }{I := 1 }{\b to }{N }{\b do
\par \tab \tab \tab \tab }{filters[I](pipeline[I-1],pipeline[I],output[i]);
\par \tab \tab \tab outproc(output)
\par \tab \tab }{\b coend
\par \tab end.
\par 
\par }{A fenti p\'e9ld\'e1ban a folyamatok k\'f6z\'f6tti interface-t csatorna param\'e9terekkel defini\'e1ltuk. A program v\'e9gtelen ideig dolgozik.
\par 
\par }{\i Szinkroniz\'e1ci\'f3s csatorn\'e1k.
\par }{Konkurens programok eset\'e9ben gyakran van sz\'fcks\'e9g a folyamatok szinkroniz\'e1l\'e1s\'e1ra. Ez is megoldhat\'f3 az \'fczenetv\'e1lt\'f3 eszk\'f6zeink seg\'edts\'e9g\'e9vel viszonylag egyszer\'fben szinkron \'fczenetv\'e1lt\'e1s eset\'e9
n. Aszinkron esetben a probl\'e9ma megold\'e1sa l\'e9nyegesen bonyolultabb. Szinkron esetben aszinkroniz\'e1ci\'f3 t\'e1mogat\'e1s\'e1ra vezess\'fcnk be egy speci\'e1lis el\'f5re defini\'e1lt csatorna t\'edpust, a synchronous t\'edpust. A synchronous t
\'edpusu csatorn\'e1n elk\'fcld\'f6tt \'fczenet tartalma l\'e9nyegtelen, a kommunik\'e1ci\'f3 megt\'f6rt\'e9nte a fontos, ez\'e9rt a ford\'edt\'f3 egy speci\'e1lis t\'edpus\'fa v\'e1ltoz\'f3t aut\'f3matikusan deklar\'e1l minden programhoz. Ez av\'e1ltoz
\'f3 az }{\i any, }{amely synchronous t\'edpus\'fa, \'e9s az \'fczenetv\'e1lt\'f3 utas\'edt\'e1sok jobboldal\'e1n fordulhat el\'f5.
\par 
\par }{\i P\'e9lda.
\par \tab }{\b program }{starters;
\par \tab }{\b type \tab }{syn = }{\b channel of }{synchronous;}{\i 
\par }\pard \qj\widctlpar\adjustright {\tab \tab barriers = }{\b array}{[1.2] }{\b of }{syn;
\par }\pard \qj\widctlpar\adjustright {
\par \tab }{\b var }{\tab barrier : barriers;
\par 
\par \tab }{\b process }{starter;
\par \tab \tab }{\b var }{I : integer;
\par \tab }{\b begin
\par \tab \tab ...
\par \tab \tab for }{I := 1}{\b  to }{2}{\b  do \tab }{barrier[I] ! any;
\par \tab \tab ...
\par \tab }{\b end;
\par 
\par \tab process type }{worker(num : integer);
\par \tab }{\b begin
\par \tab \tab ...
\par \tab \tab }{barrier[num] ? any;
\par \tab \tab ...
\par \tab }{\b end;
\par 
\par \tab var }{workers : }{\b array }{[1.2]}{\b  of }{worker;
\par \tab ....
\par A fenti p\'e9ld\'e1ban a worker folyamatok mindadd\'edg v\'e1rakoznak, am\'edg a starter folyamat jelet nem k\'f6ld az indul\'e1sra.}{\b 
\par }\pard \qj\widctlpar\adjustright {
\par }\pard \qj\widctlpar\adjustright {\i A select utas\'edt\'e1s
\par }{A select utas\'edt\'e1sok olyan fontosak az \'fczenetalap\'fa nyelvekben, mint az if utas\'edt\'e1sok a szekvenci\'e1lis nyelvekben. A select utas\'edt\'e1s sz\'fcks\'e9gess\'e9g\'e9t t\'e1masztja al\'e1 a d\'edszkert probl\'e9ma k\'f6vetkez\'f5 megold
\'e1sa.
\par }{\b \tab program }{gardens3a;
\par \tab }{\b var}{ path1, path2 : }{\b chanel of }{integer;
\par \tab \tab }{\b process }{turnstile1;
\par \tab \tab }{\b var \tab }{loop : integer;
\par \tab \tab }{\b begin
\par \tab \tab \tab for }{loop .= 1}{\b  to }{20}{\b  do }{path1 ! 1
\par \tab \tab }{\b end;\tab }{(* turnstile1 *)
\par 
\par \tab \tab }{\b process }{turnstile2;
\par \tab \tab }{\b var \tab }{loop : integer;
\par \tab \tab }{\b begin
\par \tab \tab \tab for }{loop .= 1}{\b  to }{20}{\b  do }{path2 ! 1
\par \tab \tab }{\b end;\tab }{(* turnstile2 *)
\par 
\par }{\i \tab \tab }{\b process }{counter;
\par \tab \tab }{\b var \tab }{count : integer;
\par \tab \tab \tab I, temp : integer;
\par \tab \tab }{\b begin
\par \tab \tab \tab }{count := 0;
\par \tab \tab \tab }{\b for }{I := 1}{\b  to }{20}{\b  do
\par \tab \tab \tab begin
\par \tab \tab \tab \tab }{path1 ? temp;
\par \tab \tab \tab \tab count := count + temp;
\par \tab \tab \tab \tab path2 ? temp;
\par \tab \tab \tab \tab count := count + temp
\par \tab \tab \tab }{\b end;
\par \tab \tab \tab }{writeln('Total admitted: ',count)
\par \tab \tab }{\b end;
\par }{\i 
\par }\pard \qj\widctlpar\adjustright {\i \tab }{\b begin
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab cobegin
\par \tab \tab \tab }{counter;
\par \tab \tab \tab turnstile1;
\par \tab \tab \tab turnstile2}{\b 
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab coend
\par }\pard \qj\widctlpar\adjustright {\b \tab end.}{\i 
\par }\pard \qj\widctlpar\adjustright {
\par }\pard \qj\widctlpar\adjustright {A fenti megold\'e1snak van egy igen komoly hib\'e1ja. Ha valaki bel\'e9p\'f5jegyet v\'e1ltott az egyes kapun\'e1l, akkor ott \'fajabb jegy akkor adhat\'f3 ki, ha a kettes kapun\'e1l is v\'e1
ltott valaki jegyet, azaz az egyes kapukon a l\'e1togat\'f3k azonos sz\'e1mban \'e9s sebess\'e9ggel haladhatnak \'e1t. Ez ny\'edlv\'e1n elfogadhatatlan megold\'e1s. Select utas\'edt\'e1s n\'e9lk\'fcl enn\'e9l jobb megold\'e1s azonban nehezen tal\'e1lhat
\'f3.
\par A csatorn\'e1k t\'f6mbj\'e9t \'e9s a process t\'edpust haszn\'e1lva a k\'f3d ler\'f6vid\'edthet\'f5 a k\'f6vetkez\'f5 ekvivalens alakra:
\par }{\b \tab program }{gardens3b;
\par \tab }{\b type }{path = }{\b channel of }{integer;
\par \tab }{\b var}{ paths :}{\b array}{[1..2]}{\b  of }{path;
\par \tab \tab }{\b process type }{turnstile(name, num : integer);
\par \tab \tab }{\b var \tab }{loop : integer;
\par \tab \tab }{\b begin
\par \tab \tab \tab for }{loop .= 1}{\b  to }{num}{\b  do }{paths[name] ! 1
\par \tab \tab }{\b end;\tab }{(* turnstile *)
\par \tab \tab }{\b var }{turnstiles : }{\b array}{[1..2] }{\b of }{turnstile;
\par }{\i \tab \tab }{\b process }{counter;
\par \tab \tab }{\b var \tab }{count : integer;
\par \tab \tab \tab I, J, temp : integer;
\par \tab \tab }{\b begin
\par \tab \tab \tab }{count := 0;
\par \tab \tab \tab }{\b for }{I := 1}{\b  to }{20}{\b  do
\par }{\tab \tab \tab \tab }{\b for J}{ := 1}{\b  to }{2}{\b  do
\par \tab \tab \tab \tab begin
\par \tab \tab \tab \tab \tab }{paths[J] ? temp;
\par \tab \tab \tab \tab \tab count := count + temp;
\par \tab \tab \tab \tab }{\b end;
\par \tab \tab \tab }{writeln('Total admitted: ',count)
\par \tab \tab }{\b end;
\par }{\i \tab }{\b begin
\par \tab \tab cobegin
\par \tab \tab \tab }{counter;
\par \tab \tab \tab turnstiles[1](1,20);
\par \tab \tab \tab turnstile[2](2,20)}{\b 
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab coend
\par }\pard \qj\widctlpar\adjustright {\b \tab end.}{\i 
\par }\pard \qj\widctlpar\adjustright {
\par }\pard \qj\widctlpar\adjustright {
\par }{\i Select utas\'edt\'e1s a Pascal-FC nyelvben
\par }{A select utas\'edt\'e1s a Pascal-FC nyelvben nagyon \'e1ltal\'e1nos. Egyes\'edti mag\'e1ban a k\'fcl\'f6nb\'f6z\'f5 nyelvekben l\'e9tez\'f5 select utas\'edt\'e1sok legl\'e9nyegesebb von\'e1sait. A d\'edszkert probl\'e9ma counter folyamata a k\'f6vetkez
\'f5k\'e9ppen defini\'e1lhat\'f3 a select utas\'edt\'e1s seg\'edts\'e9g\'e9vel:
\par }{\i \tab \tab }{\b process }{counter;
\par \tab \tab }{\b var \tab }{count : integer;
\par \tab \tab \tab I, J, temp : integer;
\par \tab \tab }{\b begin
\par \tab \tab \tab }{count := 0;
\par \tab \tab \tab }{\b for }{I := 1}{\b  to }{40}{\b  do
\par \tab \tab \tab begin
\par \tab \tab \tab \tab select
\par \tab \tab \tab \tab \tab }{path1 ? temp;
\par \tab \tab \tab \tab }{\b or}{
\par \tab \tab \tab \tab \tab path2 ? temp;
\par \tab \tab \tab \tab }{\b end;\tab \tab \tab }{(* end select *)
\par \tab \tab \tab \tab count := count + temp
\par }{\b \tab \tab \tab end;
\par \tab \tab \tab }{writeln('Total admitted: ',count)
\par \tab \tab }{\b end;
\par }{\i 
\par }\pard \qj\widctlpar\adjustright {\'c1ltal\'e1ban egy }{\b select }{utas\'edt\'e1sban t\'f6bb alternat\'edva fordulhat el\'f5, amelyeket az }{\b or }{kulcssz\'f3 v\'e1laszt el egym\'e1st\'f3l.Egy select utas\'edt\'e1s v\'e9grehajt\'e1sa ponto
san egy alternat\'edv\'e1j\'e1nak v\'e9grehajt\'e1s\'e1t jelenti. A Pascal-FC nyelv egy random algoritmust haszn\'e1l az alternat\'edva kiv\'e1laszt\'e1s\'e1ra.
\par }\pard \qj\widctlpar\adjustright {Csatorn\'e1k t\'f6mbj\'e9re vonatkoz\'f3 select utas\'edt\'e1st a }{\b for ... replicate }{utas\'edt\'e1ssal r\'f6videbben is le\'edrhatjuk. P\'e9ld\'e1ul a
\par \tab }{\b select
\par \tab \tab }{chan[1] ? V[1];
\par \tab }{\b or
\par \tab \tab }{chan[2] ? V[2];
\par \tab }{\b or
\par \tab \tab }{chan[3] ? V[3];
\par \tab }{\b or
\par \tab \tab }{chan[4] ? V[4];
\par \tab }{\b or
\par  \tab \tab }{another ? T
\par \tab }{\b end
\par }{utas\'edt\'e1s ekvivalens a k\'f6vetkez\'f5vel:
\par \tab }{\b select 
\par \tab \tab for }{I := 1}{\b  to }{4}{\b  replicate
\par \tab \tab \tab }{chan[I] ? V[I];
\par \tab }{\b or
\par \tab \tab }{another ? T
\par \tab }{\b end.
\par }{\'c1ltal\'e1ban egy alternat\'edva t\'edpusa n\'e9gyf\'e9le lehet egy select utas\'edt\'e1son bel\'fcl:
\par \tab - \'fczenet olvas\'f3 alternat\'edva;
\par \tab - \'fczenet k\'fcld\'f5 alternat\'edva;
\par \tab - }{\b timeout }{alternat\'edva;
\par \tab - }{\b terminate }{alternat\'edva.
\par Tov\'e1bb\'e1 egy select utas\'edt\'e1s tartalmazhat egy default }{\b else }{alternat\'edv\'e1t is.
\par Ha a select utas\'edt\'e1s v\'e9grehajt\'e1sa k\'f6zben nincs ready alternat\'edva ( \'e9s a select utas\'edt\'e1snak nincs }{\b else }{alternat\'edv\'e1ja), akkor a select utas\'edt\'e1st v\'e9grehajt\'f3 folyamatot mindadd\'edg felf\'fcggesztj\'fck, am
\'edg az alternat\'edv\'e1k egyike ready \'e1llapot\'fa nem lesz
\par 
\par }{\i \'d5rfelt\'e9teles alternat\'edv\'e1k (guarded alternatives)
\par }{A konkurens programoz\'e1sban el\'f5fordulnak olyan feladatok, amelyek \'f5rfelt\'e9telek n\'e9lk\'fcl eleg\'e1nsan nem oldhat\'f3k meg. Ilyen nevezetes feladat p\'e9ld\'e1ul a termel\'f5/fogyaszt\'f3 probl\'e9ma. Ennek l\'e9nyege a k\'f6vetkez\'f5
. A termel\'f5 folyamat megtermel bizonyos adagokat, amelyet egy pufferbe t\'e1rol a fogyaszt\'f3 folyamat sz\'e1m\'e1ra. A rendszer akkor m\'fbk\'f6dik helyesen, ha a fogyaszt\'f3 csak a megtermelt adagokat fogyasztja el a termel\'e9s sorrendj\'e9
ben. A termel\'f5 folyamat viszont v\'e1rakozik, ha a puffer \'e9ppen tele van. A feladatot tipikusan \'f5rfelt\'e9teles alternat\'edv utas\'edt\'e1ssal lehet j\'f3l megoldani.
\par \tab A select utas\'edt\'e1s egy alternat\'edv\'e1j\'e1ban el\'f5fordul\'f3 \'f5rfelt\'e9tel \'e1ltal\'e1nos alakja a k\'f6vetkez\'f5:
\par \tab }{\b when }{boolean_expression =>
\par A select utas\'edt\'e1s alternat\'edv\'e1iban el\'f5fordul\'f3 \'f5rfelt\'e9teleket a select utas\'edt\'e1s v\'e9grehajt\'e1s\'e1nak kezdetekor egyszerre ki\'e9rt\'e9kelj\'fck. Ha az \'f5rfelt\'e9tel igaz akkor az adott alternat\'edva nyitott, ha a felt
\'e9tel hamis az alternat\'edva z\'e1rt. A z\'e1rt alternat\'edv\'e1kat a select utas\'edt\'e1s v\'e9grahajt\'e1s\'e1nak h\'e1tral\'e9v\'f5 r\'e9sz\'e9ben ignor\'e1ljuk. Egy \'f5rfelt\'e9tel n\'e9lk\'fcli alternat\'edva mind\'edg nyitott. 
\par \tab A termel\'f5/fogyaszt\'f3 probl\'e9ma megold\'e1s\'e1ban kulcsszerepet j\'e1tsz\'f3 buffer folyamat a k\'f6vetkez\'f5:
\par \tab }{\b process }{buffer(}{\b var }{put, get : intchan);
\par \tab }{\b var \tab }{BUFF: }{\b array}{[0..31] }{\b of }{integer;
\par \tab \tab TOP, BASE : integer;
\par \tab \tab CONTENTS : integer;
\par \tab }{\b begin
\par \tab \tab }{TOP := 0;
\par \tab \tab BASE := 0;
\par \tab \tab CONTENTS := 0;
\par \tab \tab }{\b repeat
\par \tab \tab \tab select
\par \tab \tab \tab \tab when }{CONTENTS < 32 =>
\par \tab \tab \tab \tab put ? BUFF[TOP];
\par \tab \tab \tab \tab TOP := (TOP + 1) }{\b mod }{32;
\par \tab \tab \tab \tab CONTENTS := CONTENTS + 1;
\par \tab \tab \tab }{\b or
\par \tab \tab \tab \tab when }{CONTENTS > 0 =>
\par \tab \tab \tab \tab get ! BUFF[BASE];
\par \tab \tab \tab \tab BASE := (BASE + 1) }{\b mod }{32;
\par \tab \tab \tab \tab CONTENTS := CONTENTS - 1;
\par \tab \tab \tab }{\b end
\par \tab \tab forever
\par \tab end;}{
\par }{\b 
\par }\pard \qj\widctlpar\adjustright {\i A terminate alternat\'edva
\par }\pard \qj\widctlpar\adjustright {A fenti termel\'f5/fogyaszt\'f3 probl\'e9ma j\'f3l r\'e1vil\'e1g\'edt a terminate alternat\'edva sz\'fcks\'e9gess\'e9g\'e9re. A konkurens programokban az entit\'e1sok akt\'edvak vagy passzivak lehetnek. Az \'fczenetv\'e1
lt\'f3 modellben mind az akt\'edv mind a passziv entit\'e1sok megjelen\'e9si form\'e1ja a folyamat. Az akt\'edv folyamatok termin\'e1l\'e1sa nem problematikus, mivel saj\'e1t maguk vez\'e9rlik v\'e9grehajt\'e1sukat, \'edgy \'f6n\'e1ll\'f3 d\'f6nt\'e9
si joguk van mikor termin\'e1lnak. M\'e1s a helyzet a passz\'edv folyamatokkal. Ide\'e1lis esetben akkor termin\'e1lhatnak, ha nincs r\'e1juk sz\'fcks\'e9g t\'f6bb\'e9. A k\'e9rd\'e9s csak az, hogyan programozzuk be a passz\'ed
v folyamatokba azt a plusz tud\'e1st, ami alapj\'e1n eld\'f6ntheti egy folyamat, hogy termin\'e1lhat-e m\'e1r vagy sem. Burns 1988-ban kimutatta, hogy a bonyolult programok eset\'e9ben a termin\'e1l\'e1s igen problematikus, k\'f6nny\'fb olyan hib\'e1
s programot \'edrni, ahol a passz\'edv folyamatok t\'fal kor\'e1n termin\'e1lnak, \'e9s ez\'e1ltal az akt\'edv folyamatok \'f6r\'f6kre blokkolt \'e1llapotba ker\'fclhetnek, azaz holtpont l\'e9het fel. A prbl\'e9ma megold\'e1sa viszonylag egyszer\'fb
 a terminate alternat\'edva bevezet\'e9s\'e9vel a select utas\'edt\'e1sban. A m\'f3dos\'edt\'e1s l\'e9nyege a k\'f6vetkez\'f5:
\par A passz\'edv folyamatokban egy 
\par \tab \tab \tab in ? SomeVariable
\par alternat\'edva helyett haszn\'e1ljuk a k\'f6vetkez\'f5t:
\par \tab \tab \tab }{\b select
\par \tab \tab \tab \tab }{in ? SomeVariable
\par }{\b \tab \tab \tab or
\par \tab \tab \tab \tab terminate
\par \tab \tab \tab end
\par }{A terminate alternat\'edva szemantik\'e1ja nem azt mondja ki, hogy az adott task termin\'e1lni fog, ha \'e9ppen nincs fen\'e1ll\'f3 h\'edv\'e1s az alternat\'edv\'e1ra. Ezt szokt\'e1k \'e1ltal\'e1ban f\'e9lre\'e9rteni azok, akik el\'f5sz\'f6r tal\'e1
lkoznak a konstrukci\'f3val.
\par 
\par A terminate alternat\'edva }{\b szemantik\'e1ja }{a k\'f6vetkez\'f5:
\par \tab Egy terminate alternat\'edv\'e1t tartalmaz\'f3 select utas\'edt\'e1s akkor \'e9s csak akkor \tab termin\'e1l, ha nincs fenn\'e1ll\'f3 h\'edv\'e1s egyik alternat\'edv\'e1ra sem \'e9s az \'f6sszes olyan \tab folyamat, ami egy alternat\'edv\'e1t h\'ed
vhatna vagy m\'e1r maga is termin\'e1lt, vagy egy \tab olyan select utas\'edt\'e1son v\'e1rakozik, aminek nincs terminate alternat\'edv\'e1ja.
\par 
\par A Pascal-FC nyelvben a fenti szementika megval\'f3s\'edt\'e1sa viszonylag egyszer\'fb. Ugyanis, ha az \'fctemez\'f5 azt tal\'e1lja, hogy nincs \'fctemezhet\'f5 folyamat, akkor a k\'f6vetkez\'f5 h\'e1rom eset valamelyike \'e1ll fenn:
\par 
\par (i) \tab minden folyamat termin\'e1lt;
\par (ii) \tab bizonyos folyamatok felf\'fcggeszt\'f5dtek csatornam\'fbveleteken, vagy olyan \tab egyszer\'fb select utas\'edt\'e1sokon, amelyeknek nincs terminate alternat\'edv\'e1juk;
\par (iii)\tab minden, eddig nem termin\'e1lt folyamat olyan select utas\'edt\'e1son f\'fcggeszt\'f5d\'f6tt fel \tab aminek van terminate alternat\'edv\'e1ja.
\par 
\par Ha az (i) felt\'e9tel teljes\'fcl, akkor a }{\b cobegin/coend }{utas\'edt\'e1s maga is termin\'e1lhat \'e9s folytat\'f3dhat a program szekvenci\'e1lis r\'e9sz\'e9nek v\'e9grehajt\'e1sa. A (ii) felt\'e9tel fenn\'e1ll\'e1sa eset\'e9
n a program holtpontba ker\'fclt, abort\'e1land\'f3. A (iii) felt\'e9tel teljes\'fcl\'e9se nem jelent valamilyen hib\'e1t. Ebben az esetben az \'f6sszes felf\'fcggesztett folyamatot termin\'e1ljuk \'e9s a program v\'e9grehajt\'e1sa a szekvenci\'e1lis r
\'e9sz v\'e9grehajt\'e1s\'e1val folytat\'f3dik.
\par }{\b \tab }{A }{\b select }{utas\'edt\'e1s \'e9s annak }{\b terminate }{alternat\'edv\'e1j\'e1nak bevezet\'e9se ut\'e1n a folyamatok \'e1llapotdiagramja a k\'f6vetkez\'f5 m\'f3don terjeszthet\'f5 ki:
\par 
\par \tab \tab }{\pard\plain \qj\widctlpar\adjustright \cgrid {\object\objemb\rsltmerge\objw4361\objh3281{\*\objclass MSDraw}{\*\objdata 0105000002000000070000004d5344726177000000000000000000000a0000
08000b1e9a16010009000003e304000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a00000026060f00a9004d72456402009f0000009d0001002a0037007c0298010000000000000100030000000000ffffff0000000000ffffff000100
000100000001000000000001000000000000010c0053797374656d0003008a00ff00290003015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e0000002606
0f0012004d7245640300080000003802280008094805050000000b0228003802050000000c022005d006030000001e000400000003010800050000000102ffffff000500000009020000000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f001200ffff
ffff00000800000038022800080948050e00000026060f0012004d724564030008000000800430000006200107000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001804240104062c007c040e00000026060f0012004d7245640300080000008004
800100067002070000001804740204067c017c040e00000026060f0012004d7245640300080000008004d0020006c003070000001804c4030406cc027c040e00000026060f0012004d7245640300080000008007d0020009c003070000001804c4030409cc027c070e00000026060f0012004d7245640300080000008007
800100097002070000001804740204097c017c070e00000026060f0012004d7245640300080000008007300000092001070000001804240104092c007c070b00000026060f000c004d7245640100020000000000080000002503020040052001400580010b00000026060f000c004d724564010002000000000008000000
250302004005d002400570020b00000026060f000c004d7245640100020000000000080000002503020000066003800760030b00000026060f000c004d72456401000200000000000800000025030200400870024008d0020b00000026060f000c004d724564010002000000000008000000250302004008200140088001
0b00000026060f000c004d7245640100020000000000080000002503020010055001400580010b00000026060f000c004d7245640100020000000000080000002503020040058001700550010b00000026060f000c004d724564010002000000000008000000250302001005a0024005d0020b00000026060f000c004d72
4564010002000000000008000000250302004005d0027005a0020b00000026060f000c004d7245640100020000000000080000002503020050073003800760030b00000026060f000c004d7245640100020000000000080000002503020080076003500790030b00000026060f000c004d72456401000200000000000800
00002503020040082001100820010b00000026060f000c004d7245640100020000000000080000002503020010085001400820010b00000026060f000c004d7245640100020000000000080000002503020040082001700850010b00000026060f000c004d724564010002000000000008000000250302004008a0024008
70020b00000026060f000c004d72456401000200000000000800000025030200400870027008a0020b00000026060f000c004d72456401000200000000000800000025030200400870021008a002040000002e011800040000000201010016000000fb02c0ff00000000000090010000000000000012482d54696d657320
4e657720526f6d616e00fb6e040000002d0102000b000000320a1002b0040700000043726561746564000c000000320a6003b0040a00000045786563757461626c650c000000320a6003b0070a0000005465726d696e617465640c000000320a1002b0070900000044657374726f7965640009000000320a9000b0040400
00004e6f6e2d09000000320a9000b007040000004e6f6e2d16000000fb02b0ff00000000000090010000000000000012482d54696d6573204e657720526f6d616e00a46e040000002d01030004000000f00102000b000000320af000b004080000006578697374696e670b000000320af000b00708000000657869737469
6e670e00000026060f0012004d72456403000800000080045004000640050400000002010200070000001804440504064c047c040b00000026060f000c004d724564010002000000000008000000250302004005c003400550040b00000026060f000c004d72456401000200000000000800000025030200100520044005
50040b00000026060f000c004d7245640100020000000000080000002503020040055004700520040b00000026060f000c004d724564010002000000000008000000250302001005f0034005c0030b00000026060f000c004d724564010002000000000008000000250302004005c0037005f00304000000020101001600
0000fb02c0ff00000000000090010000000000000012482d54696d6573204e657720526f6d616e00fb6e040000002d01020004000000f00103000c000000320ae004b0040900000053757370656e646564000e00000026060f0012004d7245640300080000004002d002c003c0030400000002010200070000001804c403
c403cc023c020b00000026060f000c004d72456401000200000000000800000025030200c0033003800430030b00000026060f000c004d72456401000200000000000800000025030200f0030003c00330030b00000026060f000c004d72456401000200000000000800000025030200c0033003f00360030b0000002606
0f000c004d7245640100020000000000080000002503020050040003800430030b00000026060f000c004d72456401000200000000000800000025030200800430035004600304000000020101000b000000320a600370020700000044656c61796564000b00000026060f000c004d724564010002000000000008000000
250302000006b004e007c0030b00000026060f000c004d724564010002000000000008000000250302008007c003e007c0030b00000026060f000c004d72456401000200000000000800000025030200e007c003b007f0030a00000026060f000a00ffffffff01000000000010000000fb021000070000000000bc020000
00000102022253797374656d0006040000002d01030004000000f001020008000000fa02050000000000ffffff00040000002d01020004000000f001010007000000fc020100000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff03000000000000000700c70a00000300d40a
00000300e10a00000300ee0a0000c0b2093908b8ffc0400e093915101939192011390d203c3c2a2b01050000050000000d0000004d45544146494c4550494354000b1e000066e9ffffd009000008000b1e9a160000
010009000003e304000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a00000026060f00a9004d72456402009f0000009d0001002a0037007c0298010000000000000100030000000000ffffff0000000000ffffff000100000100000001
000000000001000000000000010c0053797374656d0003008a00ff00290003015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d72
45640300080000003802280008094805050000000b0228003802050000000c022005d006030000001e000400000003010800050000000102ffffff000500000009020000000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f001200ffffffff00000800
000038022800080948050e00000026060f0012004d724564030008000000800430000006200107000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001804240104062c007c040e00000026060f0012004d7245640300080000008004800100067002
070000001804740204067c017c040e00000026060f0012004d7245640300080000008004d0020006c003070000001804c4030406cc027c040e00000026060f0012004d7245640300080000008007d0020009c003070000001804c4030409cc027c070e00000026060f0012004d7245640300080000008007800100097002
070000001804740204097c017c070e00000026060f0012004d7245640300080000008007300000092001070000001804240104092c007c070b00000026060f000c004d7245640100020000000000080000002503020040052001400580010b00000026060f000c004d724564010002000000000008000000250302004005
d002400570020b00000026060f000c004d7245640100020000000000080000002503020000066003800760030b00000026060f000c004d72456401000200000000000800000025030200400870024008d0020b00000026060f000c004d7245640100020000000000080000002503020040082001400880010b0000002606
0f000c004d7245640100020000000000080000002503020010055001400580010b00000026060f000c004d7245640100020000000000080000002503020040058001700550010b00000026060f000c004d724564010002000000000008000000250302001005a0024005d0020b00000026060f000c004d72456401000200
0000000008000000250302004005d0027005a0020b00000026060f000c004d7245640100020000000000080000002503020050073003800760030b00000026060f000c004d7245640100020000000000080000002503020080076003500790030b00000026060f000c004d72456401000200000000000800000025030200
40082001100820010b00000026060f000c004d7245640100020000000000080000002503020010085001400820010b00000026060f000c004d7245640100020000000000080000002503020040082001700850010b00000026060f000c004d724564010002000000000008000000250302004008a002400870020b000000
26060f000c004d72456401000200000000000800000025030200400870027008a0020b00000026060f000c004d72456401000200000000000800000025030200400870021008a002040000002e011800040000000201010016000000fb02c0ff00000000000090010000000000000012482d54696d6573204e657720526f
6d616e00fb6e040000002d0102000b000000320a1002b0040700000043726561746564000c000000320a6003b0040a00000045786563757461626c650c000000320a6003b0070a0000005465726d696e617465640c000000320a1002b0070900000044657374726f7965640009000000320a9000b004040000004e6f6e2d
09000000320a9000b007040000004e6f6e2d16000000fb02b0ff00000000000090010000000000000012482d54696d6573204e657720526f6d616e00a46e040000002d01030004000000f00102000b000000320af000b004080000006578697374696e670b000000320af000b007080000006578697374696e670e000000
26060f0012004d72456403000800000080045004000640050400000002010200070000001804440504064c047c040b00000026060f000c004d724564010002000000000008000000250302004005c003400550040b00000026060f000c004d7245640100020000000000080000002503020010052004400550040b000000
26060f000c004d7245640100020000000000080000002503020040055004700520040b00000026060f000c004d724564010002000000000008000000250302001005f0034005c0030b00000026060f000c004d724564010002000000000008000000250302004005c0037005f003040000000201010016000000fb02c0ff
00000000000090010000000000000012482d54696d6573204e657720526f6d616e00fb6e040000002d01020004000000f00103000c000000320ae004b0040900000053757370656e646564000e00000026060f0012004d7245640300080000004002d002c003c0030400000002010200070000001804c403c403cc023c02
0b00000026060f000c004d72456401000200000000000800000025030200c0033003800430030b00000026060f000c004d72456401000200000000000800000025030200f0030003c00330030b00000026060f000c004d72456401000200000000000800000025030200c0033003f00360030b00000026060f000c004d72
45640100020000000000080000002503020050040003800430030b00000026060f000c004d72456401000200000000000800000025030200800430035004600304000000020101000b000000320a600370020700000044656c61796564000b00000026060f000c004d724564010002000000000008000000250302000006
b004e007c0030b00000026060f000c004d724564010002000000000008000000250302008007c003e007c0030b00000026060f000c004d72456401000200000000000800000025030200e007c003b007f0030a00000026060f000a00ffffffff01000000000010000000fb021000070000000000bc020000000001020222
53797374656d0006040000002d01030004000000f001020008000000fa02050000000000ffffff00040000002d01020004000000f001010007000000fc020100000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff0300000000000000}{\result {
{\pict\wmetafile8\picw7691\pich5786\picwgoal4361\pichgoal3281 
010009000003e304000004005a00000000001500000026060f001f00ffffffff0400150000004d7245640f004d6963726f736f6674204472617700005a00000026060f00a9004d72456402009f0000009d0001002a0037007c0298010000000000000100030000000000ffffff0000000000ffffff00010000010000000100
0000000001000000000000010c0053797374656d0003008a00ff00290003015f0b020011000301af0d0200120003100000000000ffffff00c0c0c00080808000ff00000080000000ffff00008080000000ff00000080000000ffff00008080000000ff0000008000ff00ff0080008000000e00000026060f0012004d724564
0300080000003802280008094805050000000b0228003802050000000c022005d006030000001e000400000003010800050000000102ffffff000500000009020000000004000000070103000400000004010d0004000000060101000400000002010200030000001e000e00000026060f001200ffffffff00000800000038
022800080948050e00000026060f0012004d724564030008000000800430000006200107000000fc020000ffffff00ffff040000002d01000008000000fa0206000800080000000000040000002d010100070000001804240104062c007c040e00000026060f0012004d724564030008000000800480010006700207000000
1804740204067c017c040e00000026060f0012004d7245640300080000008004d0020006c003070000001804c4030406cc027c040e00000026060f0012004d7245640300080000008007d0020009c003070000001804c4030409cc027c070e00000026060f0012004d72456403000800000080078001000970020700000018
04740204097c017c070e00000026060f0012004d7245640300080000008007300000092001070000001804240104092c007c070b00000026060f000c004d7245640100020000000000080000002503020040052001400580010b00000026060f000c004d724564010002000000000008000000250302004005d00240057002
0b00000026060f000c004d7245640100020000000000080000002503020000066003800760030b00000026060f000c004d72456401000200000000000800000025030200400870024008d0020b00000026060f000c004d7245640100020000000000080000002503020040082001400880010b00000026060f000c004d7245
640100020000000000080000002503020010055001400580010b00000026060f000c004d7245640100020000000000080000002503020040058001700550010b00000026060f000c004d724564010002000000000008000000250302001005a0024005d0020b00000026060f000c004d724564010002000000000008000000
250302004005d0027005a0020b00000026060f000c004d7245640100020000000000080000002503020050073003800760030b00000026060f000c004d7245640100020000000000080000002503020080076003500790030b00000026060f000c004d7245640100020000000000080000002503020040082001100820010b
00000026060f000c004d7245640100020000000000080000002503020010085001400820010b00000026060f000c004d7245640100020000000000080000002503020040082001700850010b00000026060f000c004d724564010002000000000008000000250302004008a002400870020b00000026060f000c004d724564
01000200000000000800000025030200400870027008a0020b00000026060f000c004d72456401000200000000000800000025030200400870021008a002040000002e011800040000000201010016000000fb02c0ff00000000000090010000000000000012482d54696d6573204e657720526f6d616e00fb6e040000002d
0102000b000000320a1002b0040700000043726561746564000c000000320a6003b0040a00000045786563757461626c650c000000320a6003b0070a0000005465726d696e617465640c000000320a1002b0070900000044657374726f7965640009000000320a9000b004040000004e6f6e2d09000000320a9000b0070400
00004e6f6e2d16000000fb02b0ff00000000000090010000000000000012482d54696d6573204e657720526f6d616e00a46e040000002d01030004000000f00102000b000000320af000b004080000006578697374696e670b000000320af000b007080000006578697374696e670e00000026060f0012004d724564030008
00000080045004000640050400000002010200070000001804440504064c047c040b00000026060f000c004d724564010002000000000008000000250302004005c003400550040b00000026060f000c004d7245640100020000000000080000002503020010052004400550040b00000026060f000c004d72456401000200
00000000080000002503020040055004700520040b00000026060f000c004d724564010002000000000008000000250302001005f0034005c0030b00000026060f000c004d724564010002000000000008000000250302004005c0037005f003040000000201010016000000fb02c0ff000000000000900100000000000000
12482d54696d6573204e657720526f6d616e00fb6e040000002d01020004000000f00103000c000000320ae004b0040900000053757370656e646564000e00000026060f0012004d7245640300080000004002d002c003c0030400000002010200070000001804c403c403cc023c020b00000026060f000c004d7245640100
0200000000000800000025030200c0033003800430030b00000026060f000c004d72456401000200000000000800000025030200f0030003c00330030b00000026060f000c004d72456401000200000000000800000025030200c0033003f00360030b00000026060f000c004d724564010002000000000008000000250302
0050040003800430030b00000026060f000c004d72456401000200000000000800000025030200800430035004600304000000020101000b000000320a600370020700000044656c61796564000b00000026060f000c004d724564010002000000000008000000250302000006b004e007c0030b00000026060f000c004d72
4564010002000000000008000000250302008007c003e007c0030b00000026060f000c004d72456401000200000000000800000025030200e007c003b007f0030a00000026060f000a00ffffffff01000000000010000000fb021000070000000000bc02000000000102022253797374656d0006040000002d010300040000
00f001020008000000fa02050000000000ffffff00040000002d01020004000000f001010007000000fc020100000000000000040000002d01010004000000f0010000040000002701ffff040000002701ffff03000000000000000700c70a00000300d40a00000300e10a00000300ee0a0000}}}}}{
\par 
\par Egy folyamat a k\'f6vetkez\'f3 okok miatt v\'e1lhat blokkoltt\'e1:
\par (1)\tab egy sleep elj\'e1r\'e1st hajt \'e9ppen v\'e9gre;
\par (2) \tab egy csatorn\'e1n olvasni akar, de a partner \'e9ppen nem akar \'edrni az adott \tab csatorn\'e1n;
\par (3)\tab egy csatorn\'e1n \'edrni akar, de a partner \'e9ppen nem akar olvasni az adott \tab csatorn\'e1r\'f3l;
\par (4)\tab egy egyszer\'fb select utas\'edt\'e1st hajt v\'e9gre, amelyben \'e9ppen nincs egyetlen olyan \tab nyitott alternativa, ami azonnal randev\'fahoz vezethetne;
\par (5)\tab egy terminate alternat\'edv\'e1val b\'edr\'f3 select utas\'edt\'e1st hajt \'e9ppen v\'e9gre, amelyben \tab nincs olyan nyitott alternat\'edva azonnal rendev\'fahoz vezethetne.
\par 
\par Az \'e1llapotdiagram Delayed \'e1llapota az (1) esetnek felel meg. A t\'f6bbi esetben a folyamat Suspended \'e1llapotba ker\'fcl. A Suspended \'e1llapotb\'f3l a Terminated \'e1llapotba az (5) eset\'e9n lehets\'e9ges az \'e1tmenet.
\par A termel\'f5/fogyaszt\'f3 probl\'e9ma buffer folyamata a termin\'e1l\'e1st is figyelve a kovetkez\'f5k\'e9ppen k\'f3dolhat\'f3:
\par \tab }{\b process }{buffer(}{\b var }{put, get : intchan);
\par \tab }{\b var \tab }{BUFF: }{\b array}{[0..31] }{\b of }{integer;
\par \tab \tab TOP, BASE : integer;
\par \tab \tab CONTENTS : integer;
\par \tab }{\b begin
\par \tab \tab }{TOP := 0;
\par \tab \tab BASE := 0;
\par \tab \tab CONTENTS := 0;
\par 
\par \tab \tab }{\b repeat
\par \tab \tab \tab select
\par \tab \tab \tab \tab when }{CONTENTS < 32 =>
\par \tab \tab \tab \tab put ? BUFF[TOP];
\par \tab \tab \tab \tab TOP := (TOP + 1) }{\b mod }{32;
\par \tab \tab \tab \tab CONTENTS := CONTENTS + 1;
\par \tab \tab \tab }{\b or
\par \tab \tab \tab \tab when }{CONTENTS > 0 =>
\par \tab \tab \tab \tab get ! BUFF[BASE];
\par \tab \tab \tab \tab BASE := (BASE + 1) }{\b mod }{32;
\par \tab \tab \tab \tab CONTENTS := CONTENTS - 1;
\par \tab \tab \tab }{\b or
\par \tab \tab \tab \tab terminate}{
\par \tab \tab \tab }{\b end
\par \tab \tab forever
\par \tab end;}{
\par  
\par A buffer folyamat akkor termin\'e1l, ha mind a termel\'f5, mind a fogyaszt\'f3 folyamat termin\'e1lt. A buffer ez esetben akkor is termin\'e1l, ha maradt el nem fogyasztott adag.
\par 
\par T\'e9rj\'fcnk vissza a d\'edszkert probl\'e9m\'e1hoz. A counter folyamat passz\'edv a turnstile1 ill. turstile2 folyamatok akt\'edvak. A terminate alternat\'edva n\'e9lk\'fcl az akt\'edv folyamatoknak jelezni kell. hogy termin\'e1ltak. Erre a c\'e9
lra haszn\'e1lhatjuk p\'e9ld\'e1ul a m\'e1r ismert synchronous csatorn\'e1kat, p\'e9ld\'e1ul ak\'f6vetkez\'f5 m\'f3don:
\par \tab \tab }{\b process type }{turnstile(name, num : integer);
\par \tab \tab }{\b var \tab }{loop : integer;
\par \tab \tab }{\b begin
\par \tab \tab \tab for }{loop .= 1}{\b  to }{num}{\b  do 
\par \tab \tab \tab \tab }{paths[name] ! 1;
\par \tab \tab \tab closedown[name] ! any
\par \tab \tab }{\b end;\tab \tab \tab \tab }{(* turnstile *)
\par A k\'f3dban szerepl\'f5 closedown t\'f6mb synchronous t\'edpus\'fa csatorn\'e1k egy t\'f6mbje. A counter folyamat akkor terminal, ha mindk\'e9t closedown csatorn\'e1n megkapta a termin\'e1l\'e1s jel\'e9t:}{\i 
\par }\pard \qj\widctlpar\adjustright {\i \tab \tab }{\b process }{counter;
\par }\pard \qj\widctlpar\adjustright {\tab \tab }{\b var \tab }{count : integer;
\par \tab \tab \tab I, J, temp : integer;
\par \tab \tab \tab continue : }{\b array}{[1,2] }{\b of }{boolean;
\par \tab \tab }{\b begin
\par \tab \tab \tab }{count := 0;
\par \tab \tab \tab continue[1] : = true;
\par \tab \tab \tab contunie[2] : = true;
\par }{\b \tab \tab \tab while }{continue[1] }{\b or }{contunie[2] }{\b do}{
\par }{\b \tab \tab \tab \tab select
\par \tab \tab \tab \tab \tab }{paths[1] ? temp;
\par \tab \tab \tab \tab \tab count := count + temp;
\par \tab \tab \tab \tab }{\b or
\par \tab \tab \tab \tab \tab }{paths[2] ? temp;
\par \tab \tab \tab \tab \tab count := count + temp;
\par \tab \tab \tab \tab }{\b or
\par \tab \tab \tab \tab \tab }{closedown[1] ? any;
\par \tab \tab \tab \tab \tab continue[1] := false;}{\b 
\par }\pard \qj\widctlpar\adjustright {\tab \tab \tab \tab }{\b or
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab \tab \tab \tab }{closedown[2] ? any;
\par \tab \tab \tab \tab \tab continue[2] := false;}{\b 
\par }\pard \qj\widctlpar\adjustright {\tab \tab \tab \tab }{\b end;\tab \tab }{\tab (* end select *)}{\b 
\par \tab \tab \tab }{writeln('Total admitted: ',count)
\par }\pard \qj\widctlpar\adjustright {\tab \tab }{\b end;
\par }{
\par A terminate alternat\'edva haszn\'e1lat\'e1val egyszer\'fbbb \'e9s ez\'e1ltal kevesebb hibalehet\'f5s\'e9get tartalmaz\'f3 megold\'e1shoz juthatunk:
\par }{\i \tab \tab }{\b process }{counter;
\par \tab \tab }{\b var \tab }{count : integer;
\par \tab \tab \tab I, J, temp : integer;
\par \tab \tab \tab }{\b begin
\par \tab \tab \tab }{count := 0;
\par }{\b \tab \tab \tab repeat
\par \tab \tab \tab \tab select
\par \tab \tab \tab \tab \tab }{paths[1] ? temp;
\par \tab \tab \tab \tab }{\b or
\par \tab \tab \tab \tab \tab }{paths[2] ? temp;
\par \tab \tab \tab \tab }{\b or
\par \tab \tab \tab \tab \tab terminate
\par }{\tab \tab \tab \tab }{\b end;\tab \tab }{\tab (* end select *)}{\b 
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab \tab \tab }{count := count + temp
\par }\pard \qj\widctlpar\adjustright {\tab \tab \tab }{\b forever;
\par \tab \tab \tab }{writeln('Total admitted: ',count)
\par \tab \tab }{\b end;
\par }{
\par Ennek amegold\'e1snak van azonban egy igen nagy hib\'e1ja. B\'e1r a program korrekt\'fcl fog termin\'e1lni, eredm\'e9nyt azonban egy\'e1ltal\'e1n nem ad, mivel a writeln utas\'edt\'e1sra sohasem ker\'fcl avez\'e9rl\'e9s. A probl\'e9ma \'fagy oldhat\'f3
 meg, hogy a sz\'e1ml\'e1l\'f3t megtessz\'fck a counter folyamat param\'e9ter\'e9nek:
\par \tab \tab ...
\par }{\i \tab \tab }{\b process }{counter(}{\b var }{count : integer);
\par \tab \tab }{\b var \tab }{I, J, temp : integer;
\par \tab \tab }{\b begin
\par \tab \tab \tab repeat
\par \tab \tab \tab \tab select
\par \tab \tab \tab \tab \tab }{paths[1] ? temp;
\par \tab \tab \tab \tab }{\b or
\par \tab \tab \tab \tab \tab }{paths[2] ? temp;
\par \tab \tab \tab \tab }{\b or
\par \tab \tab \tab \tab \tab terminate
\par }{\tab \tab \tab \tab }{\b end;\tab \tab }{\tab (* end select *)}{\b 
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab \tab \tab }{count := count + temp
\par }\pard \qj\widctlpar\adjustright {\tab \tab \tab }{\b forever;
\par }{\tab \tab }{\b end;
\par }{\i \tab }{\b begin
\par \tab \tab }{number := 0;
\par }{\b \tab \tab cobegin
\par \tab \tab \tab }{counter(number);
\par \tab \tab \tab turnstile[1](1,20);
\par \tab \tab \tab turnstile[2](2,20)}{\b 
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab coend
\par }\pard \qj\widctlpar\adjustright {\b \tab \tab }{writeln('Total admitted: ',number)
\par }{\b \tab end.
\par 
\par }{\i Az else \'e9s a timeout alternat\'edv\'e1k
\par 
\par }{
\par }}